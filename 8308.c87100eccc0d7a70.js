(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8308],{94662:c=>{c.exports={snippet:'<span class="token selector">ux-column-picker</span> <span class="token punctuation">{</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:"ux-column-picker {\n    height: 500px;\n}"}},58300:c=>{c.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-column-picker</span> <span class="token attr-name">[(selected)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selected<span class="token punctuation">"</span></span>\n    <span class="token attr-name">[(deselected)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deselected<span class="token punctuation">"</span></span>\n    <span class="token attr-name">[locked]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>locked<span class="token punctuation">"</span></span>\n    <span class="token attr-name">[groups]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>groups<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-column-picker</span><span class="token punctuation">></span></span>\n',example:'<ux-column-picker [(selected)]="selected"\n    [(deselected)]="deselected"\n    [locked]="locked"\n    [groups]="groups">\n</ux-column-picker>\n'}},13009:c=>{c.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ColumnPickerGroup<span class="token punctuation">,</span> ColumnPickerGroupItem <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    <span class="token comment">/** Store a list of all selected columns */</span>\n    selected<span class="token operator">:</span> ReadonlyArray<span class="token operator">&lt;</span>string<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token string">\'Type\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'Date\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'Requested by\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'Status\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'Completion\'</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token comment">/** Store a list of columns that must be selected */</span>\n    locked<span class="token operator">:</span> ReadonlyArray<span class="token operator">&lt;</span>string<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'ID\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token comment">/** Store a list of columns that are not selected or locked */</span>\n    deselected<span class="token operator">:</span> ReadonlyArray<span class="token operator">&lt;</span>string <span class="token operator">|</span> ColumnPickerGroupItem<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span> group<span class="token operator">:</span> <span class="token string">\'Metadata\'</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">\'Author\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span> group<span class="token operator">:</span> <span class="token string">\'Metadata\'</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">\'Category\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span> group<span class="token operator">:</span> <span class="token string">\'Metadata\'</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">\'Date Created\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span> group<span class="token operator">:</span> <span class="token string">\'Metadata\'</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">\'Date Modified\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span> group<span class="token operator">:</span> <span class="token string">\'Metadata\'</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">\'Department\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token string">\'Document ID\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'Flag\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'From\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'Icon\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'Importance\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'Location\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'Location ID\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'Message\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span> group<span class="token operator">:</span> <span class="token string">\'Metadata\'</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">\'Organization\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token string">\'Time\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'Time Created\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'Time Modified\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'Work Completed\'</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    groups<span class="token operator">:</span> ColumnPickerGroup<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">\'Metadata\'</span><span class="token punctuation">,</span> expanded<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token punctuation">}</span>\n',example:"import { Component } from '@angular/core';\nimport { ColumnPickerGroup, ColumnPickerGroupItem } from '@ux-aspects/ux-aspects';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    /** Store a list of all selected columns */\n    selected: ReadonlyArray<string> = [\n        'Type',\n        'Date',\n        'Requested by',\n        'Status',\n        'Completion'\n    ];\n\n    /** Store a list of columns that must be selected */\n    locked: ReadonlyArray<string> = ['ID'];\n\n    /** Store a list of columns that are not selected or locked */\n    deselected: ReadonlyArray<string | ColumnPickerGroupItem> = [\n        { group: 'Metadata', name: 'Author' },\n        { group: 'Metadata', name: 'Category' },\n        { group: 'Metadata', name: 'Date Created' },\n        { group: 'Metadata', name: 'Date Modified' },\n        { group: 'Metadata', name: 'Department' },\n        'Document ID',\n        'Flag',\n        'From',\n        'Icon',\n        'Importance',\n        'Location',\n        'Location ID',\n        'Message',\n        { group: 'Metadata', name: 'Organization' },\n        'Time',\n        'Time Created',\n        'Time Modified',\n        'Work Completed'\n    ];\n\n    groups: ColumnPickerGroup[] = [\n        { name: 'Metadata', expanded: true }\n    ];\n\n}\n"}},52845:c=>{c.exports={snippet:'<span class="token function-variable function">sort</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token operator">:</span> ColumnPickerGroupItem<span class="token punctuation">,</span> b<span class="token operator">:</span> ColumnPickerGroupItem</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> aCombined <span class="token operator">=</span> a<span class="token punctuation">.</span>group <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>a<span class="token punctuation">.</span>group<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>a<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span> <span class="token operator">:</span> a<span class="token punctuation">.</span>name<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> bCombined <span class="token operator">=</span> b<span class="token punctuation">.</span>group <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>b<span class="token punctuation">.</span>group<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>b<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span> <span class="token operator">:</span> b<span class="token punctuation">.</span>name<span class="token punctuation">;</span>\n    <span class="token keyword">return</span> aCombined<span class="token punctuation">.</span><span class="token function">localeCompare</span><span class="token punctuation">(</span>bCombined<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n',example:"sort = (a: ColumnPickerGroupItem, b: ColumnPickerGroupItem) => {\n    const aCombined = a.group ? `${a.group}${a.name}` : a.name;\n    const bCombined = b.group ? `${b.group}${b.name}` : b.name;\n    return aCombined.localeCompare(bCombined);\n};\n"}},74601:c=>{c.exports={snippet:'<span class="token selector">.table</span> <span class="token punctuation">{</span>\n    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">td, th</span> <span class="token punctuation">{</span>\n    <span class="token property">min-width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>\n    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>\n    <span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span>\n    <span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>\n    <span class="token property">word-break</span><span class="token punctuation">:</span> break-all<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:".table {\n    overflow: hidden;\n}\n\ntd, th {\n    min-width: 50px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    word-break: break-all;\n}"}},51343:c=>{c.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-accordion</span> <span class="token attr-name">[collapseOthers]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-accordion-panel</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>accordion-chevron<span class="token punctuation">"</span></span> <span class="token attr-name">heading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Fixed Header Table<span class="token punctuation">"</span></span> <span class="token attr-name">[expanded]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>type === <span class="token punctuation">\'</span>uxResizableTable<span class="token punctuation">\'</span><span class="token punctuation">"</span></span>\n               <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table<span class="token punctuation">"</span></span> <span class="token attr-name">aria-multiselectable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>\n               <span class="token attr-name">uxResizableTable</span> <span class="token attr-name">uxFixedHeaderTable</span>\n               <span class="token attr-name">[tableHeight]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>230<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">uxResizableTableColumn</span> <span class="token attr-name">[width]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">uxResizableTableColumn</span> <span class="token attr-name">[(width)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>titleWidth<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">uxResizableTableColumn</span> <span class="token attr-name">[(width)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>authorWidth<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Author<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">uxResizableTableColumn</span> <span class="token attr-name">(widthChange)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dateWidth = $event<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Date<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span> <span class="token attr-name">[(uxSelection)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selection<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let document of documents<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[attr.aria-selected]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>document.selected<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[uxSelectionItem]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>document<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[(selected)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>document.selected<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox-column<span class="token punctuation">"</span></span> <span class="token attr-name">uxResizableTableCell</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-checkbox</span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span> <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>document.selected<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-checkbox</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">uxResizableTableCell</span><span class="token punctuation">></span></span>{{ document.title }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">uxResizableTableCell</span><span class="token punctuation">></span></span>{{ document.author }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">uxResizableTableCell</span><span class="token punctuation">></span></span>{{ document.date | date }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>type === <span class="token punctuation">\'</span>uxResizableExpandingTable<span class="token punctuation">\'</span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table<span class="token punctuation">"</span></span> <span class="token attr-name">aria-multiselectable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>\n               <span class="token attr-name">uxResizableExpandingTable</span> <span class="token attr-name">uxFixedHeaderTable</span> <span class="token attr-name">[tableHeight]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>230<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">uxResizableTableColumn</span> <span class="token attr-name">[width]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">uxResizableTableColumn</span> <span class="token attr-name">[(width)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>titleWidth<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">uxResizableTableColumn</span> <span class="token attr-name">[(width)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>authorWidth<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Author<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">uxResizableTableColumn</span> <span class="token attr-name">[(width)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dateWidthExpanding<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Date<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span> <span class="token attr-name">[(uxSelection)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selection<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let document of documents<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[attr.aria-selected]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>document.selected<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[uxSelectionItem]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>document<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[(selected)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>document.selected<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox-column<span class="token punctuation">"</span></span> <span class="token attr-name">uxResizableTableCell</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-checkbox</span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>\n                                 <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span>\n                                 <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>document.selected<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-checkbox</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">uxResizableTableCell</span><span class="token punctuation">></span></span>{{ document.title }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">uxResizableTableCell</span><span class="token punctuation">></span></span>{{ document.author }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">uxResizableTableCell</span><span class="token punctuation">></span></span>{{ document.date | date }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">uxRadioButtonGroup</span> <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>type<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio-button-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-radio-button</span> <span class="token attr-name">option</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uxResizableTable<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>uxResizableTable<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-radio-button</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-radio-button</span> <span class="token attr-name">option</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uxResizableExpandingTable<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>uxResizableExpandingTable<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-radio-button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-secondary<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>setToUniform(type)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Reset Columns<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-accordion-panel</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-accordion-panel</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>accordion-chevron<span class="token punctuation">"</span></span> <span class="token attr-name">heading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Standard Table<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table<span class="token punctuation">"</span></span> <span class="token attr-name">aria-multiselectable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">uxResizableTable</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">uxResizableTableColumn</span> <span class="token attr-name">[width]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">uxResizableTableColumn</span> <span class="token attr-name">[(width)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>titleWidth<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">uxResizableTableColumn</span> <span class="token attr-name">[(width)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>authorWidth<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Author<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">uxResizableTableColumn</span> <span class="token attr-name">(widthChange)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dateWidth = $event<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Date<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span> <span class="token attr-name">[(uxSelection)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selection<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let document of documents | slice:0:5<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[attr.aria-selected]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>document.selected<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[uxSelectionItem]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>document<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[(selected)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>document.selected<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox-column<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-checkbox</span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span> <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>document.selected<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-checkbox</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{ document.title }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{ document.author }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{ document.date | date }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-accordion-panel</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-accordion</span><span class="token punctuation">></span></span>\n',example:'<ux-accordion [collapseOthers]="true">\n    <ux-accordion-panel class="accordion-chevron" heading="Fixed Header Table" [expanded]="true">\n        <table *ngIf="type === \'uxResizableTable\'"\n               class="table" aria-multiselectable="true"\n               uxResizableTable uxFixedHeaderTable\n               [tableHeight]="230">\n            <thead>\n            <tr>\n                <th uxResizableTableColumn [width]="50" [disabled]="true"></th>\n                <th uxResizableTableColumn [(width)]="titleWidth">Title</th>\n                <th uxResizableTableColumn [(width)]="authorWidth">Author</th>\n                <th uxResizableTableColumn (widthChange)="dateWidth = $event">Date</th>\n            </tr>\n            </thead>\n            <tbody [(uxSelection)]="selection">\n            <tr *ngFor="let document of documents"\n                [attr.aria-selected]="document.selected"\n                [uxSelectionItem]="document"\n                [(selected)]="document.selected">\n\n                <td class="checkbox-column" uxResizableTableCell>\n                    <ux-checkbox aria-hidden="true" tabindex="-1" [(ngModel)]="document.selected">\n                    </ux-checkbox>\n                </td>\n                <td uxResizableTableCell>{{ document.title }}</td>\n                <td uxResizableTableCell>{{ document.author }}</td>\n                <td uxResizableTableCell>{{ document.date | date }}</td>\n            </tr>\n            </tbody>\n        </table>\n\n        <table *ngIf="type === \'uxResizableExpandingTable\'" class="table" aria-multiselectable="true"\n               uxResizableExpandingTable uxFixedHeaderTable [tableHeight]="230">\n            <thead>\n            <tr>\n                <th uxResizableTableColumn [width]="50" [disabled]="true"></th>\n                <th uxResizableTableColumn [(width)]="titleWidth">Title</th>\n                <th uxResizableTableColumn [(width)]="authorWidth">Author</th>\n                <th uxResizableTableColumn [(width)]="dateWidthExpanding">Date</th>\n            </tr>\n            </thead>\n            <tbody [(uxSelection)]="selection">\n            <tr *ngFor="let document of documents"\n                [attr.aria-selected]="document.selected"\n                [uxSelectionItem]="document"\n                [(selected)]="document.selected">\n\n                <td class="checkbox-column" uxResizableTableCell>\n                    <ux-checkbox aria-hidden="true"\n                                 tabindex="-1"\n                                 [(ngModel)]="document.selected">\n\n                    </ux-checkbox>\n                </td>\n                <td uxResizableTableCell>{{ document.title }}</td>\n                <td uxResizableTableCell>{{ document.author }}</td>\n                <td uxResizableTableCell>{{ document.date | date }}</td>\n            </tr>\n            </tbody>\n        </table>\n\n        <div uxRadioButtonGroup [(value)]="type" class="radio-button-container">\n            <ux-radio-button option="uxResizableTable">uxResizableTable</ux-radio-button>\n            <ux-radio-button option="uxResizableExpandingTable">uxResizableExpandingTable</ux-radio-button>\n        </div>\n        <button class="btn button-secondary" (click)="setToUniform(type)">Reset Columns</button>\n    </ux-accordion-panel>\n    <ux-accordion-panel class="accordion-chevron" heading="Standard Table">\n        <table class="table" aria-multiselectable="true" uxResizableTable>\n            <thead>\n            <tr>\n                <th uxResizableTableColumn [width]="50" [disabled]="true"></th>\n                <th uxResizableTableColumn [(width)]="titleWidth">Title</th>\n                <th uxResizableTableColumn [(width)]="authorWidth">Author</th>\n                <th uxResizableTableColumn (widthChange)="dateWidth = $event">Date</th>\n            </tr>\n            </thead>\n            <tbody [(uxSelection)]="selection">\n            <tr *ngFor="let document of documents | slice:0:5"\n                [attr.aria-selected]="document.selected"\n                [uxSelectionItem]="document"\n                [(selected)]="document.selected">\n\n                <td class="checkbox-column">\n                    <ux-checkbox aria-hidden="true" tabindex="-1" [(ngModel)]="document.selected">\n                    </ux-checkbox>\n                </td>\n                <td>{{ document.title }}</td>\n                <td>{{ document.author }}</td>\n                <td>{{ document.date | date }}</td>\n            </tr>\n            </tbody>\n        </table>\n    </ux-accordion-panel>\n</ux-accordion>\n'}},27813:c=>{c.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> ViewChild <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ResizableExpandingTableDirective<span class="token punctuation">,</span> ResizableTableDirective <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'chance\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    type<span class="token operator">:</span> <span class="token string">\'uxResizableTable\'</span> <span class="token operator">|</span> <span class="token string">\'uxResizableExpandingTable\'</span> <span class="token operator">=</span> <span class="token string">\'uxResizableTable\'</span><span class="token punctuation">;</span>\n    documents<span class="token operator">:</span> TableDocument<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    selection<span class="token operator">:</span> TableDocument<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    titleWidth<span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">260</span><span class="token punctuation">;</span>\n    authorWidth<span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">300</span><span class="token punctuation">;</span>\n    dateWidth<span class="token operator">:</span> number<span class="token punctuation">;</span>\n    dateWidthExpanding<span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">150</span><span class="token punctuation">;</span>\n\n    @<span class="token function">ViewChild</span><span class="token punctuation">(</span>ResizableTableDirective<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token keyword">static</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    resizableTable<span class="token operator">:</span> ResizableTableDirective<span class="token punctuation">;</span>\n\n    @<span class="token function">ViewChild</span><span class="token punctuation">(</span>ResizableExpandingTableDirective<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token keyword">static</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    resizableExpandingTable<span class="token operator">:</span> ResizableExpandingTableDirective<span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// generate some dummy data</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> idx <span class="token operator">&lt;</span> <span class="token number">15</span><span class="token punctuation">;</span> idx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>documents<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                selected<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n                title<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Document </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>idx <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n                author<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                date<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token punctuation">{</span> year<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">as</span> Date\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">setToUniform</span><span class="token punctuation">(</span>type<span class="token operator">:</span> string<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">\'uxResizableTable\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>resizableTable<span class="token punctuation">.</span><span class="token function">setUniformWidths</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>resizableExpandingTable<span class="token punctuation">.</span><span class="token function">setUniformWidths</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">TableDocument</span> <span class="token punctuation">{</span>\n    selected<span class="token operator">:</span> boolean<span class="token punctuation">;</span>\n    title<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    author<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    date<span class="token operator">:</span> Date<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:"import { Component, ViewChild } from '@angular/core';\nimport { ResizableExpandingTableDirective, ResizableTableDirective } from '@ux-aspects/ux-aspects';\nimport 'chance';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    type: 'uxResizableTable' | 'uxResizableExpandingTable' = 'uxResizableTable';\n    documents: TableDocument[] = [];\n    selection: TableDocument[] = [];\n\n    titleWidth: number = 260;\n    authorWidth: number = 300;\n    dateWidth: number;\n    dateWidthExpanding: number = 150;\n\n    @ViewChild(ResizableTableDirective, { static: false })\n    resizableTable: ResizableTableDirective;\n\n    @ViewChild(ResizableExpandingTableDirective, { static: false })\n    resizableExpandingTable: ResizableExpandingTableDirective;\n\n    constructor() {\n        // generate some dummy data\n        for (let idx = 0; idx < 15; idx++) {\n            this.documents.push({\n                selected: false,\n                title: `Document ${idx + 1}`,\n                author: chance.name(),\n                date: chance.date({ year: new Date().getFullYear() }) as Date\n            });\n        }\n    }\n\n    setToUniform(type: string): void {\n        if (type === 'uxResizableTable') {\n            this.resizableTable.setUniformWidths();\n        } else {\n            this.resizableExpandingTable.setUniformWidths();\n        }\n    }\n}\n\ninterface TableDocument {\n    selected: boolean;\n    title: string;\n    author: string;\n    date: Date;\n}"}},29416:c=>{c.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table table-hover<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">uxColumnSorting</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clickable column-sorting<span class="token punctuation">"</span></span>\n            <span class="token attr-name">uxFocusIndicator</span>\n            <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[attr.aria-label]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getColumnAriaLabel(<span class="token punctuation">\'</span>Name<span class="token punctuation">\'</span>, nameColumn)<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[attr.aria-sort]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nameColumn.state<span class="token punctuation">"</span></span>\n            <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeState(<span class="token punctuation">\'</span>Name<span class="token punctuation">\'</span>, nameColumn)<span class="token punctuation">"</span></span>\n            <span class="token attr-name">(keydown.enter)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeState(<span class="token punctuation">\'</span>Name<span class="token punctuation">\'</span>, nameColumn)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>column-sorting-header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-black<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>NAME<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-column-sorting</span> <span class="token attr-name">#nameColumn</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ux-column-sorting<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-column-sorting</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clickable column-sorting<span class="token punctuation">"</span></span>\n            <span class="token attr-name">uxFocusIndicator</span>\n            <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[attr.aria-label]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getColumnAriaLabel(<span class="token punctuation">\'</span>Author<span class="token punctuation">\'</span>, authorColumn)<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[attr.aria-sort]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>authorColumn.state<span class="token punctuation">"</span></span>\n            <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeState(<span class="token punctuation">\'</span>Author<span class="token punctuation">\'</span>, authorColumn)<span class="token punctuation">"</span></span>\n            <span class="token attr-name">(keydown.enter)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeState(<span class="token punctuation">\'</span>Author<span class="token punctuation">\'</span>, authorColumn)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>column-sorting-header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-black<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>AUTHOR<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-column-sorting</span> <span class="token attr-name">#authorColumn</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ux-column-sorting<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>author<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-column-sorting</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clickable column-sorting<span class="token punctuation">"</span></span>\n            <span class="token attr-name">uxFocusIndicator</span>\n            <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[attr.aria-label]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getColumnAriaLabel(<span class="token punctuation">\'</span>Date Modified<span class="token punctuation">\'</span>, dateColumn)<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[attr.aria-sort]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dateColumn.state<span class="token punctuation">"</span></span>\n            <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeState(<span class="token punctuation">\'</span>Date Modified<span class="token punctuation">\'</span>, dateColumn)<span class="token punctuation">"</span></span>\n            <span class="token attr-name">(keydown.enter)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeState(<span class="token punctuation">\'</span>Date Modified<span class="token punctuation">\'</span>, dateColumn)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>column-sorting-header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-black<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>DATE MODIFIED<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-column-sorting</span> <span class="token attr-name">#dateColumn</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ux-column-sorting<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>date<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-column-sorting</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clickable column-sorting<span class="token punctuation">"</span></span>\n            <span class="token attr-name">uxFocusIndicator</span>\n            <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[attr.aria-label]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getColumnAriaLabel(<span class="token punctuation">\'</span>Work Completed<span class="token punctuation">\'</span>, completedColumn)<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[attr.aria-sort]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>completedColumn.state<span class="token punctuation">"</span></span>\n            <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeState(<span class="token punctuation">\'</span>Work Completed<span class="token punctuation">\'</span>, completedColumn)<span class="token punctuation">"</span></span>\n            <span class="token attr-name">(keydown.enter)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeState(<span class="token punctuation">\'</span>Work Completed<span class="token punctuation">\'</span>, completedColumn)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>column-sorting-header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-black<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>WORK COMPLETED<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-column-sorting</span> <span class="token attr-name">#completedColumn</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ux-column-sorting<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>completed<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-column-sorting</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-black<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>STATUS<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clickable<span class="token punctuation">"</span></span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let item of items<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{ item.name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{ item.author }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{ item.date }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-spark</span> <span class="token attr-name">[trackColor]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sparkTrackColor<span class="token punctuation">"</span></span>\n                      <span class="token attr-name">[barColor]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sparkBarColor<span class="token punctuation">"</span></span>\n                      <span class="token attr-name">[value]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.completed<span class="token punctuation">"</span></span>\n                      <span class="token attr-name">[barHeight]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span>\n                      <span class="token attr-name">[inlineLabel]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.completed<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-spark</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">[name]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.active ? <span class="token punctuation">\'</span>checkmark<span class="token punctuation">\'</span> : null<span class="token punctuation">"</span></span>\n                     <span class="token attr-name">[attr.aria-label]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.active ? <span class="token punctuation">\'</span>Approved<span class="token punctuation">\'</span> : <span class="token punctuation">\'</span>Not approved<span class="token punctuation">\'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>',example:'<table class="table table-hover">\n    <thead>\n    <tr uxColumnSorting>\n        <th class="clickable column-sorting"\n            uxFocusIndicator\n            tabindex="0"\n            [attr.aria-label]="getColumnAriaLabel(\'Name\', nameColumn)"\n            [attr.aria-sort]="nameColumn.state"\n            (click)="changeState(\'Name\', nameColumn)"\n            (keydown.enter)="changeState(\'Name\', nameColumn)">\n\n            <div class="column-sorting-header">\n                <p class="text-black">NAME</p>\n                <ux-column-sorting #nameColumn="ux-column-sorting" key="name">\n                </ux-column-sorting>\n            </div>\n        </th>\n        <th class="clickable column-sorting"\n            uxFocusIndicator\n            tabindex="0"\n            [attr.aria-label]="getColumnAriaLabel(\'Author\', authorColumn)"\n            [attr.aria-sort]="authorColumn.state"\n            (click)="changeState(\'Author\', authorColumn)"\n            (keydown.enter)="changeState(\'Author\', authorColumn)">\n\n            <div class="column-sorting-header">\n                <p class="text-black">AUTHOR</p>\n                <ux-column-sorting #authorColumn="ux-column-sorting" key="author">\n                </ux-column-sorting>\n            </div>\n        </th>\n        <th class="clickable column-sorting"\n            uxFocusIndicator\n            tabindex="0"\n            [attr.aria-label]="getColumnAriaLabel(\'Date Modified\', dateColumn)"\n            [attr.aria-sort]="dateColumn.state"\n            (click)="changeState(\'Date Modified\', dateColumn)"\n            (keydown.enter)="changeState(\'Date Modified\', dateColumn)">\n\n            <div class="column-sorting-header">\n                <p class="text-black">DATE MODIFIED</p>\n                <ux-column-sorting #dateColumn="ux-column-sorting" key="date">\n                </ux-column-sorting>\n            </div>\n        </th>\n        <th class="clickable column-sorting"\n            uxFocusIndicator\n            tabindex="0"\n            [attr.aria-label]="getColumnAriaLabel(\'Work Completed\', completedColumn)"\n            [attr.aria-sort]="completedColumn.state"\n            (click)="changeState(\'Work Completed\', completedColumn)"\n            (keydown.enter)="changeState(\'Work Completed\', completedColumn)">\n\n            <div class="column-sorting-header">\n                <p class="text-black">WORK COMPLETED</p>\n                <ux-column-sorting #completedColumn="ux-column-sorting" key="completed">\n                </ux-column-sorting>\n            </div>\n        </th>\n        <th class="text-black">STATUS</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr class="clickable" *ngFor="let item of items">\n        <td>{{ item.name }}</td>\n        <td>{{ item.author }}</td>\n        <td>{{ item.date }}</td>\n        <td>\n            <ux-spark [trackColor]="sparkTrackColor"\n                      [barColor]="sparkBarColor"\n                      [value]="item.completed"\n                      [barHeight]="3"\n                      [inlineLabel]="item.completed">\n            </ux-spark>\n        </td>\n        <td class="text-center">\n            <ux-icon [name]="item.active ? \'checkmark\' : null"\n                     [attr.aria-label]="item.active ? \'Approved\' : \'Not approved\'">\n            </ux-icon>\n        </td>\n    </tr>\n    </tbody>\n</table>'}},680:c=>{c.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table table-hover<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">uxColumnSorting</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clickable column-sorting<span class="token punctuation">"</span></span>\n                <span class="token attr-name">uxFocusIndicator</span>\n                <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[attr.aria-label]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getColumnAriaLabel(<span class="token punctuation">\'</span>Name<span class="token punctuation">\'</span>, nameColumn)<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[attr.aria-sort]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nameColumn.state<span class="token punctuation">"</span></span>\n                <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeState(<span class="token punctuation">\'</span>Name<span class="token punctuation">\'</span>, nameColumn)<span class="token punctuation">"</span></span>\n                <span class="token attr-name">(keydown.enter)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeState(<span class="token punctuation">\'</span>Name<span class="token punctuation">\'</span>, nameColumn)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-column-sorting</span> <span class="token attr-name">#nameColumn</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ux-column-sorting<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">ascendingIcon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-up<span class="token punctuation">"</span></span> <span class="token attr-name">descendingIcon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-down<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-column-sorting</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clickable column-sorting<span class="token punctuation">"</span></span>\n                <span class="token attr-name">uxFocusIndicator</span>\n                <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[attr.aria-label]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getColumnAriaLabel(<span class="token punctuation">\'</span>Author<span class="token punctuation">\'</span>, authorColumn)<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[attr.aria-sort]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>authorColumn.state<span class="token punctuation">"</span></span>\n                <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeState(<span class="token punctuation">\'</span>Author<span class="token punctuation">\'</span>, authorColumn)<span class="token punctuation">"</span></span>\n                <span class="token attr-name">(keydown.enter)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeState(<span class="token punctuation">\'</span>Author<span class="token punctuation">\'</span>, authorColumn)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Author<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-column-sorting</span> <span class="token attr-name">#authorColumn</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ux-column-sorting<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>author<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">ascendingIcon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-up<span class="token punctuation">"</span></span> <span class="token attr-name">descendingIcon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-down<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-column-sorting</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clickable column-sorting<span class="token punctuation">"</span></span>\n                <span class="token attr-name">uxFocusIndicator</span>\n                <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[attr.aria-label]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getColumnAriaLabel(<span class="token punctuation">\'</span>Date Modified<span class="token punctuation">\'</span>, dateColumn)<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[attr.aria-sort]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dateColumn.state<span class="token punctuation">"</span></span>\n                <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeState(<span class="token punctuation">\'</span>Date Modified<span class="token punctuation">\'</span>, dateColumn)<span class="token punctuation">"</span></span>\n                <span class="token attr-name">(keydown.enter)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeState(<span class="token punctuation">\'</span>Date Modified<span class="token punctuation">\'</span>, dateColumn)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Date Modified<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-column-sorting</span> <span class="token attr-name">#dateColumn</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ux-column-sorting<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>date<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">ascendingIcon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-up<span class="token punctuation">"</span></span> <span class="token attr-name">descendingIcon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-down<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-column-sorting</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clickable column-sorting<span class="token punctuation">"</span></span>\n                <span class="token attr-name">uxFocusIndicator</span>\n                <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[attr.aria-label]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getColumnAriaLabel(<span class="token punctuation">\'</span>Work Completed<span class="token punctuation">\'</span>, completedColumn)<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[attr.aria-sort]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>completedColumn.state<span class="token punctuation">"</span></span>\n                <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeState(<span class="token punctuation">\'</span>Work Completed<span class="token punctuation">\'</span>, completedColumn)<span class="token punctuation">"</span></span>\n                <span class="token attr-name">(keydown.enter)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeState(<span class="token punctuation">\'</span>Work Completed<span class="token punctuation">\'</span>, completedColumn)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Work Completed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-column-sorting</span> <span class="token attr-name">#completedColumn</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ux-column-sorting<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>completed<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">ascendingIcon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-up<span class="token punctuation">"</span></span> <span class="token attr-name">descendingIcon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-down<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-column-sorting</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Status<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clickable<span class="token punctuation">"</span></span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let item of items<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{ item.name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{ item.author }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{ item.date }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-spark</span> <span class="token attr-name">[trackColor]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sparkTrackColor<span class="token punctuation">"</span></span> <span class="token attr-name">[barColor]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sparkBarColor<span class="token punctuation">"</span></span> <span class="token attr-name">[value]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.completed<span class="token punctuation">"</span></span> <span class="token attr-name">[barHeight]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span>\n                          <span class="token attr-name">[inlineLabel]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.completed<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-spark</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">[name]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.active ? <span class="token punctuation">\'</span>checkmark<span class="token punctuation">\'</span> : null<span class="token punctuation">"</span></span>\n                         <span class="token attr-name">[attr.aria-label]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.active ? <span class="token punctuation">\'</span>Approved<span class="token punctuation">\'</span> : <span class="token punctuation">\'</span>Not approved<span class="token punctuation">\'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>\n',example:'<table class="table table-hover">\n    <thead>\n        <tr uxColumnSorting>\n            <th class="clickable column-sorting"\n                uxFocusIndicator\n                tabindex="0"\n                [attr.aria-label]="getColumnAriaLabel(\'Name\', nameColumn)"\n                [attr.aria-sort]="nameColumn.state"\n                (click)="changeState(\'Name\', nameColumn)"\n                (keydown.enter)="changeState(\'Name\', nameColumn)">\n                <span>Name</span>\n                <ux-column-sorting #nameColumn="ux-column-sorting" key="name"\n                    ascendingIcon="link-up" descendingIcon="link-down">\n                </ux-column-sorting>\n            </th>\n            <th class="clickable column-sorting"\n                uxFocusIndicator\n                tabindex="0"\n                [attr.aria-label]="getColumnAriaLabel(\'Author\', authorColumn)"\n                [attr.aria-sort]="authorColumn.state"\n                (click)="changeState(\'Author\', authorColumn)"\n                (keydown.enter)="changeState(\'Author\', authorColumn)">\n                <span>Author</span>\n                <ux-column-sorting #authorColumn="ux-column-sorting" key="author"\n                    ascendingIcon="link-up" descendingIcon="link-down">\n                </ux-column-sorting>\n            </th>\n            <th class="clickable column-sorting"\n                uxFocusIndicator\n                tabindex="0"\n                [attr.aria-label]="getColumnAriaLabel(\'Date Modified\', dateColumn)"\n                [attr.aria-sort]="dateColumn.state"\n                (click)="changeState(\'Date Modified\', dateColumn)"\n                (keydown.enter)="changeState(\'Date Modified\', dateColumn)">\n                <span>Date Modified</span>\n                <ux-column-sorting #dateColumn="ux-column-sorting" key="date"\n                    ascendingIcon="link-up" descendingIcon="link-down">\n                </ux-column-sorting>\n            </th>\n            <th class="clickable column-sorting"\n                uxFocusIndicator\n                tabindex="0"\n                [attr.aria-label]="getColumnAriaLabel(\'Work Completed\', completedColumn)"\n                [attr.aria-sort]="completedColumn.state"\n                (click)="changeState(\'Work Completed\', completedColumn)"\n                (keydown.enter)="changeState(\'Work Completed\', completedColumn)">\n                <span>Work Completed</span>\n                <ux-column-sorting #completedColumn="ux-column-sorting" key="completed"\n                    ascendingIcon="link-up" descendingIcon="link-down">\n                </ux-column-sorting>\n            </th>\n            <th>Status</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr class="clickable" *ngFor="let item of items">\n            <td>{{ item.name }}</td>\n            <td>{{ item.author }}</td>\n            <td>{{ item.date }}</td>\n            <td>\n                <ux-spark [trackColor]="sparkTrackColor" [barColor]="sparkBarColor" [value]="item.completed" [barHeight]="3"\n                          [inlineLabel]="item.completed"></ux-spark>\n            </td>\n            <td class="text-center">\n                <ux-icon [name]="item.active ? \'checkmark\' : null"\n                         [attr.aria-label]="item.active ? \'Approved\' : \'Not approved\'">\n                </ux-icon>\n            </td>\n        </tr>\n    </tbody>\n</table>\n'}},39974:c=>{c.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> LiveAnnouncer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/cdk/a11y\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ColorService<span class="token punctuation">,</span> ColumnSortingComponent<span class="token punctuation">,</span> ColumnSortingOrder<span class="token punctuation">,</span> ColumnSortingState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'chance\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    order<span class="token operator">:</span> ReadonlyArray<span class="token operator">&lt;</span>ColumnSortingOrder<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    items<span class="token operator">:</span> ReadonlyArray<span class="token operator">&lt;</span>ColumnSortingTableData<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n        id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Document\'</span><span class="token punctuation">,</span>\n        author<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        date<span class="token operator">:</span> <span class="token string">\'18 Dec 2016\'</span><span class="token punctuation">,</span>\n        completed<span class="token operator">:</span> <span class="token number">97</span><span class="token punctuation">,</span>\n        active<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">bool</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        id<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Email\'</span><span class="token punctuation">,</span>\n        author<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        date<span class="token operator">:</span> <span class="token string">\'22 Dec 2016\'</span><span class="token punctuation">,</span>\n        completed<span class="token operator">:</span> <span class="token number">15</span><span class="token punctuation">,</span>\n        active<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">bool</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        id<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Email\'</span><span class="token punctuation">,</span>\n        author<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        date<span class="token operator">:</span> <span class="token string">\'12 Dec 2016\'</span><span class="token punctuation">,</span>\n        completed<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n        active<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">bool</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        id<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Email\'</span><span class="token punctuation">,</span>\n        author<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        date<span class="token operator">:</span> <span class="token string">\'16 Dec 2016\'</span><span class="token punctuation">,</span>\n        completed<span class="token operator">:</span> <span class="token number">74</span><span class="token punctuation">,</span>\n        active<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">bool</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        id<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Email\'</span><span class="token punctuation">,</span>\n        author<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        date<span class="token operator">:</span> <span class="token string">\'17 Dec 2016\'</span><span class="token punctuation">,</span>\n        completed<span class="token operator">:</span> <span class="token number">63</span><span class="token punctuation">,</span>\n        active<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">bool</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        id<span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Document\'</span><span class="token punctuation">,</span>\n        author<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        date<span class="token operator">:</span> <span class="token string">\'21 Dec 2016\'</span><span class="token punctuation">,</span>\n        completed<span class="token operator">:</span> <span class="token number">21</span><span class="token punctuation">,</span>\n        active<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">bool</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        id<span class="token operator">:</span> <span class="token number">7</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Document\'</span><span class="token punctuation">,</span>\n        author<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        date<span class="token operator">:</span> <span class="token string">\'17 Dec 2016\'</span><span class="token punctuation">,</span>\n        completed<span class="token operator">:</span> <span class="token number">85</span><span class="token punctuation">,</span>\n        active<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">bool</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        id<span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Document\'</span><span class="token punctuation">,</span>\n        author<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        date<span class="token operator">:</span> <span class="token string">\'17 Dec 2016\'</span><span class="token punctuation">,</span>\n        completed<span class="token operator">:</span> <span class="token number">11</span><span class="token punctuation">,</span>\n        active<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">bool</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    sparkTrackColor <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart2\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    sparkBarColor <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart2\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token keyword">private</span> _colorService<span class="token operator">:</span> ColorService<span class="token punctuation">,</span> <span class="token keyword">private</span> _announcer<span class="token operator">:</span> LiveAnnouncer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">changeState</span><span class="token punctuation">(</span><span class="token parameter">title<span class="token operator">:</span> string<span class="token punctuation">,</span> column<span class="token operator">:</span> ColumnSortingComponent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>order <span class="token operator">=</span> column<span class="token punctuation">.</span><span class="token function">changeState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>items <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>order<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// announce the change to any screen reader</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_announcer<span class="token punctuation">.</span><span class="token function">announce</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getColumnAriaLabel</span><span class="token punctuation">(</span>title<span class="token punctuation">,</span> column<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">sort</span><span class="token punctuation">(</span>array<span class="token operator">:</span> ReadonlyArray<span class="token operator">&lt;</span>ColumnSortingTableData<span class="token operator">></span><span class="token punctuation">,</span> sorters<span class="token operator">:</span> ReadonlyArray<span class="token operator">&lt;</span>ColumnSortingOrder<span class="token operator">></span><span class="token punctuation">)</span><span class="token operator">:</span> ReadonlyArray<span class="token operator">&lt;</span>ColumnSortingTableData<span class="token operator">></span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span>array<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">itemOne<span class="token operator">:</span> ColumnSortingTableData<span class="token punctuation">,</span> itemTwo<span class="token operator">:</span> ColumnSortingTableData</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\n            <span class="token comment">// iterate through each sorter</span>\n            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> sorter <span class="token keyword">of</span> sorters<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">const</span> value1 <span class="token operator">=</span> itemOne<span class="token punctuation">[</span>sorter<span class="token punctuation">.</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>\n                <span class="token keyword">const</span> value2 <span class="token operator">=</span> itemTwo<span class="token punctuation">[</span>sorter<span class="token punctuation">.</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>value1 <span class="token operator">===</span> value2<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">continue</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>sorter<span class="token punctuation">.</span>state <span class="token operator">===</span> ColumnSortingState<span class="token punctuation">.</span>Ascending<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">return</span> value1 <span class="token operator">&lt;</span> value2 <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">return</span> value1 <span class="token operator">></span> value2 <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n\n            <span class="token keyword">return</span> itemOne<span class="token punctuation">.</span>id <span class="token operator">&lt;</span> itemTwo<span class="token punctuation">.</span>id <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">getColumnAriaLabel</span><span class="token punctuation">(</span>title<span class="token operator">:</span> string<span class="token punctuation">,</span> column<span class="token operator">:</span> ColumnSortingComponent<span class="token punctuation">)</span><span class="token operator">:</span> string <span class="token punctuation">{</span>\n\n        <span class="token keyword">switch</span> <span class="token punctuation">(</span>column<span class="token punctuation">.</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n            <span class="token keyword">case</span> ColumnSortingState<span class="token punctuation">.</span>Ascending<span class="token operator">:</span>\n                <span class="token keyword">return</span> column<span class="token punctuation">.</span>order <span class="token operator">?</span>\n                    <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> title <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: Ascending sort with priority </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> column<span class="token punctuation">.</span>order <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\n                    applied, activate to apply a Descending sort</span><span class="token template-punctuation string">`</span></span> <span class="token operator">:</span>\n                    <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> title <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: Ascending sort applied, activate to apply a Descending sort</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n            <span class="token keyword">case</span> ColumnSortingState<span class="token punctuation">.</span>Descending<span class="token operator">:</span>\n                <span class="token keyword">return</span> column<span class="token punctuation">.</span>order <span class="token operator">?</span>\n                    <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> title <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: Descending sort with priority </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> column<span class="token punctuation">.</span>order <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> applied,\n                    activate to apply no sorting</span><span class="token template-punctuation string">`</span></span> <span class="token operator">:</span>\n                    <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> title <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: Descending sort applied, activate to apply no sorting</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n            <span class="token keyword">default</span><span class="token operator">:</span>\n                <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> title <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: No sort applied, activate to apply an Ascending sort</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">ColumnSortingTableData</span> <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> number<span class="token punctuation">;</span>\n    name<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    author<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    date<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    completed<span class="token operator">:</span> number<span class="token punctuation">;</span>\n    active<span class="token operator">:</span> boolean<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:"import { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Component } from '@angular/core';\nimport { ColorService, ColumnSortingComponent, ColumnSortingOrder, ColumnSortingState } from '@ux-aspects/ux-aspects';\nimport 'chance';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html'\n})\nexport class AppComponent {\n\n    order: ReadonlyArray<ColumnSortingOrder> = [];\n\n    items: ReadonlyArray<ColumnSortingTableData> = [{\n        id: 1,\n        name: 'Document',\n        author: chance.name(),\n        date: '18 Dec 2016',\n        completed: 97,\n        active: chance.bool()\n    }, {\n        id: 2,\n        name: 'Email',\n        author: chance.name(),\n        date: '22 Dec 2016',\n        completed: 15,\n        active: chance.bool()\n    }, {\n        id: 3,\n        name: 'Email',\n        author: chance.name(),\n        date: '12 Dec 2016',\n        completed: 20,\n        active: chance.bool()\n    }, {\n        id: 4,\n        name: 'Email',\n        author: chance.name(),\n        date: '16 Dec 2016',\n        completed: 74,\n        active: chance.bool()\n    }, {\n        id: 5,\n        name: 'Email',\n        author: chance.name(),\n        date: '17 Dec 2016',\n        completed: 63,\n        active: chance.bool()\n    }, {\n        id: 6,\n        name: 'Document',\n        author: chance.name(),\n        date: '21 Dec 2016',\n        completed: 21,\n        active: chance.bool()\n    }, {\n        id: 7,\n        name: 'Document',\n        author: chance.name(),\n        date: '17 Dec 2016',\n        completed: 85,\n        active: chance.bool()\n    }, {\n        id: 8,\n        name: 'Document',\n        author: chance.name(),\n        date: '17 Dec 2016',\n        completed: 11,\n        active: chance.bool()\n    }];\n\n    sparkTrackColor = this._colorService.getColor('chart2').setAlpha(0.2).toRgba();\n    sparkBarColor = this._colorService.getColor('chart2').toHex();\n\n    constructor(private _colorService: ColorService, private _announcer: LiveAnnouncer) {\n    }\n\n    changeState(title: string, column: ColumnSortingComponent) {\n        this.order = column.changeState();\n        this.items = this.sort(this.items, this.order);\n\n        // announce the change to any screen reader\n        this._announcer.announce(this.getColumnAriaLabel(title, column));\n    }\n\n    sort(array: ReadonlyArray<ColumnSortingTableData>, sorters: ReadonlyArray<ColumnSortingOrder>): ReadonlyArray<ColumnSortingTableData> {\n\n        return [...array].sort((itemOne: ColumnSortingTableData, itemTwo: ColumnSortingTableData) => {\n\n            // iterate through each sorter\n            for (const sorter of sorters) {\n                const value1 = itemOne[sorter.key];\n                const value2 = itemTwo[sorter.key];\n\n                if (value1 === value2) {\n                    continue;\n                }\n\n                if (sorter.state === ColumnSortingState.Ascending) {\n                    return value1 < value2 ? -1 : 1;\n                } else {\n                    return value1 > value2 ? -1 : 1;\n                }\n            }\n\n            return itemOne.id < itemTwo.id ? -1 : 1;\n        });\n    }\n\n    getColumnAriaLabel(title: string, column: ColumnSortingComponent): string {\n\n        switch (column.state) {\n\n            case ColumnSortingState.Ascending:\n                return column.order ?\n                    `${ title }: Ascending sort with priority ${ column.order }\n                    applied, activate to apply a Descending sort` :\n                    `${ title }: Ascending sort applied, activate to apply a Descending sort`;\n\n            case ColumnSortingState.Descending:\n                return column.order ?\n                    `${ title }: Descending sort with priority ${ column.order } applied,\n                    activate to apply no sorting` :\n                    `${ title }: Descending sort applied, activate to apply no sorting`;\n\n            default:\n                return `${ title }: No sort applied, activate to apply an Ascending sort`;\n        }\n    }\n}\n\ninterface ColumnSortingTableData {\n    id: number;\n    name: string;\n    author: string;\n    date: string;\n    completed: number;\n    active: boolean;\n}"}},99646:c=>{c.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-filter-container</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-filter-custom</span> <span class="token attr-name">[filters]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>statusFilters<span class="token punctuation">"</span></span> <span class="token attr-name">[initial]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>statusFilters[0]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-filter-custom</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-filter-container</span><span class="token punctuation">></span></span>',example:'<ux-filter-container>\n    <ux-filter-custom [filters]="statusFilters" [initial]="statusFilters[0]"></ux-filter-custom>\n</ux-filter-container>'}},52013:c=>{c.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Filter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    statusFilters<span class="token operator">:</span> Filter<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n        group<span class="token operator">:</span> <span class="token string">\'Custom\'</span><span class="token punctuation">,</span>\n        title<span class="token operator">:</span> <span class="token string">\'Status\'</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Status (All)\'</span><span class="token punctuation">,</span>\n        initial<span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        group<span class="token operator">:</span> <span class="token string">\'Custom\'</span><span class="token punctuation">,</span>\n        title<span class="token operator">:</span> <span class="token string">\'Active\'</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Active\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        group<span class="token operator">:</span> <span class="token string">\'Custom\'</span><span class="token punctuation">,</span>\n        title<span class="token operator">:</span> <span class="token string">\'Inactive\'</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Inactive\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token punctuation">}</span>',example:"import { Component } from '@angular/core';\nimport { Filter } from '@ux-aspects/ux-aspects';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html'\n})\nexport class AppComponent {\n\n    statusFilters: Filter[] = [{\n        group: 'Custom',\n        title: 'Status',\n        name: 'Status (All)',\n        initial: true\n    }, {\n        group: 'Custom',\n        title: 'Active',\n        name: 'Active'\n    }, {\n        group: 'Custom',\n        title: 'Inactive',\n        name: 'Inactive'\n    }];\n\n}"}},79223:c=>{c.exports={snippet:'<span class="token selector">.ux-custom-filter.active</span> <span class="token punctuation">{</span>\n    <span class="token property">font-weight</span><span class="token punctuation">:</span> 600<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.ux-custom-filter .custom-filter-chevron</span> <span class="token punctuation">{</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 0.625rem<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.ux-custom-filter .dropdown-menu .dropdown-list-item .dropdown-item</span> <span class="token punctuation">{</span>\n    <span class="token property">padding-left</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.ux-custom-filter .dropdown-menu .dropdown-list-item .dropdown-item ux-icon</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.ux-custom-filter .dropdown-menu .dropdown-list-item .dropdown-item .filter-dropdown-title</span> <span class="token punctuation">{</span>\n    <span class="token property">padding-left</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',example:".ux-custom-filter.active {\n    font-weight: 600;\n}\n\n.ux-custom-filter .custom-filter-chevron {\n    font-size: 0.625rem;\n}\n\n.ux-custom-filter .dropdown-menu .dropdown-list-item .dropdown-item {\n    padding-left: 10px;\n}\n\n.ux-custom-filter .dropdown-menu .dropdown-list-item .dropdown-item ux-icon {\n    display: inline-block;\n    width: 16px;\n}\n\n.ux-custom-filter .dropdown-menu .dropdown-list-item .dropdown-item .filter-dropdown-title {\n    padding-left: 10px;\n}\n"}},8047:c=>{c.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-group ux-custom-filter<span class="token punctuation">"</span></span>\n    <span class="token attr-name">dropdown</span>\n    <span class="token attr-name">#dropdown</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bs-dropdown<span class="token punctuation">"</span></span>\n    <span class="token attr-name">[autoClose]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span>\n        <span class="token attr-name">uxFocusIndicator</span>\n        <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>\n        <span class="token attr-name">dropdownToggle</span>\n        <span class="token attr-name">uxMenuNavigationToggle</span>\n        <span class="token attr-name">#toggle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uxMenuNavigationToggle<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[(menuOpen)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dropdown.isOpen<span class="token punctuation">"</span></span>\n        <span class="token attr-name">aria-haspopup</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[attr.aria-expanded]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dropdown.isOpen<span class="token punctuation">"</span></span>\n        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>filter-dropdown btn dropdown-toggle<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[class.active]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selected !== initial<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        {{ selected?.group }}\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>filter-title<span class="token punctuation">"</span></span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selected !== initial<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                ({{ selected?.title }})\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>custom-filter-chevron<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>down<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">*dropdownMenu</span>\n        <span class="token attr-name">uxMenuNavigation</span>\n        <span class="token attr-name">[toggleButton]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>toggle<span class="token punctuation">"</span></span>\n        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dropdown-menu<span class="token punctuation">"</span></span>\n        <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menu<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dropdown-list-item<span class="token punctuation">"</span></span>\n            <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let filter of filters<span class="token punctuation">"</span></span>\n            <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dropdown-item<span class="token punctuation">"</span></span>\n                <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menuitem<span class="token punctuation">"</span></span>\n                <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span>\n                <span class="token attr-name">uxMenuNavigationItem</span>\n                <span class="token attr-name">[attr.aria-selected]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>filter === selected<span class="token punctuation">"</span></span>\n                <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectFilter(filter, $event); toggle.focus()<span class="token punctuation">"</span></span>\n                <span class="token attr-name">(keydown.enter)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectFilter(filter, $event); toggle.focus()<span class="token punctuation">"</span></span>\n                <span class="token attr-name">(keydown.escape)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>toggle.focus()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">[name]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>filter === selected ? <span class="token punctuation">\'</span>checkmark<span class="token punctuation">\'</span> : null<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>filter-dropdown-title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{ filter.name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="btn-group ux-custom-filter"\n    dropdown\n    #dropdown="bs-dropdown"\n    [autoClose]="true">\n\n    <button type="button"\n        uxFocusIndicator\n        tabindex="0"\n        dropdownToggle\n        uxMenuNavigationToggle\n        #toggle="uxMenuNavigationToggle"\n        [(menuOpen)]="dropdown.isOpen"\n        aria-haspopup="true"\n        [attr.aria-expanded]="dropdown.isOpen"\n        class="filter-dropdown btn dropdown-toggle"\n        [class.active]="selected !== initial">\n        {{ selected?.group }}\n            <span class="filter-title" *ngIf="selected !== initial">\n                ({{ selected?.title }})\n            </span>\n        <ux-icon class="custom-filter-chevron" name="down"></ux-icon>\n    </button>\n\n    <ul *dropdownMenu\n        uxMenuNavigation\n        [toggleButton]="toggle"\n        class="dropdown-menu"\n        role="menu">\n\n        <li class="dropdown-list-item"\n            *ngFor="let filter of filters"\n            role="none">\n\n            <a class="dropdown-item"\n                role="menuitem"\n                tabindex="-1"\n                uxMenuNavigationItem\n                [attr.aria-selected]="filter === selected"\n                (click)="selectFilter(filter, $event); toggle.focus()"\n                (keydown.enter)="selectFilter(filter, $event); toggle.focus()"\n                (keydown.escape)="toggle.focus()">\n\n                <ux-icon [name]="filter === selected ? \'checkmark\' : null"></ux-icon>\n                <span class="filter-dropdown-title">{{ filter.name }}</span>\n            </a>\n        </li>\n    </ul>\n</div>'}},4051:c=>{c.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> Input<span class="token punctuation">,</span> OnDestroy<span class="token punctuation">,</span> OnInit <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Filter<span class="token punctuation">,</span> FilterRemoveAllEvent<span class="token punctuation">,</span> FilterService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> filter <span class="token keyword">as</span> rxFilter<span class="token punctuation">,</span> takeUntil <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'rxjs/operators\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Subject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'rxjs\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'ux-filter-custom\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./sample-filter.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./sample-filter.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">SampleFilterCustomComponent</span> <span class="token keyword">implements</span> <span class="token class-name">OnInit</span><span class="token punctuation">,</span> OnDestroy <span class="token punctuation">{</span>\n\n    @<span class="token function">Input</span><span class="token punctuation">(</span><span class="token punctuation">)</span> filters<span class="token operator">:</span> Filter<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    @<span class="token function">Input</span><span class="token punctuation">(</span><span class="token punctuation">)</span> initial<span class="token operator">:</span> Filter<span class="token punctuation">;</span>\n\n    selected<span class="token operator">:</span> Filter<span class="token punctuation">;</span>\n\n    <span class="token keyword">private</span> _onDestroy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Subject</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token keyword">private</span> _filterService<span class="token operator">:</span> FilterService</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// listen for remove all events in which case we should deselect event initial filters</span>\n        _filterService<span class="token punctuation">.</span>events$<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>\n            <span class="token function">takeUntil</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_onDestroy<span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token function">rxFilter</span><span class="token punctuation">(</span><span class="token parameter">event</span> <span class="token operator">=></span> event <span class="token keyword">instanceof</span> <span class="token class-name">FilterRemoveAllEvent</span><span class="token punctuation">)</span>\n        <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">removeFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// ensure that the current selected filter is still selected when the active filters change</span>\n        _filterService<span class="token punctuation">.</span>filters$<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">takeUntil</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_onDestroy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token parameter">filters</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>selected <span class="token operator">&amp;&amp;</span> filters<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>selected<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">removeFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">ngOnInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token comment">// initially select the default option</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>selected <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>initial<span class="token punctuation">;</span>\n\n        <span class="token comment">// watch for selected filters being changed externally</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_filterService<span class="token punctuation">.</span>filters$<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">takeUntil</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_onDestroy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token parameter">filters</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\n            <span class="token comment">// check if any selected filters are part of this filter</span>\n            filters<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">filter</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>filters<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>filter<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">this</span><span class="token punctuation">.</span>selected <span class="token operator">=</span> filter<span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">ngOnDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_onDestroy<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_onDestroy<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">removeFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token comment">// remove the currently selected filter</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_filterService<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>selected<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// select the default option</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>selected <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>initial<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">selectFilter</span><span class="token punctuation">(</span><span class="token parameter">filter<span class="token operator">:</span> Filter</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token comment">// deselect the currently selected filter</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">removeFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// store the active filter</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>selected <span class="token operator">=</span> filter<span class="token punctuation">;</span>\n\n        <span class="token comment">// select the filter</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_filterService<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>selected<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',example:"import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Filter, FilterRemoveAllEvent, FilterService } from '@ux-aspects/ux-aspects';\nimport { filter as rxFilter, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Component({\n    selector: 'ux-filter-custom',\n    templateUrl: './sample-filter.component.html',\n    styleUrls: ['./sample-filter.component.css']\n})\nexport class SampleFilterCustomComponent implements OnInit, OnDestroy {\n\n    @Input() filters: Filter[] = [];\n    @Input() initial: Filter;\n\n    selected: Filter;\n\n    private _onDestroy = new Subject<void>();\n\n    constructor(private _filterService: FilterService) {\n        // listen for remove all events in which case we should deselect event initial filters\n        _filterService.events$.pipe(\n            takeUntil(this._onDestroy),\n            rxFilter(event => event instanceof FilterRemoveAllEvent)\n        ).subscribe(() => this.removeFilter());\n\n        // ensure that the current selected filter is still selected when the active filters change\n        _filterService.filters$.pipe(takeUntil(this._onDestroy)).subscribe(filters => {\n            if (this.selected && filters.indexOf(this.selected) === -1) {\n                this.removeFilter();\n            }\n        });\n    }\n\n    ngOnInit(): void {\n        // initially select the default option\n        this.selected = this.initial;\n\n        // watch for selected filters being changed externally\n        this._filterService.filters$.pipe(takeUntil(this._onDestroy)).subscribe(filters => {\n\n            // check if any selected filters are part of this filter\n            filters.forEach(filter => {\n                if (this.filters.indexOf(filter) !== -1) {\n                    this.selected = filter;\n                }\n            });\n        });\n    }\n\n    ngOnDestroy(): void {\n        this._onDestroy.next();\n        this._onDestroy.complete();\n    }\n\n    removeFilter(): void {\n        // remove the currently selected filter\n        this._filterService.remove(this.selected);\n\n        // select the default option\n        this.selected = this.initial;\n    }\n\n    selectFilter(filter: Filter) {\n\n        // deselect the currently selected filter\n        this.removeFilter();\n\n        // store the active filter\n        this.selected = filter;\n\n        // select the filter\n        this._filterService.add(this.selected);\n    }\n}"}},78848:c=>{c.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-filter-container</span> <span class="token attr-name">[(filters)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>filters<span class="token punctuation">"</span></span> <span class="token attr-name">(filtersChange)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>apply()<span class="token punctuation">"</span></span> <span class="token attr-name">(events)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onEvent($event)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-filter-dynamic</span> <span class="token attr-name">[filters]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>authorFilters<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[initial]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>authorFilters[0]<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>typeaheadOptions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-filter-dynamic</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-filter-dropdown</span> <span class="token attr-name">[filters]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>statusFilters<span class="token punctuation">"</span></span> <span class="token attr-name">[initial]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>statusFilters[0]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-filter-dropdown</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-filter-container</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table table-hover<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Author<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Date modified<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Work completed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Status<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clickable<span class="token punctuation">"</span></span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let document of documents<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{ document.name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{ document.author }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{ document.date }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-spark</span> <span class="token attr-name">theme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chart2<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[value]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>document.completed<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">barHeight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[inlineLabel]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>document.completed<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-spark</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-center vertical-center-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span>\n                    <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>document.active<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkmark<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[attr.aria-label]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>document.active ? <span class="token punctuation">\'</span>Approved<span class="token punctuation">\'</span> : <span class="token punctuation">\'</span>Not approved<span class="token punctuation">\'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Active filters:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">></span></span>{{ filters | json }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">></span></span>\n',example:'<ux-filter-container [(filters)]="filters" (filtersChange)="apply()" (events)="onEvent($event)">\n    <ux-filter-dynamic [filters]="authorFilters"\n        [initial]="authorFilters[0]"\n        [options]="typeaheadOptions">\n    </ux-filter-dynamic>\n    <ux-filter-dropdown [filters]="statusFilters" [initial]="statusFilters[0]"></ux-filter-dropdown>\n</ux-filter-container>\n\n<table class="table table-hover">\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Author</th>\n            <th>Date modified</th>\n            <th>Work completed</th>\n            <th class="text-center">Status</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr class="clickable" *ngFor="let document of documents">\n            <td>{{ document.name }}</td>\n            <td>{{ document.author }}</td>\n            <td>{{ document.date }}</td>\n            <td>\n                <ux-spark theme="chart2"\n                    [value]="document.completed"\n                    barHeight="3"\n                    [inlineLabel]="document.completed">\n                </ux-spark>\n            </td>\n            <td class="text-center vertical-center-icon">\n                <ux-icon\n                    *ngIf="document.active"\n                    name="checkmark"\n                    [attr.aria-label]="document.active ? \'Approved\' : \'Not approved\'">\n                </ux-icon>\n            </td>\n        </tr>\n    </tbody>\n</table>\n\n<p>Active filters:</p>\n<pre>{{ filters | json }}</pre>\n'}},47759:c=>{c.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> LiveAnnouncer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/cdk/a11y\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Filter<span class="token punctuation">,</span> FilterAddEvent<span class="token punctuation">,</span> FilterEvent<span class="token punctuation">,</span> FilterRemoveAllEvent<span class="token punctuation">,</span> FilterRemoveEvent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'chance\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n    filters<span class="token operator">:</span> Filter<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    statusFilters<span class="token operator">:</span> Filter<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n        group<span class="token operator">:</span> <span class="token string">\'Status\'</span><span class="token punctuation">,</span>\n        title<span class="token operator">:</span> <span class="token string">\'Status\'</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Status (All)\'</span><span class="token punctuation">,</span>\n        initial<span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        group<span class="token operator">:</span> <span class="token string">\'Status\'</span><span class="token punctuation">,</span>\n        title<span class="token operator">:</span> <span class="token string">\'Active\'</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Active\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        group<span class="token operator">:</span> <span class="token string">\'Status\'</span><span class="token punctuation">,</span>\n        title<span class="token operator">:</span> <span class="token string">\'Inactive\'</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Inactive\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    authorFilters<span class="token operator">:</span> Filter<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n        group<span class="token operator">:</span> <span class="token string">\'Author\'</span><span class="token punctuation">,</span>\n        title<span class="token operator">:</span> <span class="token string">\'Author\'</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Author (All)\'</span><span class="token punctuation">,</span>\n        initial<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        group<span class="token operator">:</span> <span class="token string">\'Author\'</span><span class="token punctuation">,</span>\n        title<span class="token operator">:</span> <span class="token string">\'Lily Clarke\'</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Lily Clarke\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        group<span class="token operator">:</span> <span class="token string">\'Author\'</span><span class="token punctuation">,</span>\n        title<span class="token operator">:</span> <span class="token string">\'Jesse Bass\'</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Jesse Bass\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        group<span class="token operator">:</span> <span class="token string">\'Author\'</span><span class="token punctuation">,</span>\n        title<span class="token operator">:</span> <span class="token string">\'Iva Rogers\'</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Iva Rogers\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        group<span class="token operator">:</span> <span class="token string">\'Author\'</span><span class="token punctuation">,</span>\n        title<span class="token operator">:</span> <span class="token string">\'Nina Copeland\'</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Nina Copeland\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        group<span class="token operator">:</span> <span class="token string">\'Author\'</span><span class="token punctuation">,</span>\n        title<span class="token operator">:</span> <span class="token string">\'Bradley Mason\'</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Bradley Mason\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        group<span class="token operator">:</span> <span class="token string">\'Author\'</span><span class="token punctuation">,</span>\n        title<span class="token operator">:</span> <span class="token string">\'Aaron Scott\'</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Aaron Scott\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        group<span class="token operator">:</span> <span class="token string">\'Author\'</span><span class="token punctuation">,</span>\n        title<span class="token operator">:</span> <span class="token string">\'Ethel Collier\'</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Ethel Collier\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        group<span class="token operator">:</span> <span class="token string">\'Author\'</span><span class="token punctuation">,</span>\n        title<span class="token operator">:</span> <span class="token string">\'Lois Saunders\'</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Lois Saunders\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    typeaheadOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\n        placeholder<span class="token operator">:</span> <span class="token string">\'Find Author\'</span><span class="token punctuation">,</span>\n        minCharacters<span class="token operator">:</span> <span class="token number">1</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    dataSource<span class="token operator">:</span> ReadonlyArray<span class="token operator">&lt;</span>FilterSampleItem<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n        id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Document\'</span><span class="token punctuation">,</span>\n        author<span class="token operator">:</span> <span class="token string">\'Lily Clarke\'</span><span class="token punctuation">,</span>\n        date<span class="token operator">:</span> <span class="token string">\'18 Dec 2016\'</span><span class="token punctuation">,</span>\n        completed<span class="token operator">:</span> <span class="token number">97</span><span class="token punctuation">,</span>\n        active<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">bool</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        id<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Email\'</span><span class="token punctuation">,</span>\n        author<span class="token operator">:</span> <span class="token string">\'Jesse Bass\'</span><span class="token punctuation">,</span>\n        date<span class="token operator">:</span> <span class="token string">\'22 Dec 2016\'</span><span class="token punctuation">,</span>\n        completed<span class="token operator">:</span> <span class="token number">15</span><span class="token punctuation">,</span>\n        active<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">bool</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        id<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Email\'</span><span class="token punctuation">,</span>\n        author<span class="token operator">:</span> <span class="token string">\'Iva Rogers\'</span><span class="token punctuation">,</span>\n        date<span class="token operator">:</span> <span class="token string">\'12 Dec 2016\'</span><span class="token punctuation">,</span>\n        completed<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n        active<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">bool</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        id<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Email\'</span><span class="token punctuation">,</span>\n        author<span class="token operator">:</span> <span class="token string">\'Nina Copeland\'</span><span class="token punctuation">,</span>\n        date<span class="token operator">:</span> <span class="token string">\'16 Dec 2016\'</span><span class="token punctuation">,</span>\n        completed<span class="token operator">:</span> <span class="token number">74</span><span class="token punctuation">,</span>\n        active<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">bool</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        id<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Email\'</span><span class="token punctuation">,</span>\n        author<span class="token operator">:</span> <span class="token string">\'Bradley Mason\'</span><span class="token punctuation">,</span>\n        date<span class="token operator">:</span> <span class="token string">\'17 Dec 2016\'</span><span class="token punctuation">,</span>\n        completed<span class="token operator">:</span> <span class="token number">63</span><span class="token punctuation">,</span>\n        active<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">bool</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        id<span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Document\'</span><span class="token punctuation">,</span>\n        author<span class="token operator">:</span> <span class="token string">\'Aaron Scott\'</span><span class="token punctuation">,</span>\n        date<span class="token operator">:</span> <span class="token string">\'21 Dec 2016\'</span><span class="token punctuation">,</span>\n        completed<span class="token operator">:</span> <span class="token number">21</span><span class="token punctuation">,</span>\n        active<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">bool</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        id<span class="token operator">:</span> <span class="token number">7</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Document\'</span><span class="token punctuation">,</span>\n        author<span class="token operator">:</span> <span class="token string">\'Lily Clarke\'</span><span class="token punctuation">,</span>\n        date<span class="token operator">:</span> <span class="token string">\'17 Dec 2016\'</span><span class="token punctuation">,</span>\n        completed<span class="token operator">:</span> <span class="token number">85</span><span class="token punctuation">,</span>\n        active<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">bool</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        id<span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Document\'</span><span class="token punctuation">,</span>\n        author<span class="token operator">:</span> <span class="token string">\'Lily Clarke\'</span><span class="token punctuation">,</span>\n        date<span class="token operator">:</span> <span class="token string">\'17 Dec 2016\'</span><span class="token punctuation">,</span>\n        completed<span class="token operator">:</span> <span class="token number">11</span><span class="token punctuation">,</span>\n        active<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">bool</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    documents<span class="token operator">:</span> ReadonlyArray<span class="token operator">&lt;</span>FilterSampleItem<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>dataSource<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token keyword">private</span> _announcer<span class="token operator">:</span> LiveAnnouncer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>\n\n    <span class="token comment">/** Provide accesibility feedback */</span>\n    <span class="token function">onEvent</span><span class="token punctuation">(</span><span class="token parameter">event<span class="token operator">:</span> FilterEvent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token comment">// announce the selection</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>event <span class="token keyword">instanceof</span> <span class="token class-name">FilterAddEvent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>_announcer<span class="token punctuation">.</span><span class="token function">announce</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Filter </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>event<span class="token punctuation">.</span>filter<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> selected.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">// announce the deselection</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>event <span class="token keyword">instanceof</span> <span class="token class-name">FilterRemoveEvent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>_announcer<span class="token punctuation">.</span><span class="token function">announce</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Filter </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>event<span class="token punctuation">.</span>filter<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> deselected.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">// announce the deselection of all filters</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>event <span class="token keyword">instanceof</span> <span class="token class-name">FilterRemoveAllEvent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>_announcer<span class="token punctuation">.</span><span class="token function">announce</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">All filters deselected.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">apply</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n\n        <span class="token comment">// restore the table data to the full datasource</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>documents <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>dataSource<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// apply each filter</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>filters<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">filter</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">switch</span> <span class="token punctuation">(</span>filter<span class="token punctuation">.</span>group<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n                <span class="token keyword">case</span> <span class="token string">\'Author\'</span><span class="token operator">:</span>\n                    <span class="token keyword">this</span><span class="token punctuation">.</span>documents <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>documents<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> item<span class="token punctuation">.</span>author <span class="token operator">===</span> filter<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token keyword">break</span><span class="token punctuation">;</span>\n\n                <span class="token keyword">case</span> <span class="token string">\'Status\'</span><span class="token operator">:</span>\n                    <span class="token keyword">this</span><span class="token punctuation">.</span>documents <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>documents<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> item<span class="token punctuation">.</span>active <span class="token operator">===</span> <span class="token punctuation">(</span>filter<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">\'Active\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token keyword">break</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">FilterSampleItem</span> <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> number<span class="token punctuation">;</span>\n    name<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    author<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    date<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    completed<span class="token operator">:</span> number<span class="token punctuation">;</span>\n    active<span class="token operator">:</span> boolean<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:"import { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Component } from '@angular/core';\nimport { Filter, FilterAddEvent, FilterEvent, FilterRemoveAllEvent, FilterRemoveEvent } from '@ux-aspects/ux-aspects';\nimport 'chance';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html',\n})\nexport class AppComponent {\n    filters: Filter[] = [];\n\n    statusFilters: Filter[] = [{\n        group: 'Status',\n        title: 'Status',\n        name: 'Status (All)',\n        initial: true\n    }, {\n        group: 'Status',\n        title: 'Active',\n        name: 'Active'\n    }, {\n        group: 'Status',\n        title: 'Inactive',\n        name: 'Inactive'\n    }];\n\n    authorFilters: Filter[] = [{\n        group: 'Author',\n        title: 'Author',\n        name: 'Author (All)',\n        initial: true,\n    }, {\n        group: 'Author',\n        title: 'Lily Clarke',\n        name: 'Lily Clarke'\n    }, {\n        group: 'Author',\n        title: 'Jesse Bass',\n        name: 'Jesse Bass'\n    }, {\n        group: 'Author',\n        title: 'Iva Rogers',\n        name: 'Iva Rogers'\n    }, {\n        group: 'Author',\n        title: 'Nina Copeland',\n        name: 'Nina Copeland'\n    }, {\n        group: 'Author',\n        title: 'Bradley Mason',\n        name: 'Bradley Mason'\n    }, {\n        group: 'Author',\n        title: 'Aaron Scott',\n        name: 'Aaron Scott'\n    }, {\n        group: 'Author',\n        title: 'Ethel Collier',\n        name: 'Ethel Collier'\n    }, {\n        group: 'Author',\n        title: 'Lois Saunders',\n        name: 'Lois Saunders'\n    }];\n\n    typeaheadOptions = {\n        placeholder: 'Find Author',\n        minCharacters: 1\n    };\n\n    dataSource: ReadonlyArray<FilterSampleItem> = [{\n        id: 1,\n        name: 'Document',\n        author: 'Lily Clarke',\n        date: '18 Dec 2016',\n        completed: 97,\n        active: chance.bool()\n    }, {\n        id: 2,\n        name: 'Email',\n        author: 'Jesse Bass',\n        date: '22 Dec 2016',\n        completed: 15,\n        active: chance.bool()\n    }, {\n        id: 3,\n        name: 'Email',\n        author: 'Iva Rogers',\n        date: '12 Dec 2016',\n        completed: 20,\n        active: chance.bool()\n    }, {\n        id: 4,\n        name: 'Email',\n        author: 'Nina Copeland',\n        date: '16 Dec 2016',\n        completed: 74,\n        active: chance.bool()\n    }, {\n        id: 5,\n        name: 'Email',\n        author: 'Bradley Mason',\n        date: '17 Dec 2016',\n        completed: 63,\n        active: chance.bool()\n    }, {\n        id: 6,\n        name: 'Document',\n        author: 'Aaron Scott',\n        date: '21 Dec 2016',\n        completed: 21,\n        active: chance.bool()\n    }, {\n        id: 7,\n        name: 'Document',\n        author: 'Lily Clarke',\n        date: '17 Dec 2016',\n        completed: 85,\n        active: chance.bool()\n    }, {\n        id: 8,\n        name: 'Document',\n        author: 'Lily Clarke',\n        date: '17 Dec 2016',\n        completed: 11,\n        active: chance.bool()\n    }];\n\n    documents: ReadonlyArray<FilterSampleItem> = [...this.dataSource];\n\n    constructor(private _announcer: LiveAnnouncer) { }\n\n    /** Provide accesibility feedback */\n    onEvent(event: FilterEvent) {\n\n        // announce the selection\n        if (event instanceof FilterAddEvent) {\n            this._announcer.announce(`Filter ${event.filter.name} selected.`);\n        }\n\n        // announce the deselection\n        if (event instanceof FilterRemoveEvent) {\n            this._announcer.announce(`Filter ${event.filter.name} deselected.`);\n        }\n\n        // announce the deselection of all filters\n        if (event instanceof FilterRemoveAllEvent) {\n            this._announcer.announce(`All filters deselected.`);\n        }\n    }\n\n    apply(): void {\n\n        // restore the table data to the full datasource\n        this.documents = [...this.dataSource];\n\n        // apply each filter\n        this.filters.forEach(filter => {\n            switch (filter.group) {\n\n                case 'Author':\n                    this.documents = this.documents.filter(item => item.author === filter.name);\n                    break;\n\n                case 'Status':\n                    this.documents = this.documents.filter(item => item.active === (filter.name === 'Active'));\n                    break;\n            }\n        });\n    }\n}\n\ninterface FilterSampleItem {\n    id: number;\n    name: string;\n    author: string;\n    date: string;\n    completed: number;\n    active: boolean;\n}"}},9398:c=>{c.exports={snippet:'<span class="token selector">.loading-indicator</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  \n<span class="token punctuation">}</span>\n\n<span class="token selector">.loading-indicator .spinner</span> <span class="token punctuation">{</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 0 1em 0 0.5em<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.loading-indicator .loading-indicator-label</span> <span class="token punctuation">{</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">font-style</span><span class="token punctuation">:</span> italic<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.table-col-id</span> <span class="token punctuation">{</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>\n    <span class="token property">min-width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>\n    <span class="token property">flex</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:".loading-indicator {\n    display: flex;\n    align-items: center;  \n}\n\n.loading-indicator .spinner {\n    margin: 0 1em 0 0.5em;\n}\n\n.loading-indicator .loading-indicator-label {\n    margin: 0;\n    font-style: italic;\n}\n\n.table-col-id {\n    width: 50px;\n    min-width: 50px;\n    flex: none;\n}"}},18677:c=>{c.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table<span class="token punctuation">"</span></span>\n    <span class="token attr-name">uxFixedHeaderTable</span>\n    <span class="token attr-name">[dataset]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>people<span class="token punctuation">"</span></span>\n    <span class="token attr-name">(tablePaging)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loadPage()<span class="token punctuation">"</span></span>\n    <span class="token attr-name">[tableHeight]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>500<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table-col-id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Id<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Phone<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Active<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let person of people; let index = index<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[attr.aria-setsize]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>total<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[attr.aria-posinset]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table-col-id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{ person.id }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{ person.name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{ person.address }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{ person.phone }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">[attr.aria-label]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>person.active ? <span class="token punctuation">\'</span>Active<span class="token punctuation">\'</span> : <span class="token punctuation">\'</span>Inactive<span class="token punctuation">\'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkmark<span class="token punctuation">"</span></span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>person.active<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n\n        <span class="token comment">&lt;!-- Loading Indicator --\x3e</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loading<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loading-indicator<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>spinner spinner-accent spinner-bounce-middle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loading-indicator-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Loading...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>',example:'<table class="table"\n    uxFixedHeaderTable\n    [dataset]="people"\n    (tablePaging)="loadPage()"\n    [tableHeight]="500">\n    <thead>\n        <tr>\n            <th class="table-col-id">Id</th>\n            <th>Name</th>\n            <th>Address</th>\n            <th>Phone</th>\n            <th>Active</th>\n        </tr>\n    </thead>\n\n    <tbody>\n        <tr *ngFor="let person of people; let index = index"\n            [attr.aria-setsize]="total"\n            [attr.aria-posinset]="index">\n\n            <td class="table-col-id">{{ person.id }}</td>\n            <td>{{ person.name }}</td>\n            <td>{{ person.address }}</td>\n            <td>{{ person.phone }}</td>\n            <td [attr.aria-label]="person.active ? \'Active\' : \'Inactive\'">\n                <ux-icon name="checkmark" *ngIf="person.active"></ux-icon>\n            </td>\n        </tr>\n\n        \x3c!-- Loading Indicator --\x3e\n        <tr *ngIf="loading">\n            <td class="loading-indicator">\n                <div class="spinner spinner-accent spinner-bounce-middle"></div>\n                <p class="loading-indicator-label">Loading...</p>\n            </td>\n        </tr>\n\n    </tbody>\n</table>'}},17094:c=>{c.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    people<span class="token operator">:</span> ReadonlyArray<span class="token operator">&lt;</span>Person<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    loading<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    total<span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">250</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">private</span> _page<span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n\n    <span class="token comment">/**\n     * Simulate the server request\n     */</span>\n    <span class="token function">loadPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n\n        <span class="token comment">// if we are currently loading or are loading more than 5 pages</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>loading <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_page <span class="token operator">>=</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">// update the loading state</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>loading <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// simulate server call</span>\n        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\n            <span class="token comment">// update the list of people and increment the current page</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>people <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>people<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPeople</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_page<span class="token operator">++</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n            <span class="token comment">// set the loading state to false</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>loading <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">/**\n     * Generate some data about people\n     */</span>\n    <span class="token keyword">private</span> <span class="token function">getPeople</span><span class="token punctuation">(</span>page<span class="token operator">:</span> number<span class="token punctuation">,</span> count<span class="token operator">:</span> number<span class="token punctuation">)</span><span class="token operator">:</span> Person<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>\n\n        <span class="token comment">// create an array of people</span>\n        <span class="token keyword">const</span> people<span class="token operator">:</span> Person<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// populate the array with dummy data</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> idx <span class="token operator">=</span> page <span class="token operator">*</span> count<span class="token punctuation">;</span> idx <span class="token operator">&lt;</span> <span class="token punctuation">(</span>page <span class="token operator">*</span> count<span class="token punctuation">)</span> <span class="token operator">+</span> count<span class="token punctuation">;</span> idx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            people<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                id<span class="token operator">:</span> idx<span class="token punctuation">,</span>\n                name<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                address<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                phone<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">phone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                active<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">bool</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">return</span> people<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> number<span class="token punctuation">;</span>\n    name<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    address<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    phone<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    active<span class="token operator">:</span> boolean<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:"import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    people: ReadonlyArray<Person> = [];\n    loading: boolean = false;\n    total: number = 250;\n\n    private _page: number = 0;\n\n    /**\n     * Simulate the server request\n     */\n    loadPage(): void {\n\n        // if we are currently loading or are loading more than 5 pages\n        if (this.loading || this._page >= 5) {\n            return;\n        }\n\n        // update the loading state\n        this.loading = true;\n\n        // simulate server call\n        setTimeout(() => {\n\n            // update the list of people and increment the current page\n            this.people = [...this.people, ...this.getPeople(this._page++, 50)];\n\n            // set the loading state to false\n            this.loading = false;\n\n        }, 2000);\n    }\n\n    /**\n     * Generate some data about people\n     */\n    private getPeople(page: number, count: number): Person[] {\n\n        // create an array of people\n        const people: Person[] = [];\n\n        // populate the array with dummy data\n        for (let idx = page * count; idx < (page * count) + count; idx++) {\n            people.push({\n                id: idx,\n                name: chance.name(),\n                address: chance.address(),\n                phone: chance.phone(),\n                active: chance.bool()\n            });\n        }\n\n        return people;\n    }\n\n}\n\ninterface Person {\n    id: number;\n    name: string;\n    address: string;\n    phone: string;\n    active: boolean;\n}"}},20375:c=>{c.exports={snippet:'<span class="token selector">.hover-action-container</span> <span class="token punctuation">{</span>\n    <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.hover-action-container:focus,\n.hover-action-container.hover-action-container-active</span> <span class="token punctuation">{</span>\n    <span class="token property">background-color</span><span class="token punctuation">:</span> #f5f5f5<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.hover-action-container .hover-action-btn</span> <span class="token punctuation">{</span>\n    <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token property">background-color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.hover-action-container .hover-action-icon</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 3px 6px<span class="token punctuation">;</span>\n    <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',example:".hover-action-container {\n    outline: none;\n}\n\n.hover-action-container:focus,\n.hover-action-container.hover-action-container-active {\n    background-color: #f5f5f5;\n}\n\n.hover-action-container .hover-action-btn {\n    border: none;\n    background-color: transparent;\n    padding: 0;\n}\n\n.hover-action-container .hover-action-icon {\n    display: inline-block;\n    padding: 3px 6px;\n    cursor: pointer;\n}\n"}},86372:c=>{c.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table table-hover<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table-header-dark<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Author<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Date<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Work Completed (%)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span> <span class="token attr-name">[(uxSelection)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selected<span class="token punctuation">"</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row-alt<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let document of documents<span class="token punctuation">"</span></span>\n            <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hover-action-container<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[uxSelectionItem]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>document<span class="token punctuation">"</span></span>\n            <span class="token attr-name">uxHoverActionContainer</span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-black<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{ document.name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{ document.author }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{ document.date | date: \'shortDate\' }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-spark</span> <span class="token attr-name">[value]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>document.complete<span class="token punctuation">"</span></span> <span class="token attr-name">[inlineLabel]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>document.complete<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">barHeight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-spark</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hover-action-btn<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>View<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">uxTooltip</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>View<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">uxHoverAction</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>view<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hover-action-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hover-action-btn<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Share<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">uxTooltip</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Share<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">uxHoverAction</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>share<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hover-action-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hover-action-btn<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Delete<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">uxTooltip</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Delete<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">uxHoverAction</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>trash<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hover-action-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>\n',example:'<table class="table table-hover">\n    <thead>\n        <tr class="table-header-dark">\n            <th>Name</th>\n            <th>Author</th>\n            <th>Date</th>\n            <th>Work Completed (%)</th>\n            <th></th>\n        </tr>\n    </thead>\n\n    <tbody [(uxSelection)]="selected" mode="row-alt">\n        <tr *ngFor="let document of documents"\n            class="hover-action-container"\n            [uxSelectionItem]="document"\n            uxHoverActionContainer>\n\n            <td class="text-black">{{ document.name }}</td>\n            <td>{{ document.author }}</td>\n            <td>{{ document.date | date: \'shortDate\' }}</td>\n            <td>\n                <ux-spark [value]="document.complete" [inlineLabel]="document.complete"\n                    barHeight="3"></ux-spark>\n            </td>\n            <td>\n                <button type="button"\n                    class="hover-action-btn"\n                    aria-label="View"\n                    uxTooltip="View"\n                    uxHoverAction>\n                    <ux-icon name="view" class="hover-action-icon"></ux-icon>\n                </button>\n                <button type="button"\n                    class="hover-action-btn"\n                    aria-label="Share"\n                    uxTooltip="Share"\n                    uxHoverAction>\n                    <ux-icon name="share" class="hover-action-icon"></ux-icon>\n                </button>\n                <button type="button"\n                    class="hover-action-btn"\n                    aria-label="Delete"\n                    uxTooltip="Delete"\n                    uxHoverAction>\n                    <ux-icon name="trash" class="hover-action-icon"></ux-icon>\n                </button>\n            </td>\n\n        </tr>\n    </tbody>\n</table>\n'}},77455:c=>{c.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'chance\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    documents<span class="token operator">:</span> HoverActionDocument<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    selected<span class="token operator">:</span> HoverActionDocument<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> idx <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> idx <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> idx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>documents<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Document </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>idx<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n                author<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                date<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token punctuation">{</span> year<span class="token operator">:</span> <span class="token number">2017</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">as</span> Date<span class="token punctuation">,</span>\n                complete<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">floating</span><span class="token punctuation">(</span><span class="token punctuation">{</span> min<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> max<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> fixed<span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">HoverActionDocument</span> <span class="token punctuation">{</span>\n    name<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    author<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    date<span class="token operator">:</span> Date<span class="token punctuation">;</span>\n    complete<span class="token operator">:</span> number<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:"import { Component } from '@angular/core';\nimport 'chance';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    documents: HoverActionDocument[] = [];\n    selected: HoverActionDocument[] = [];\n\n    constructor() {\n\n        for (let idx = 1; idx < 6; idx++) {\n            this.documents.push({\n                name: `Document ${idx}`,\n                author: chance.name(),\n                date: chance.date({ year: 2017 }) as Date,\n                complete: chance.floating({ min: 0, max: 100, fixed: 2 })\n            });\n        }\n    }\n}\n\ninterface HoverActionDocument {\n    name: string;\n    author: string;\n    date: Date;\n    complete: number;\n}"}},97693:c=>{c.exports={snippet:'<span class="token selector">.layout-switcher-example</span> <span class="token punctuation">{</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 430px<span class="token punctuation">;</span>\n    <span class="token property">overflow-y</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.layout-switcher-card-container .layout-switcher-card</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>33% - 20px<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 115px<span class="token punctuation">;</span>\n    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #e7eaec<span class="token punctuation">;</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 15px 10px<span class="token punctuation">;</span>\n    <span class="token property">cursor</span><span class="token punctuation">:</span> default<span class="token punctuation">;</span>\n    <span class="token property">vertical-align</span><span class="token punctuation">:</span> top<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.layout-switcher-card-container .layout-switcher-card:hover</span> <span class="token punctuation">{</span>\n    <span class="token property">background-color</span><span class="token punctuation">:</span> #f5f5f5<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.layout-switcher-card-stack-container .layout-switcher-card-stack-card</span> <span class="token punctuation">{</span>\n    <span class="token property">border-left</span><span class="token punctuation">:</span> 1px solid #e7eaec<span class="token punctuation">;</span>\n    <span class="token property">border-right</span><span class="token punctuation">:</span> 1px solid #e7eaec<span class="token punctuation">;</span>\n    <span class="token property">border-bottom</span><span class="token punctuation">:</span> 1px solid #e7eaec<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.layout-switcher-card-stack-container .layout-switcher-card-stack-card:first-of-type</span> <span class="token punctuation">{</span>\n    <span class="token property">border-top</span><span class="token punctuation">:</span> 1px solid #e7eaec<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.layout-switcher-card-stack-container .layout-switcher-card-stack-card:hover</span> <span class="token punctuation">{</span>\n    <span class="token property">background-color</span><span class="token punctuation">:</span> #f5f5f5<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.dimension-slider</span> <span class="token punctuation">{</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>\n    <span class="token property">margin-left</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:".layout-switcher-example {\n    height: 430px;\n    overflow-y: auto;\n}\n\n.layout-switcher-card-container .layout-switcher-card {\n    display: inline-block;\n    width: calc(33% - 20px);\n    height: 115px;\n    border: 1px solid #e7eaec;\n    margin: 10px;\n    padding: 15px 10px;\n    cursor: default;\n    vertical-align: top;\n}\n\n.layout-switcher-card-container .layout-switcher-card:hover {\n    background-color: #f5f5f5;\n}\n\n.layout-switcher-card-stack-container .layout-switcher-card-stack-card {\n    border-left: 1px solid #e7eaec;\n    border-right: 1px solid #e7eaec;\n    border-bottom: 1px solid #e7eaec;\n    padding: 10px;\n}\n\n.layout-switcher-card-stack-container .layout-switcher-card-stack-card:first-of-type {\n    border-top: 1px solid #e7eaec;\n}\n\n.layout-switcher-card-stack-container .layout-switcher-card-stack-card:hover {\n    background-color: #f5f5f5;\n}\n\n.dimension-slider {\n    width: 400px;\n    margin-left: 30px;\n}"}},91944:c=>{c.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-group pull-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-toggle-primary<span class="token punctuation">"</span></span> \n            <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>group<span class="token punctuation">"</span></span> <span class="token attr-name">btnRadio</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Table<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-toggle-primary<span class="token punctuation">"</span></span> \n            <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>group<span class="token punctuation">"</span></span> <span class="token attr-name">btnRadio</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Card<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row m-t<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>layout-switcher-example<span class="token punctuation">"</span></span> <span class="token attr-name">uxLayoutSwitcher</span> <span class="token attr-name">[group]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>group<span class="token punctuation">"</span></span> \n        <span class="token attr-name">[style.width.%]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n        <span class="token comment">&lt;!-- Table Layout --\x3e</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table-reponsive<span class="token punctuation">"</span></span> <span class="token attr-name">*uxLayoutSwitcherItem</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>layouts.table<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table table-hover<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Author<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Date<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>\n\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let document of documents<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-black<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{ document.name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{ document.author }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{ document.date.toLocaleDateString() }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n        <span class="token comment">&lt;!-- Card Layout--\x3e</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>layout-switcher-card-container<span class="token punctuation">"</span></span> <span class="token attr-name">*uxLayoutSwitcherItem</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>layouts.card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>layout-switcher-card<span class="token punctuation">"</span></span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let document of documents<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-black m-t-nil<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{ document.name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>m-b-nil<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-muted<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Authored on<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span> \n                    {{ document.date.toLocaleDateString() }}\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-muted<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>by<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span> {{ document.author }}\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n        <span class="token comment">&lt;!-- Card Stack Layout--\x3e</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>layout-switcher-card-stack-container<span class="token punctuation">"</span></span> <span class="token attr-name">*uxLayoutSwitcherItem</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>layouts.cardstack<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>layout-switcher-card-stack-card<span class="token punctuation">"</span></span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let document of documents<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-black m-t-nil<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{ document.name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>m-b-nil<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-muted<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Authored on<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span> \n                    {{ document.date.toLocaleDateString() }}\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-muted<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>by<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span> {{ document.author }}\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row uxd-customize-example<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-accordion</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-accordion-panel</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>accordion-chevron<span class="token punctuation">"</span></span> <span class="token attr-name">heading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Customize Example...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row uxd-customize-row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>Container Width<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-slider</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dimension-slider<span class="token punctuation">"</span></span> <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width<span class="token punctuation">"</span></span> \n                            <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>options<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-slider</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row uxd-customize-row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">></span></span>\n                            Use the slider above to change the width of the container element. \n                            When displaying the <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>table<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span> group the layout will simply resize, \n                            however when displaying the <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>card<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span> group it will\n                            switch between a grid and stacked layout depending on the \n                            size of the container.\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-accordion-panel</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-accordion</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="row">\n    <div class="btn-group pull-right">\n        <button type="button" class="btn button-toggle-primary" \n            [(ngModel)]="group" btnRadio="table">Table</button>\n\n        <button type="button" class="btn button-toggle-primary" \n            [(ngModel)]="group" btnRadio="card">Card</button>\n    </div>\n</div>\n\n<div class="row m-t">\n\n    <div class="layout-switcher-example" uxLayoutSwitcher [group]="group" \n        [style.width.%]="width">\n\n        \x3c!-- Table Layout --\x3e\n        <div class="table-reponsive" *uxLayoutSwitcherItem="layouts.table">\n            <table class="table table-hover">\n                <thead>\n                    <tr>\n                        <th>Document</th>\n                        <th>Author</th>\n                        <th>Date</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    <tr *ngFor="let document of documents">\n                        <td class="text-black">{{ document.name }}</td>\n                        <td>{{ document.author }}</td>\n                        <td>{{ document.date.toLocaleDateString() }}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n\n        \x3c!-- Card Layout--\x3e\n        <div class="layout-switcher-card-container" *uxLayoutSwitcherItem="layouts.card">\n            <div class="layout-switcher-card" *ngFor="let document of documents">\n                <h3 class="text-black m-t-nil">{{ document.name }}</h3>\n                <p class="m-b-nil">\n                    <span class="text-muted">Authored on</span> \n                    {{ document.date.toLocaleDateString() }}\n                    <span class="text-muted">by</span> {{ document.author }}\n                </p>\n            </div>\n        </div>\n\n        \x3c!-- Card Stack Layout--\x3e\n        <div class="layout-switcher-card-stack-container" *uxLayoutSwitcherItem="layouts.cardstack">\n            <div class="layout-switcher-card-stack-card" *ngFor="let document of documents">\n                <h3 class="text-black m-t-nil">{{ document.name }}</h3>\n                <p class="m-b-nil">\n                    <span class="text-muted">Authored on</span> \n                    {{ document.date.toLocaleDateString() }}\n                    <span class="text-muted">by</span> {{ document.author }}\n                </p>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class="row uxd-customize-example">\n    <div class="col-md-12">\n        <ux-accordion>\n            <ux-accordion-panel class="accordion-chevron" heading="Customize Example...">\n\n                <div class="row uxd-customize-row">\n                    <div class="col-md-12">\n                        <label>Container Width</label>\n                        <ux-slider class="dimension-slider" [(value)]="width" \n                            [options]="options"></ux-slider>\n                    </div>\n                </div>\n\n                <div class="row uxd-customize-row">\n                    <div class="col-md-12">\n                        <i>\n                            Use the slider above to change the width of the container element. \n                            When displaying the <b>table</b> group the layout will simply resize, \n                            however when displaying the <b>card</b> group it will\n                            switch between a grid and stacked layout depending on the \n                            size of the container.\n                        </i>\n                    </div>\n                </div>\n\n            </ux-accordion-panel>\n        </ux-accordion>\n    </div>\n</div>'}},80297:c=>{c.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> SliderOptions<span class="token punctuation">,</span> SliderType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'chance\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    width<span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>\n    group<span class="token operator">:</span> string <span class="token operator">=</span> <span class="token string">\'table\'</span><span class="token punctuation">;</span>\n    documents<span class="token operator">:</span> LayoutSwitchingData<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    options<span class="token operator">:</span> SliderOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\n        type<span class="token operator">:</span> SliderType<span class="token punctuation">.</span>Value<span class="token punctuation">,</span>\n        track<span class="token operator">:</span> <span class="token punctuation">{</span>\n            min<span class="token operator">:</span> <span class="token number">40</span><span class="token punctuation">,</span>\n            max<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n            ticks<span class="token operator">:</span> <span class="token punctuation">{</span>\n                major<span class="token operator">:</span> <span class="token punctuation">{</span>\n                    show<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                    steps<span class="token operator">:</span> <span class="token number">60</span><span class="token punctuation">,</span>\n                    labels<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                    <span class="token function-variable function">formatter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token operator">=></span> value <span class="token operator">===</span> <span class="token number">40</span> <span class="token operator">?</span> <span class="token string">\'Narrow\'</span> <span class="token operator">:</span> <span class="token string">\'Wide\'</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                minor<span class="token operator">:</span> <span class="token punctuation">{</span>\n                    show<span class="token operator">:</span> <span class="token boolean">false</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    layouts <span class="token operator">=</span> <span class="token punctuation">{</span>\n        table<span class="token operator">:</span> <span class="token punctuation">{</span>\n            group<span class="token operator">:</span> <span class="token string">\'table\'</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        card<span class="token operator">:</span> <span class="token punctuation">{</span>\n            group<span class="token operator">:</span> <span class="token string">\'card\'</span><span class="token punctuation">,</span>\n            minWidth<span class="token operator">:</span> <span class="token number">620</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        cardstack<span class="token operator">:</span> <span class="token punctuation">{</span>\n            group<span class="token operator">:</span> <span class="token string">\'card\'</span><span class="token punctuation">,</span>\n            maxWidth<span class="token operator">:</span> <span class="token number">620</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// create some sample data</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> idx <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> idx <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> idx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>documents<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Document </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>idx<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n                author<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                date<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token punctuation">{</span> year<span class="token operator">:</span> <span class="token number">2017</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">as</span> Date\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">LayoutSwitchingData</span> <span class="token punctuation">{</span>\n    name<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    author<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    date<span class="token operator">:</span> Date<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:"import { Component } from '@angular/core';\nimport { SliderOptions, SliderType } from '@ux-aspects/ux-aspects';\nimport 'chance';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    width: number = 100;\n    group: string = 'table';\n    documents: LayoutSwitchingData[] = [];\n\n    options: SliderOptions = {\n        type: SliderType.Value,\n        track: {\n            min: 40,\n            max: 100,\n            ticks: {\n                major: {\n                    show: true,\n                    steps: 60,\n                    labels: true,\n                    formatter: (value: number) => value === 40 ? 'Narrow' : 'Wide'\n                },\n                minor: {\n                    show: false\n                }\n            }\n        }\n    };\n\n    layouts = {\n        table: {\n            group: 'table'\n        },\n        card: {\n            group: 'card',\n            minWidth: 620\n        },\n        cardstack: {\n            group: 'card',\n            maxWidth: 620\n        }\n    };\n\n    constructor() {\n        // create some sample data\n        for (let idx = 1; idx < 10; idx++) {\n            this.documents.push({\n                name: `Document ${idx}`,\n                author: chance.name(),\n                date: chance.date({ year: 2017 }) as Date\n            });\n        }\n    }\n}\n\ninterface LayoutSwitchingData {\n    name: string;\n    author: string;\n    date: Date;\n}"}},45816:c=>{c.exports={snippet:'<span class="token selector">.reorderable-row</span> <span class="token punctuation">{</span>\n    <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.table tr:hover .drag-handle-column</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #dcdedf<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.drag-handle-column</span> <span class="token punctuation">{</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 48px<span class="token punctuation">;</span>\n    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #dcdedf<span class="token punctuation">;</span>\n    <span class="token property">transition</span><span class="token punctuation">:</span> color 250ms ease-in-out<span class="token punctuation">;</span>\n    <span class="token property">cursor</span><span class="token punctuation">:</span> move<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.table tr:hover .drag-handle-column:hover</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #bdbec0<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:".reorderable-row {\n    background-color: #fff;\n}\n\n.table tr:hover .drag-handle-column {\n    color: #dcdedf;\n}\n\n.drag-handle-column {\n    width: 48px;\n    text-align: center;\n    color: #dcdedf;\n    transition: color 250ms ease-in-out;\n    cursor: move;\n}\n\n.table tr:hover .drag-handle-column:hover {\n    color: #bdbec0;\n}"}},28491:c=>{c.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table table-hover<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>drag-handle-column<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Author<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Date Modified<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Work Completed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Status<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span> <span class="token attr-name">uxReorderable</span> <span class="token attr-name">[(reorderableModel)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>data<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reorderable-row<span class="token punctuation">"</span></span>\n            <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let item of data; let idx = index<span class="token punctuation">"</span></span>\n            <span class="token attr-name">#row</span>\n            <span class="token attr-name">uxFocusIndicator</span>\n            <span class="token attr-name">[uxReorderableModel]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span>\n            <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>\n            <span class="token attr-name">attr.aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{{ item.document }} by {{ item.author }}. Use arrow keys to reorder items.<span class="token punctuation">"</span></span>\n            <span class="token attr-name">(keydown.arrowdown)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>movedown(item, idx, $event)<span class="token punctuation">"</span></span>\n            <span class="token attr-name">(keydown.arrowup)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>moveup(item, idx, $event)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>drag-handle-column<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">uxReorderableHandle</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>more<span class="token punctuation">"</span></span> <span class="token attr-name">rotate</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>90<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{ item.document }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{ item.author }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{ item.date | date }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-spark</span> <span class="token attr-name">theme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chart2<span class="token punctuation">"</span></span> <span class="token attr-name">[value]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.completed<span class="token punctuation">"</span></span> <span class="token attr-name">barHeight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[inlineLabel]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.completed + <span class="token punctuation">\'</span>%<span class="token punctuation">\'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-spark</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">[name]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.active ? <span class="token punctuation">\'</span>checkmark<span class="token punctuation">\'</span> : null<span class="token punctuation">"</span></span>\n                         <span class="token attr-name">[attr.aria-label]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.active ? <span class="token punctuation">\'</span>Approved<span class="token punctuation">\'</span> : <span class="token punctuation">\'</span>Not approved<span class="token punctuation">\'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>',example:'<table class="table table-hover">\n    <thead>\n        <tr>\n            <th class="drag-handle-column"></th>\n            <th>Name</th>\n            <th>Author</th>\n            <th>Date Modified</th>\n            <th>Work Completed</th>\n            <th class="text-center">Status</th>\n        </tr>\n    </thead>\n    <tbody uxReorderable [(reorderableModel)]="data">\n        <tr class="reorderable-row"\n            *ngFor="let item of data; let idx = index"\n            #row\n            uxFocusIndicator\n            [uxReorderableModel]="item"\n            tabindex="0"\n            attr.aria-label="{{ item.document }} by {{ item.author }}. Use arrow keys to reorder items."\n            (keydown.arrowdown)="movedown(item, idx, $event)"\n            (keydown.arrowup)="moveup(item, idx, $event)">\n\n            <td class="drag-handle-column">\n                <ux-icon uxReorderableHandle name="more" rotate="90"></ux-icon>\n            </td>\n            <td>{{ item.document }}</td>\n            <td>{{ item.author }}</td>\n            <td>{{ item.date | date }}</td>\n            <td>\n                <ux-spark theme="chart2" [value]="item.completed" barHeight="3"\n                    [inlineLabel]="item.completed + \'%\'"></ux-spark>\n            </td>\n            <td class="text-center">\n                <ux-icon [name]="item.active ? \'checkmark\' : null"\n                         [attr.aria-label]="item.active ? \'Approved\' : \'Not approved\'">\n                </ux-icon>\n            </td>\n        </tr>\n    </tbody>\n</table>'}},11235:c=>{c.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> ElementRef<span class="token punctuation">,</span> QueryList<span class="token punctuation">,</span> ViewChildren <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'chance\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    data<span class="token operator">:</span> ReorderableTableData<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    @<span class="token function">ViewChildren</span><span class="token punctuation">(</span><span class="token string">\'row\'</span><span class="token punctuation">)</span> rows<span class="token operator">:</span> QueryList<span class="token operator">&lt;</span>ElementRef<span class="token operator">></span><span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> idx <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> idx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                document<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Document </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>idx<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n                author<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                date<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token punctuation">{</span> year<span class="token operator">:</span> <span class="token number">2018</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">as</span> Date<span class="token punctuation">,</span>\n                completed<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">integer</span><span class="token punctuation">(</span><span class="token punctuation">{</span> min<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> max<span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                active<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">bool</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">movedown</span><span class="token punctuation">(</span>data<span class="token operator">:</span> ReorderableTableData<span class="token punctuation">,</span> index<span class="token operator">:</span> number<span class="token punctuation">,</span> event<span class="token operator">:</span> KeyboardEvent<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> target <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span>target<span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span>target<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>data <span class="token punctuation">}</span><span class="token punctuation">;</span>\n        event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// ngFor blurs the element when shifting - we want to retain focus</span>\n        <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token comment">// get the row we want to focus</span>\n            <span class="token keyword">const</span> targetElement <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rows<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>target<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n            <span class="token comment">// if there is a target element then focus it</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>targetElement<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                targetElement<span class="token punctuation">.</span>nativeElement<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">moveup</span><span class="token punctuation">(</span>data<span class="token operator">:</span> ReorderableTableData<span class="token punctuation">,</span> index<span class="token operator">:</span> number<span class="token punctuation">,</span> event<span class="token operator">:</span> KeyboardEvent<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> target <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>index <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span>target<span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span>target<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>data <span class="token punctuation">}</span><span class="token punctuation">;</span>\n        event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// ngFor blurs the element when shifting - we want to retain focus</span>\n        <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token comment">// get the row we want to focus</span>\n            <span class="token keyword">const</span> targetElement <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rows<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>target<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n            <span class="token comment">// if there is a target element then focus it</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>targetElement<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                targetElement<span class="token punctuation">.</span>nativeElement<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">ReorderableTableData</span> <span class="token punctuation">{</span>\n    document<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    author<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    date<span class="token operator">:</span> Date<span class="token punctuation">;</span>\n    completed<span class="token operator">:</span> number<span class="token punctuation">;</span>\n    active<span class="token operator">:</span> boolean<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',example:"import { Component, ElementRef, QueryList, ViewChildren } from '@angular/core';\nimport 'chance';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    data: ReorderableTableData[] = [];\n\n    @ViewChildren('row') rows: QueryList<ElementRef>;\n\n    constructor() {\n\n        for (let idx = 0; idx < 10; idx++) {\n            this.data.push({\n                document: `Document ${idx}`,\n                author: chance.name(),\n                date: chance.date({ year: 2018 }) as Date,\n                completed: chance.integer({ min: 10, max: 100 }),\n                active: chance.bool()\n            });\n        }\n    }\n\n    movedown(data: ReorderableTableData, index: number, event: KeyboardEvent): void {\n        const target = Math.min(index + 1, this.data.length - 1);\n        this.data[index] = { ...this.data[target] };\n        this.data[target] = { ...data };\n        event.preventDefault();\n\n        // ngFor blurs the element when shifting - we want to retain focus\n        requestAnimationFrame(() => {\n            // get the row we want to focus\n            const targetElement = this.rows.toArray()[target];\n\n            // if there is a target element then focus it\n            if (targetElement) {\n                targetElement.nativeElement.focus();\n            }\n        });\n    }\n\n    moveup(data: ReorderableTableData, index: number, event: KeyboardEvent): void {\n        const target = Math.max(index - 1, 0);\n        this.data[index] = { ...this.data[target] };\n        this.data[target] = { ...data };\n        event.preventDefault();\n\n        // ngFor blurs the element when shifting - we want to retain focus\n        requestAnimationFrame(() => {\n            // get the row we want to focus\n            const targetElement = this.rows.toArray()[target];\n\n            // if there is a target element then focus it\n            if (targetElement) {\n                targetElement.nativeElement.focus();\n            }\n        });\n    }\n}\n\nexport interface ReorderableTableData {\n    document: string;\n    author: string;\n    date: Date;\n    completed: number;\n    active: boolean;\n}\n"}},67547:c=>{c.exports={snippet:'<span class="token selector">.table tbody</span> <span class="token punctuation">{</span>\n    <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.clickable</span> <span class="token punctuation">{</span>\n    <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',example:".table tbody {\n    outline: none;\n}\n\n.clickable {\n    outline: none;\n}\n"}},42235:c=>{c.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table table-hover<span class="token punctuation">"</span></span> <span class="token attr-name">aria-multiselectable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Author<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Created Date<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span> <span class="token attr-name">#select</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ux-selection<span class="token punctuation">"</span></span> <span class="token attr-name">[(uxSelection)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selection<span class="token punctuation">"</span></span> <span class="token attr-name">[mode]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mode<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let item of data<span class="token punctuation">"</span></span>\n            <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clickable<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[uxSelectionItem]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[attr.aria-selected]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.selected<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[(selected)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.selected<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox-column<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-checkbox</span> <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>m-b-nil<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.selected<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-checkbox</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{ item.name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{ item.author }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{ item.date | date }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-primary m-r-sm<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>select.selectAll()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Select All<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-primary<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>select.deselectAll()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Deselect All<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row uxd-customize-example<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-accordion</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-accordion-panel</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>accordion-chevron<span class="token punctuation">"</span></span> <span class="token attr-name">heading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Customize Example...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row uxd-customize-row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>mode<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-radio-button</span> <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mode<span class="token punctuation">"</span></span> <span class="token attr-name">option</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>simple<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>simple<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-radio-button</span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-radio-button</span> <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mode<span class="token punctuation">"</span></span> <span class="token attr-name">option</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>row<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-radio-button</span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-radio-button</span> <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mode<span class="token punctuation">"</span></span> <span class="token attr-name">option</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row-alt<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>row-alt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-radio-button</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-accordion-panel</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-accordion</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<table class="table table-hover" aria-multiselectable="true">\n    <thead>\n        <tr>\n            <th></th>\n            <th>Document</th>\n            <th>Author</th>\n            <th>Created Date</th>\n        </tr>\n    </thead>\n    <tbody #select="ux-selection" [(uxSelection)]="selection" [mode]="mode">\n\n        <tr *ngFor="let item of data"\n            class="clickable"\n            [uxSelectionItem]="item"\n            [attr.aria-selected]="item.selected"\n            [(selected)]="item.selected">\n\n            <td class="checkbox-column">\n                <ux-checkbox tabindex="-1"\n                    aria-hidden="true"\n                    class="m-b-nil"\n                    [(value)]="item.selected">\n                </ux-checkbox>\n            </td>\n            <td>{{ item.name }}</td>\n            <td>{{ item.author }}</td>\n            <td>{{ item.date | date }}</td>\n        </tr>\n    </tbody>\n</table>\n\n<button class="btn btn-primary m-r-sm" (click)="select.selectAll()">Select All</button>\n<button class="btn btn-primary" (click)="select.deselectAll()">Deselect All</button>\n\n<hr>\n\n<div class="row uxd-customize-example">\n    <div class="col-md-12">\n        <ux-accordion>\n            <ux-accordion-panel class="accordion-chevron" heading="Customize Example...">\n                <div class="row uxd-customize-row">\n                    <div class="col-md-12">\n                        <label>mode</label>\n                        <ux-radio-button [(ngModel)]="mode" option="simple">simple</ux-radio-button>\n                        <ux-radio-button [(ngModel)]="mode" option="row">row</ux-radio-button>\n                        <ux-radio-button [(ngModel)]="mode" option="row-alt">row-alt</ux-radio-button>\n                    </div>\n                </div>\n            </ux-accordion-panel>\n        </ux-accordion>\n    </div>\n</div>'}},49532:c=>{c.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'chance\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    data<span class="token operator">:</span> TableData<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    selection<span class="token operator">:</span> TableData<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    mode<span class="token operator">:</span> string <span class="token operator">=</span> <span class="token string">\'simple\'</span><span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> idx <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> idx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Document </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>idx <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n                author<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                date<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                selected<span class="token operator">:</span> <span class="token boolean">false</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">TableData</span> <span class="token punctuation">{</span>\n    name<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    author<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    date<span class="token operator">:</span> Date<span class="token punctuation">;</span>\n    selected<span class="token operator">:</span> boolean<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',example:"import { Component } from '@angular/core';\nimport 'chance';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    data: TableData[] = [];\n    selection: TableData[] = [];\n    mode: string = 'simple';\n\n    constructor() {\n        for (let idx = 0; idx < 8; idx++) {\n            this.data.push({\n                name: `Document ${idx + 1}`,\n                author: chance.name(),\n                date: chance.date(),\n                selected: false\n            });\n        }\n    }\n}\n\nexport interface TableData {\n    name: string;\n    author: string;\n    date: Date;\n    selected: boolean;\n}\n"}},99430:c=>{c.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sorter-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sorter-title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Sort by<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-group filter sort-direction-toggle<span class="token punctuation">"</span></span>\n        <span class="token attr-name">uxMenuNavigation</span>\n        <span class="token attr-name">(navigatedOut)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>toggle.focus()<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[toggleButton]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>toggle<span class="token punctuation">"</span></span>\n        <span class="token attr-name">dropdown</span>\n        <span class="token attr-name">#dropdown</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bs-dropdown<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n        <span class="token comment">&lt;!-- Dropdown Button --\x3e</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">#toggle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uxMenuNavigationToggle<span class="token punctuation">"</span></span>\n            <span class="token attr-name">uxMenuNavigationToggle</span>\n            <span class="token attr-name">[(menuOpen)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dropdown.isOpen<span class="token punctuation">"</span></span>\n            <span class="token attr-name">dropdownToggle</span>\n            <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn dropdown-toggle filter-dropdown<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            {{ selected }} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>down<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n\n        <span class="token comment">&lt;!-- Dropdown List --\x3e</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">*dropdownMenu</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dropdown-menu<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menu<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let option of options<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sort(option)<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menuitem<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">(keydown.enter)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sort(option); toggle.focus()<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">uxMenuNavigationItem</span><span class="token punctuation">></span></span>\n\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkmark<span class="token punctuation">"</span></span>\n                             <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sorter-icon<span class="token punctuation">"</span></span>\n                             <span class="token attr-name">[class.invisible]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>option !== selected<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sorter-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{ option }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n\n        <span class="token comment">&lt;!-- Sort Direction Toggle --\x3e</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sort-icon text-muted<span class="token punctuation">"</span></span>\n            <span class="token attr-name">uxFocusIndicator</span>\n            <span class="token attr-name">attr.aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{{ descending ? <span class="token punctuation">\'</span>Descending<span class="token punctuation">\'</span> : <span class="token punctuation">\'</span>Ascending<span class="token punctuation">\'</span> }} sort applied, activate\n            to apply a {{ !descending ? <span class="token punctuation">\'</span>descending<span class="token punctuation">\'</span> : <span class="token punctuation">\'</span>ascending<span class="token punctuation">\'</span> }} sort<span class="token punctuation">"</span></span>\n            <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>descending = !descending<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">[name]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>descending ? <span class="token punctuation">\'</span>descend<span class="token punctuation">\'</span> : <span class="token punctuation">\'</span>ascend<span class="token punctuation">\'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="sorter-container">\n    <span class="sorter-title">Sort by</span>\n\n    <div class="btn-group filter sort-direction-toggle"\n        uxMenuNavigation\n        (navigatedOut)="toggle.focus()"\n        [toggleButton]="toggle"\n        dropdown\n        #dropdown="bs-dropdown">\n\n        \x3c!-- Dropdown Button --\x3e\n        <button #toggle="uxMenuNavigationToggle"\n            uxMenuNavigationToggle\n            [(menuOpen)]="dropdown.isOpen"\n            dropdownToggle\n            class="btn dropdown-toggle filter-dropdown">\n            {{ selected }} <ux-icon name="down"></ux-icon>\n        </button>\n\n        \x3c!-- Dropdown List --\x3e\n        <ul *dropdownMenu class="dropdown-menu" role="menu">\n            <li *ngFor="let option of options">\n                <a (click)="sort(option)"\n                    role="menuitem"\n                    (keydown.enter)="sort(option); toggle.focus()"\n                    tabindex="-1"\n                    uxMenuNavigationItem>\n\n                    <ux-icon name="checkmark"\n                             class="sorter-icon"\n                             [class.invisible]="option !== selected">\n                    </ux-icon>\n\n                    <span class="sorter-text">{{ option }}</span>\n                </a>\n            </li>\n        </ul>\n\n        \x3c!-- Sort Direction Toggle --\x3e\n        <button class="sort-icon text-muted"\n            uxFocusIndicator\n            attr.aria-label="{{ descending ? \'Descending\' : \'Ascending\' }} sort applied, activate\n            to apply a {{ !descending ? \'descending\' : \'ascending\' }} sort"\n            (click)="descending = !descending">\n            <ux-icon [name]="descending ? \'descend\' : \'ascend\'"></ux-icon>\n        </button>\n    </div>\n</div>'}},45751:c=>{c.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n    \n    options<span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token string">\'Date Modified\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'Author\'</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    selected<span class="token operator">:</span> string <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    descending<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n\n    <span class="token comment">/**\n     * Perform any sorting here \n     */</span>\n    <span class="token function">sort</span><span class="token punctuation">(</span>option<span class="token operator">:</span> string<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token comment">// store the selected option to be displayed in the UI</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>selected <span class="token operator">=</span> option<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n',example:"import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html'\n})\nexport class AppComponent {\n    \n    options: string[] = [\n        'Date Modified',\n        'Name',\n        'Author'\n    ];\n\n    selected: string = this.options[0];\n    descending: boolean = true;\n\n    /**\n     * Perform any sorting here \n     */\n    sort(option: string): void {\n        // store the selected option to be displayed in the UI\n        this.selected = option;\n    }\n}\n"}},39705:(c,h,o)=>{var k={"./app.css":94662,"./app.html":58300,"./app.ts":13009,"./sort.ts":52845,"docs/app/pages/components/components-sections/tables/column-picker/snippets/app.css":94662,"docs/app/pages/components/components-sections/tables/column-picker/snippets/app.html":58300,"docs/app/pages/components/components-sections/tables/column-picker/snippets/app.ts":13009,"docs/app/pages/components/components-sections/tables/column-picker/snippets/sort.ts":52845};function r(i){var l=m(i);return o(l)}function m(i){if(!o.o(k,i)){var l=new Error("Cannot find module '"+i+"'");throw l.code="MODULE_NOT_FOUND",l}return k[i]}r.keys=function(){return Object.keys(k)},r.resolve=m,c.exports=r,r.id=39705},2967:(c,h,o)=>{var k={"./app.css":74601,"./app.html":51343,"./app.ts":27813,"docs/app/pages/components/components-sections/tables/column-resizing/snippets/app.css":74601,"docs/app/pages/components/components-sections/tables/column-resizing/snippets/app.html":51343,"docs/app/pages/components/components-sections/tables/column-resizing/snippets/app.ts":27813};function r(i){var l=m(i);return o(l)}function m(i){if(!o.o(k,i)){var l=new Error("Cannot find module '"+i+"'");throw l.code="MODULE_NOT_FOUND",l}return k[i]}r.keys=function(){return Object.keys(k)},r.resolve=m,c.exports=r,r.id=2967},76480:(c,h,o)=>{var k={"./app.html":29416,"./app.microfocusnext.html":680,"./app.ts":39974,"docs/app/pages/components/components-sections/tables/column-sorting/snippets/app.html":29416,"docs/app/pages/components/components-sections/tables/column-sorting/snippets/app.microfocusnext.html":680,"docs/app/pages/components/components-sections/tables/column-sorting/snippets/app.ts":39974};function r(i){var l=m(i);return o(l)}function m(i){if(!o.o(k,i)){var l=new Error("Cannot find module '"+i+"'");throw l.code="MODULE_NOT_FOUND",l}return k[i]}r.keys=function(){return Object.keys(k)},r.resolve=m,c.exports=r,r.id=76480},31335:(c,h,o)=>{var k={"./app.html":99646,"./app.ts":52013,"./sample.css":79223,"./sample.html":8047,"./sample.ts":4051,"docs/app/pages/components/components-sections/tables/custom-filters-component/snippets/app.html":99646,"docs/app/pages/components/components-sections/tables/custom-filters-component/snippets/app.ts":52013,"docs/app/pages/components/components-sections/tables/custom-filters-component/snippets/sample.css":79223,"docs/app/pages/components/components-sections/tables/custom-filters-component/snippets/sample.html":8047,"docs/app/pages/components/components-sections/tables/custom-filters-component/snippets/sample.ts":4051};function r(i){var l=m(i);return o(l)}function m(i){if(!o.o(k,i)){var l=new Error("Cannot find module '"+i+"'");throw l.code="MODULE_NOT_FOUND",l}return k[i]}r.keys=function(){return Object.keys(k)},r.resolve=m,c.exports=r,r.id=31335},3659:(c,h,o)=>{var k={"./app.html":78848,"./app.ts":47759,"docs/app/pages/components/components-sections/tables/filters/snippets/app.html":78848,"docs/app/pages/components/components-sections/tables/filters/snippets/app.ts":47759};function r(i){var l=m(i);return o(l)}function m(i){if(!o.o(k,i)){var l=new Error("Cannot find module '"+i+"'");throw l.code="MODULE_NOT_FOUND",l}return k[i]}r.keys=function(){return Object.keys(k)},r.resolve=m,c.exports=r,r.id=3659},66079:(c,h,o)=>{var k={"./app.css":9398,"./app.html":18677,"./app.ts":17094,"docs/app/pages/components/components-sections/tables/fixed-header-table/snippets/app.css":9398,"docs/app/pages/components/components-sections/tables/fixed-header-table/snippets/app.html":18677,"docs/app/pages/components/components-sections/tables/fixed-header-table/snippets/app.ts":17094};function r(i){var l=m(i);return o(l)}function m(i){if(!o.o(k,i)){var l=new Error("Cannot find module '"+i+"'");throw l.code="MODULE_NOT_FOUND",l}return k[i]}r.keys=function(){return Object.keys(k)},r.resolve=m,c.exports=r,r.id=66079},50946:(c,h,o)=>{var k={"./app.css":20375,"./app.html":86372,"./app.ts":77455,"docs/app/pages/components/components-sections/tables/hover-actions/snippets/app.css":20375,"docs/app/pages/components/components-sections/tables/hover-actions/snippets/app.html":86372,"docs/app/pages/components/components-sections/tables/hover-actions/snippets/app.ts":77455};function r(i){var l=m(i);return o(l)}function m(i){if(!o.o(k,i)){var l=new Error("Cannot find module '"+i+"'");throw l.code="MODULE_NOT_FOUND",l}return k[i]}r.keys=function(){return Object.keys(k)},r.resolve=m,c.exports=r,r.id=50946},94244:(c,h,o)=>{var k={"./app.css":97693,"./app.html":91944,"./app.ts":80297,"docs/app/pages/components/components-sections/tables/layout-switching/snippets/app.css":97693,"docs/app/pages/components/components-sections/tables/layout-switching/snippets/app.html":91944,"docs/app/pages/components/components-sections/tables/layout-switching/snippets/app.ts":80297};function r(i){var l=m(i);return o(l)}function m(i){if(!o.o(k,i)){var l=new Error("Cannot find module '"+i+"'");throw l.code="MODULE_NOT_FOUND",l}return k[i]}r.keys=function(){return Object.keys(k)},r.resolve=m,c.exports=r,r.id=94244},88309:(c,h,o)=>{var k={"./app.css":45816,"./app.html":28491,"./app.ts":11235,"docs/app/pages/components/components-sections/tables/reorderable-table/snippets/app.css":45816,"docs/app/pages/components/components-sections/tables/reorderable-table/snippets/app.html":28491,"docs/app/pages/components/components-sections/tables/reorderable-table/snippets/app.ts":11235};function r(i){var l=m(i);return o(l)}function m(i){if(!o.o(k,i)){var l=new Error("Cannot find module '"+i+"'");throw l.code="MODULE_NOT_FOUND",l}return k[i]}r.keys=function(){return Object.keys(k)},r.resolve=m,c.exports=r,r.id=88309},36563:(c,h,o)=>{var k={"./app.css":67547,"./app.html":42235,"./app.ts":49532,"docs/app/pages/components/components-sections/tables/selection/snippets/app.css":67547,"docs/app/pages/components/components-sections/tables/selection/snippets/app.html":42235,"docs/app/pages/components/components-sections/tables/selection/snippets/app.ts":49532};function r(i){var l=m(i);return o(l)}function m(i){if(!o.o(k,i)){var l=new Error("Cannot find module '"+i+"'");throw l.code="MODULE_NOT_FOUND",l}return k[i]}r.keys=function(){return Object.keys(k)},r.resolve=m,c.exports=r,r.id=36563},42618:(c,h,o)=>{var k={"./app.html":99430,"./app.ts":45751,"docs/app/pages/components/components-sections/tables/sorting/snippets/app.html":99430,"docs/app/pages/components/components-sections/tables/sorting/snippets/app.ts":45751};function r(i){var l=m(i);return o(l)}function m(i){if(!o.o(k,i)){var l=new Error("Cannot find module '"+i+"'");throw l.code="MODULE_NOT_FOUND",l}return k[i]}r.keys=function(){return Object.keys(k)},r.resolve=m,c.exports=r,r.id=42618},38308:(c,h,o)=>{"use strict";o.r(h),o.d(h,{ComponentsTablesModule:()=>oa});var k=o(47497),r=o(86019),m=o(39010),i=o(36593),l=o(86132),B=o(23908),C=o(86185),pn=o(4757),en=o(1610),L=o(56618),b=o(27920),x=o(63756),v=o(58785),n=o(9619),on=o(10073),_=o(27757),T=o(90745),f=o(37772),y=o(50302),Z=o(66091);let w=class extends x.u{constructor(){super(o(39705)),this.selected=["Type","Date","Requested by","Status","Completion"],this.locked=["ID"],this.deselected=[{group:"Metadata",name:"Author"},{group:"Metadata",name:"Category"},{group:"Metadata",name:"Date Created"},{group:"Metadata",name:"Date Modified"},{group:"Metadata",name:"Department"},"Document ID","Flag","From","Icon","Importance","Location","Location ID","Message",{group:"Metadata",name:"Organization"},"Time","Time Created","Time Modified","Work Completed"],this.groups=[{name:"Metadata",expanded:!0}],this.playground={files:{"app.component.html":this.snippets.raw.appHtml,"app.component.ts":this.snippets.raw.appTs,"app.component.css":this.snippets.raw.appCss},modules:[{imports:["TableModule"],library:"@ux-aspects/ux-aspects"}]}}};w.\u0275fac=function(s){return new(s||w)},w.\u0275cmp=n.Xpm({type:w,selectors:[["uxd-components-column-picker"]],features:[n.qOj],decls:76,vars:9,consts:[[3,"selected","deselected","locked","groups","selectedChange","deselectedChange"],["tableTitle","Inputs"],["uxd-api-property","","name","selected","type","ReadonlyArray<string | ColumnPickerGroupItem>"],["uxd-api-property","","name","locked","type","ReadonlyArray<string>"],["uxd-api-property","","name","deselected","type","ReadonlyArray<string | ColumnPickerGroupItem>"],["uxd-api-property","","name","selectedTitleTemplate","type","TemplateRef<void>"],["uxd-api-property","","name","deselectedTitleTemplate","type","TemplateRef<void>"],["uxd-api-property","","name","deselectedTemplate","type","TemplateRef<string>"],["uxd-api-property","","name","selectedTemplate","type","TemplateRef<string>"],["uxd-api-property","","name","lockedTemplate","type","TemplateRef<string>"],["uxd-api-property","","name","actionsTemplate","type","TemplateRef<ColumnPickerActionsContext>"],["uxd-api-property","","name","selectedAriaLabel","type","(column: string, index: number) => string"],["uxd-api-property","","name","deselectedGroupAriaLabel","type","(column: string, isExpanded: boolean) => string"],["uxd-api-property","","name","columnMovedAnnouncement","type","(column: string, delta: number) => string"],["uxd-api-property","","name","groups","type","ReadonlyArray<ColumnPickerGroup>"],["uxd-api-property","","name","sort","type","(a: ColumnPickerGroupItem, b: ColumnPickerGroupItem) => number"],[3,"content"],["tableTitle","Outputs"],["uxd-api-property","","name","selectedChange","type","ReadonlyArray<string | ColumnPickerGroupItem>"],["uxd-api-property","","name","deselectedChange","type","ReadonlyArray<string | ColumnPickerGroupItem>"],["tableTitle","ColumnPickerActionsContext Interface"],["uxd-api-property","","name","addSelection","type","ReadonlyArray<string>"],["uxd-api-property","","name","removeSelection","type","ReadonlyArray<string>"],["uxd-api-property","","name","addColumns","type","(columns?: ReadonlyArray<string | ColumnPickerGroupItem>) => void"],["uxd-api-property","","name","removeColumns","type","(columns?: ReadonlyArray<string | ColumnPickerGroupItem>) => void"],["uxd-api-property","","name","addAllColumns","type","() => void"],["uxd-api-property","","name","removeAllColumns","type","() => void"],["tableTitle","ColumnPickerGroupItem Interface"],["uxd-api-property","","name","group","type","string"],["uxd-api-property","","name","name","type","string"],["tableTitle","ColumnPickerGroup Interface"],["uxd-api-property","","name","expanded","type","boolean"],[3,"minimal"],["heading","HTML"],["heading","TypeScript"],["heading","CSS"]],template:function(s,a){1&s&&(n.TgZ(0,"ux-column-picker",0),n.NdJ("selectedChange",function(t){return a.selected=t})("deselectedChange",function(t){return a.deselected=t}),n.qZA(),n._UZ(1,"hr"),n.TgZ(2,"p"),n._uU(3," A "),n.TgZ(4,"code"),n._uU(5,"ux-column-picker"),n.qZA(),n._uU(6," can be used to allow a user to select, deselect and reorder the columns in a table.\n"),n.qZA(),n.TgZ(7,"p"),n._uU(8," The following properties can be used to configure the component:\n"),n.qZA(),n.TgZ(9,"uxd-api-properties",1),n.TgZ(10,"tr",2),n._uU(11," Define a list of all selected columns. "),n.qZA(),n.TgZ(12,"tr",3),n._uU(13," Define a list of columns that are always selected. The columns cannot be moved or reordered. "),n.qZA(),n.TgZ(14,"tr",4),n._uU(15," Define a list of columns that are not selected or locked. All columns must have unique names, including columns in different groups. "),n.qZA(),n.TgZ(16,"tr",5),n._uU(17," Define a custom selected title template. "),n.qZA(),n.TgZ(18,"tr",6),n._uU(19," Define a custom deselected title template. "),n.qZA(),n.TgZ(20,"tr",7),n._uU(21," Define a custom template for deselected items. "),n.qZA(),n.TgZ(22,"tr",8),n._uU(23," Define a custom template for selected items. "),n.qZA(),n.TgZ(24,"tr",9),n._uU(25," Define a custom template for locked items. "),n.qZA(),n.TgZ(26,"tr",10),n._uU(27," Define a custom template for the action buttons columns. "),n.qZA(),n.TgZ(28,"tr",11),n._uU(29," Define a function to get the aria label of reorderable items in the selected column. "),n.qZA(),n.TgZ(30,"tr",12),n._uU(31," Define a function to get the aria label of a group in the deselected list. "),n.qZA(),n.TgZ(32,"tr",13),n._uU(33," Define a function that returns a column move announcement. "),n.qZA(),n.TgZ(34,"tr",14),n._uU(35," An optional array of objects to configure column groups. See below for a listing of the available settings for groups. "),n.qZA(),n.TgZ(36,"tr",15),n._uU(37," Define a comparator function used for sorting the deselected columns. For example, to sort the columns alphabetically, the function below could be used: "),n._UZ(38,"uxd-snippet",16),n.qZA(),n.qZA(),n.TgZ(39,"uxd-api-properties",17),n.TgZ(40,"tr",18),n._uU(41," Emits when the selected items change or the order of the selected items change. "),n.qZA(),n.TgZ(42,"tr",19),n._uU(43," Emits when the deselected items change. "),n.qZA(),n.qZA(),n.TgZ(44,"uxd-api-properties",20),n.TgZ(45,"tr",21),n._uU(46," An array of items that are currently selected in the left column. "),n.qZA(),n.TgZ(47,"tr",22),n._uU(48," An array of items that are currently selected in the right column. "),n.qZA(),n.TgZ(49,"tr",23),n._uU(50," A function that can be called to add columns. If no columns are passed to the function, the items that are selected in the left column will be added. "),n.qZA(),n.TgZ(51,"tr",24),n._uU(52," A function that can be called to remove columns. If no columns are passed to the function, the items that are selected in the right column will be removed. "),n.qZA(),n.TgZ(53,"tr",25),n._uU(54," A function that can be called to add all columns. "),n.qZA(),n.TgZ(55,"tr",26),n._uU(56," A function that can be called to remove all columns. "),n.qZA(),n.qZA(),n.TgZ(57,"uxd-api-properties",27),n.TgZ(58,"tr",28),n._uU(59," The name of the group that this column belongs to. "),n.qZA(),n.TgZ(60,"tr",29),n._uU(61," The name of the column. "),n.qZA(),n.qZA(),n.TgZ(62,"uxd-api-properties",30),n.TgZ(63,"tr",29),n._uU(64," The name of the group this setting object is related to. "),n.qZA(),n.TgZ(65,"tr",31),n._uU(66," Defines if this group will be expanded on load. This is an optional property. "),n.qZA(),n.qZA(),n.TgZ(67,"p"),n._uU(68," The example above can be created using the following code:\n"),n.qZA(),n.TgZ(69,"ux-tabset",32),n.TgZ(70,"ux-tab",33),n._UZ(71,"uxd-snippet",16),n.qZA(),n.TgZ(72,"ux-tab",34),n._UZ(73,"uxd-snippet",16),n.qZA(),n.TgZ(74,"ux-tab",35),n._UZ(75,"uxd-snippet",16),n.qZA(),n.qZA()),2&s&&(n.Q6J("selected",a.selected)("deselected",a.deselected)("locked",a.locked)("groups",a.groups),n.xp6(38),n.Q6J("content",a.snippets.compiled.sortTs),n.xp6(31),n.Q6J("minimal",!1),n.xp6(2),n.Q6J("content",a.snippets.compiled.appHtml),n.xp6(2),n.Q6J("content",a.snippets.compiled.appTs),n.xp6(2),n.Q6J("content",a.snippets.compiled.appCss))},directives:[on.l,_.$,T.S,f.j,y.A,Z.i],styles:["ux-column-picker[_ngcontent-%COMP%]{height:500px}"]}),w=(0,b.gn)([(0,v.cG)("ComponentsColumnPickerComponent")],w);var E=o(1738),H=o(5682),Q=o(19381),cn=o(76489),G=o(50440),P=o(48574),ln=o(28671),un=o(98919),W=o(490),V=o(39877),$=o(20103),rn=o(1586),Y=o(24565),kn=o(27664);function dn(p,s){if(1&p){const a=n.EpF();n.TgZ(0,"tr",31),n.NdJ("selectedChange",function(t){return n.CHM(a).$implicit.selected=t}),n.TgZ(1,"td",32),n.TgZ(2,"ux-checkbox",33),n.NdJ("ngModelChange",function(t){return n.CHM(a).$implicit.selected=t}),n.qZA(),n.qZA(),n.TgZ(3,"td",34),n._uU(4),n.qZA(),n.TgZ(5,"td",34),n._uU(6),n.qZA(),n.TgZ(7,"td",34),n._uU(8),n.ALo(9,"date"),n.qZA(),n.qZA()}if(2&p){const a=s.$implicit;n.Q6J("uxSelectionItem",a)("selected",a.selected),n.uIk("aria-selected",a.selected),n.xp6(2),n.Q6J("ngModel",a.selected),n.xp6(2),n.Oqu(a.title),n.xp6(2),n.Oqu(a.author),n.xp6(2),n.Oqu(n.lcZ(9,7,a.date))}}function mn(p,s){if(1&p){const a=n.EpF();n.TgZ(0,"table",30),n.TgZ(1,"thead"),n.TgZ(2,"tr"),n._UZ(3,"th",10),n.TgZ(4,"th",11),n.NdJ("widthChange",function(t){return n.CHM(a),n.oxw().titleWidth=t}),n._uU(5,"Title"),n.qZA(),n.TgZ(6,"th",11),n.NdJ("widthChange",function(t){return n.CHM(a),n.oxw().authorWidth=t}),n._uU(7,"Author"),n.qZA(),n.TgZ(8,"th",12),n.NdJ("widthChange",function(t){return n.CHM(a),n.oxw().dateWidth=t}),n._uU(9,"Date"),n.qZA(),n.qZA(),n.qZA(),n.TgZ(10,"tbody",13),n.NdJ("uxSelectionChange",function(t){return n.CHM(a),n.oxw().selection=t}),n.YNc(11,dn,10,9,"tr",14),n.qZA(),n.qZA()}if(2&p){const a=n.oxw();n.Q6J("tableHeight",230),n.xp6(3),n.Q6J("width",50)("disabled",!0),n.xp6(1),n.Q6J("width",a.titleWidth),n.xp6(2),n.Q6J("width",a.authorWidth),n.xp6(4),n.Q6J("uxSelection",a.selection),n.xp6(1),n.Q6J("ngForOf",a.documents)}}function gn(p,s){if(1&p){const a=n.EpF();n.TgZ(0,"tr",31),n.NdJ("selectedChange",function(t){return n.CHM(a).$implicit.selected=t}),n.TgZ(1,"td",32),n.TgZ(2,"ux-checkbox",33),n.NdJ("ngModelChange",function(t){return n.CHM(a).$implicit.selected=t}),n.qZA(),n.qZA(),n.TgZ(3,"td",34),n._uU(4),n.qZA(),n.TgZ(5,"td",34),n._uU(6),n.qZA(),n.TgZ(7,"td",34),n._uU(8),n.ALo(9,"date"),n.qZA(),n.qZA()}if(2&p){const a=s.$implicit;n.Q6J("uxSelectionItem",a)("selected",a.selected),n.uIk("aria-selected",a.selected),n.xp6(2),n.Q6J("ngModel",a.selected),n.xp6(2),n.Oqu(a.title),n.xp6(2),n.Oqu(a.author),n.xp6(2),n.Oqu(n.lcZ(9,7,a.date))}}function hn(p,s){if(1&p){const a=n.EpF();n.TgZ(0,"table",35),n.TgZ(1,"thead"),n.TgZ(2,"tr"),n._UZ(3,"th",10),n.TgZ(4,"th",11),n.NdJ("widthChange",function(t){return n.CHM(a),n.oxw().titleWidth=t}),n._uU(5,"Title"),n.qZA(),n.TgZ(6,"th",11),n.NdJ("widthChange",function(t){return n.CHM(a),n.oxw().authorWidth=t}),n._uU(7,"Author"),n.qZA(),n.TgZ(8,"th",11),n.NdJ("widthChange",function(t){return n.CHM(a),n.oxw().dateWidthExpanding=t}),n._uU(9,"Date"),n.qZA(),n.qZA(),n.qZA(),n.TgZ(10,"tbody",13),n.NdJ("uxSelectionChange",function(t){return n.CHM(a),n.oxw().selection=t}),n.YNc(11,gn,10,9,"tr",14),n.qZA(),n.qZA()}if(2&p){const a=n.oxw();n.Q6J("tableHeight",230),n.xp6(3),n.Q6J("width",50)("disabled",!0),n.xp6(1),n.Q6J("width",a.titleWidth),n.xp6(2),n.Q6J("width",a.authorWidth),n.xp6(2),n.Q6J("width",a.dateWidthExpanding),n.xp6(2),n.Q6J("uxSelection",a.selection),n.xp6(1),n.Q6J("ngForOf",a.documents)}}function bn(p,s){if(1&p){const a=n.EpF();n.TgZ(0,"tr",31),n.NdJ("selectedChange",function(t){return n.CHM(a).$implicit.selected=t}),n.TgZ(1,"td",36),n.TgZ(2,"ux-checkbox",33),n.NdJ("ngModelChange",function(t){return n.CHM(a).$implicit.selected=t}),n.qZA(),n.qZA(),n.TgZ(3,"td"),n._uU(4),n.qZA(),n.TgZ(5,"td"),n._uU(6),n.qZA(),n.TgZ(7,"td"),n._uU(8),n.ALo(9,"date"),n.qZA(),n.qZA()}if(2&p){const a=s.$implicit;n.Q6J("uxSelectionItem",a)("selected",a.selected),n.uIk("aria-selected",a.selected),n.xp6(2),n.Q6J("ngModel",a.selected),n.xp6(2),n.Oqu(a.title),n.xp6(2),n.Oqu(a.author),n.xp6(2),n.Oqu(n.lcZ(9,7,a.date))}}const xn=function(p){return[p]};let A=class extends x.u{constructor(s){super(o(2967)),this._documentationType=s,this.type="uxResizableTable",this.documents=[],this.selection=[],this.titleWidth=260,this.authorWidth=300,this.dateWidthExpanding=150,this.uxFixedHeaderComponentRoute=this._documentationType===E.E.MicroFocus?"/ui-components/tables":"components/tables",this.playground={files:{"app.component.html":this.snippets.raw.appHtml,"app.component.ts":this.snippets.raw.appTs,"app.component.css":this.snippets.raw.appCss},modules:[{imports:["TableModule","CheckboxModule","FixedHeaderTableModule","SelectionModule","AccordionModule","RadioButtonModule"],library:"@ux-aspects/ux-aspects"},{imports:["ButtonsModule"],library:"ngx-bootstrap/buttons"}]};for(let a=0;a<15;a++)this.documents.push({selected:!1,title:`Document ${a+1}`,author:chance.name(),date:chance.date({year:(new Date).getFullYear()})})}setToUniform(s){"uxResizableTable"===s?this.resizableTable.setUniformWidths():this.resizableExpandingTable.setUniformWidths()}};A.\u0275fac=function(s){return new(s||A)(n.Y36(E.d))},A.\u0275cmp=n.Xpm({type:A,selectors:[["uxd-components-column-resizing"]],viewQuery:function(s,a){if(1&s&&(n.Gf(l.V_g,5),n.Gf(l.OCS,5)),2&s){let e;n.iGM(e=n.CRH())&&(a.resizableTable=e.first),n.iGM(e=n.CRH())&&(a.resizableExpandingTable=e.first)}},features:[n.qOj],decls:123,vars:22,consts:[[3,"collapseOthers"],["heading","Fixed Header Table",1,"accordion-chevron",3,"expanded"],["class","table","aria-multiselectable","true","uxResizableTable","","uxFixedHeaderTable","",3,"tableHeight",4,"ngIf"],["class","table","aria-multiselectable","true","uxResizableExpandingTable","","uxFixedHeaderTable","",3,"tableHeight",4,"ngIf"],["uxRadioButtonGroup","",1,"radio-button-container",3,"value","valueChange"],["option","uxResizableTable"],["option","uxResizableExpandingTable"],[1,"btn","button-secondary",3,"click"],["heading","Standard Table",1,"accordion-chevron"],["aria-multiselectable","true","uxResizableTable","",1,"table"],["uxResizableTableColumn","",3,"width","disabled"],["uxResizableTableColumn","",3,"width","widthChange"],["uxResizableTableColumn","",3,"widthChange"],[3,"uxSelection","uxSelectionChange"],[3,"uxSelectionItem","selected","selectedChange",4,"ngFor","ngForOf"],["fragment","fixed-header-table",3,"routerLink"],["tableTitle","Methods"],["uxd-api-property","","name","updateLayout","type","void"],["uxd-api-property","","name","setUniformWidths","type","void"],["tableTitle","Inputs"],["uxd-api-property","","name","width","type","number"],["uxd-api-property","","name","disabled","type","boolean"],["uxd-api-property","","name","handleVisible","type","boolean","defaultValue","true"],["tableTitle","Outputs"],["uxd-api-property","","name","widthChange","type","number"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"],["heading","CSS"],["aria-multiselectable","true","uxResizableTable","","uxFixedHeaderTable","",1,"table",3,"tableHeight"],[3,"uxSelectionItem","selected","selectedChange"],["uxResizableTableCell","",1,"checkbox-column"],["aria-hidden","true","tabindex","-1",3,"ngModel","ngModelChange"],["uxResizableTableCell",""],["aria-multiselectable","true","uxResizableExpandingTable","","uxFixedHeaderTable","",1,"table",3,"tableHeight"],[1,"checkbox-column"]],template:function(s,a){1&s&&(n.TgZ(0,"ux-accordion",0),n.TgZ(1,"ux-accordion-panel",1),n.YNc(2,mn,12,7,"table",2),n.YNc(3,hn,12,8,"table",3),n.TgZ(4,"div",4),n.NdJ("valueChange",function(t){return a.type=t}),n.TgZ(5,"ux-radio-button",5),n._uU(6,"uxResizableTable"),n.qZA(),n.TgZ(7,"ux-radio-button",6),n._uU(8,"uxResizableExpandingTable"),n.qZA(),n.qZA(),n.TgZ(9,"button",7),n.NdJ("click",function(){return a.setToUniform(a.type)}),n._uU(10,"Reset Columns"),n.qZA(),n.qZA(),n.TgZ(11,"ux-accordion-panel",8),n.TgZ(12,"table",9),n.TgZ(13,"thead"),n.TgZ(14,"tr"),n._UZ(15,"th",10),n.TgZ(16,"th",11),n.NdJ("widthChange",function(t){return a.titleWidth=t}),n._uU(17,"Title"),n.qZA(),n.TgZ(18,"th",11),n.NdJ("widthChange",function(t){return a.authorWidth=t}),n._uU(19,"Author"),n.qZA(),n.TgZ(20,"th",12),n.NdJ("widthChange",function(t){return a.dateWidth=t}),n._uU(21,"Date"),n.qZA(),n.qZA(),n.qZA(),n.TgZ(22,"tbody",13),n.NdJ("uxSelectionChange",function(t){return a.selection=t}),n.YNc(23,bn,10,9,"tr",14),n.ALo(24,"slice"),n.qZA(),n.qZA(),n.qZA(),n.qZA(),n._UZ(25,"hr"),n.TgZ(26,"p"),n._uU(27," UX Aspects supports resizable columns with two different modes of behaviour.\n"),n.qZA(),n.TgZ(28,"p"),n._uU(29," Use "),n.TgZ(30,"code"),n._uU(31,"uxResizableTable"),n.qZA(),n._uU(32," on the "),n.TgZ(33,"code"),n._uU(34,"table"),n.qZA(),n._uU(35," element to allow columns to be resized without affecting the overall width of the table. This works by shrinking or growing the next column to the right to accommodate the change in width.\n"),n.qZA(),n.TgZ(36,"p"),n._uU(37," Use "),n.TgZ(38,"code"),n._uU(39,"uxResizableExpandingTable"),n.qZA(),n._uU(40," on the "),n.TgZ(41,"code"),n._uU(42,"table"),n.qZA(),n._uU(43," element to allow columns to be resized without affecting the widths of other columns. The table body will adjust width to accommodate the columns, introducing a horizontal scrollbar if necessary. "),n.TgZ(44,"code"),n._uU(45,"uxResizableExpandingTable"),n.qZA(),n._uU(46," can only be used in a "),n.TgZ(47,"a",15),n._uU(48,"Fixed Header Table"),n.qZA(),n._uU(49,".\n"),n.qZA(),n.TgZ(50,"p"),n._uU(51," The "),n.TgZ(52,"code"),n._uU(53,"uxResizableTable"),n.qZA(),n._uU(54," or the "),n.TgZ(55,"code"),n._uU(56,"uxResizableExpandingTable"),n.qZA(),n._uU(57," directive should be applied to the "),n.TgZ(58,"code"),n._uU(59,"table"),n.qZA(),n._uU(60," element and the "),n.TgZ(61,"code"),n._uU(62,"uxResizableTableColumn"),n.qZA(),n._uU(63," directive should be added to every "),n.TgZ(64,"code"),n._uU(65,"th"),n.qZA(),n._uU(66," element.\n"),n.qZA(),n.TgZ(67,"p"),n._uU(68," If you are adding resizable columns to a "),n.TgZ(69,"code"),n._uU(70,"uxFixedHeaderTable"),n.qZA(),n._uU(71," you will also need to add the "),n.TgZ(72,"code"),n._uU(73,"uxResizableTableCell"),n.qZA(),n._uU(74," directive to every "),n.TgZ(75,"code"),n._uU(76,"td"),n.qZA(),n._uU(77," element in the table.\n"),n.qZA(),n.TgZ(78,"p"),n._uU(79," The width of each column can be specified by using the "),n.TgZ(80,"code"),n._uU(81,"width"),n.qZA(),n._uU(82," property. If all columns have a specified width and the column widths do not match the width of the table, columns will be scaled proportionally to fill the available space. If you wish to prevent this proportional scaling, omit the "),n.TgZ(83,"code"),n._uU(84,"width"),n.qZA(),n._uU(85," property from one column, giving it a variable width.\n"),n.qZA(),n.TgZ(86,"p"),n._uU(87,"The following methods are available in the"),n.TgZ(88,"code"),n._uU(89,"uxResizableTable"),n.qZA(),n._uU(90," and "),n.TgZ(91,"code"),n._uU(92,"uxResizableExpandingTable"),n.qZA(),n._uU(93," directives:"),n.qZA(),n.TgZ(94,"uxd-api-properties",16),n.TgZ(95,"tr",17),n._uU(96," This will recalculate the table layout. "),n.qZA(),n.TgZ(97,"tr",18),n._uU(98," This will set all non-disabled table columns to the same width. "),n.qZA(),n.qZA(),n.TgZ(99,"p"),n._uU(100,"The following properties can be used to configure the "),n.TgZ(101,"code"),n._uU(102,"uxResizableTableColumn"),n.qZA(),n._uU(103," directive:"),n.qZA(),n.TgZ(104,"uxd-api-properties",19),n.TgZ(105,"tr",20),n._uU(106," Defines the number of pixels wide the column should be. "),n.qZA(),n.TgZ(107,"tr",21),n._uU(108," Specifies if the column is resizable and if the drag handle should be shown. "),n.qZA(),n.TgZ(109,"tr",22),n._uU(110," Specifies if the column drag handle is shown "),n.qZA(),n.qZA(),n.TgZ(111,"uxd-api-properties",23),n.TgZ(112,"tr",24),n._uU(113," Emits with the width of the column when the column is resized. "),n.qZA(),n.qZA(),n.TgZ(114,"p"),n._uU(115," The code below can be used to create the example above:\n"),n.qZA(),n.TgZ(116,"ux-tabset",25),n.TgZ(117,"ux-tab",26),n._UZ(118,"uxd-snippet",27),n.qZA(),n.TgZ(119,"ux-tab",28),n._UZ(120,"uxd-snippet",27),n.qZA(),n.TgZ(121,"ux-tab",29),n._UZ(122,"uxd-snippet",27),n.qZA(),n.qZA()),2&s&&(n.Q6J("collapseOthers",!0),n.xp6(1),n.Q6J("expanded",!0),n.xp6(1),n.Q6J("ngIf","uxResizableTable"===a.type),n.xp6(1),n.Q6J("ngIf","uxResizableExpandingTable"===a.type),n.xp6(1),n.Q6J("value",a.type),n.xp6(11),n.Q6J("width",50)("disabled",!0),n.xp6(1),n.Q6J("width",a.titleWidth),n.xp6(2),n.Q6J("width",a.authorWidth),n.xp6(4),n.Q6J("uxSelection",a.selection),n.xp6(1),n.Q6J("ngForOf",n.Dn7(24,16,a.documents,0,5)),n.xp6(24),n.Q6J("routerLink",n.VKq(20,xn,a.uxFixedHeaderComponentRoute)),n.xp6(69),n.Q6J("minimal",!1),n.xp6(2),n.Q6J("content",a.snippets.compiled.appHtml),n.xp6(2),n.Q6J("content",a.snippets.compiled.appTs),n.xp6(2),n.Q6J("content",a.snippets.compiled.appCss))},directives:[H.Z,Q.U,r.O5,cn._,G._,P.G,ln.V,un.E,W.p,r.sg,i.yS,_.$,T.S,y.A,Z.i,f.j,V.n,$.Q,rn.W,Y.b,m.JJ,m.On,kn.O],pipes:[r.OU,r.uU],styles:[".table[_ngcontent-%COMP%]{overflow:hidden}.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%], .table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{min-width:50px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;word-break:break-all}"]}),A=(0,b.gn)([(0,v.cG)("ComponentsColumnResizingComponent")],A),o(94559);var vn=o(99988),N=o(31415),fn=o(32764),J=o(45205),q=o(72006);function yn(p,s){if(1&p&&(n.TgZ(0,"tr",39),n.TgZ(1,"td"),n._uU(2),n.qZA(),n.TgZ(3,"td"),n._uU(4),n.qZA(),n.TgZ(5,"td"),n._uU(6),n.qZA(),n.TgZ(7,"td"),n._UZ(8,"ux-spark",40),n.qZA(),n.TgZ(9,"td",41),n._UZ(10,"ux-icon",42),n.qZA(),n.qZA()),2&p){const a=s.$implicit,e=n.oxw(2);n.xp6(2),n.Oqu(a.name),n.xp6(2),n.Oqu(a.author),n.xp6(2),n.Oqu(a.date),n.xp6(2),n.Q6J("trackColor",e.sparkTrackColor)("barColor",e.sparkBarColor)("value",a.completed)("barHeight",3)("inlineLabel",a.completed),n.xp6(2),n.Q6J("name",a.active?"checkmark":null),n.uIk("aria-label",a.active?"Approved":"Not approved")}}function Zn(p,s){if(1&p){const a=n.EpF();n.ynx(0),n.TgZ(1,"table",25),n.TgZ(2,"thead"),n.TgZ(3,"tr",26),n.TgZ(4,"th",27),n.NdJ("click",function(){n.CHM(a);const t=n.MAs(9);return n.oxw().changeState("Name",t)})("keydown.enter",function(){n.CHM(a);const t=n.MAs(9);return n.oxw().changeState("Name",t)}),n.TgZ(5,"div",28),n.TgZ(6,"p",29),n._uU(7,"NAME"),n.qZA(),n._UZ(8,"ux-column-sorting",30,31),n.qZA(),n.qZA(),n.TgZ(10,"th",27),n.NdJ("click",function(){n.CHM(a);const t=n.MAs(15);return n.oxw().changeState("Author",t)})("keydown.enter",function(){n.CHM(a);const t=n.MAs(15);return n.oxw().changeState("Author",t)}),n.TgZ(11,"div",28),n.TgZ(12,"p",29),n._uU(13,"AUTHOR"),n.qZA(),n._UZ(14,"ux-column-sorting",32,33),n.qZA(),n.qZA(),n.TgZ(16,"th",27),n.NdJ("click",function(){n.CHM(a);const t=n.MAs(21);return n.oxw().changeState("Date Modified",t)})("keydown.enter",function(){n.CHM(a);const t=n.MAs(21);return n.oxw().changeState("Date Modified",t)}),n.TgZ(17,"div",28),n.TgZ(18,"p",29),n._uU(19,"DATE MODIFIED"),n.qZA(),n._UZ(20,"ux-column-sorting",34,35),n.qZA(),n.qZA(),n.TgZ(22,"th",27),n.NdJ("click",function(){n.CHM(a);const t=n.MAs(27);return n.oxw().changeState("Work Completed",t)})("keydown.enter",function(){n.CHM(a);const t=n.MAs(27);return n.oxw().changeState("Work Completed",t)}),n.TgZ(23,"div",28),n.TgZ(24,"p",29),n._uU(25,"WORK COMPLETED"),n.qZA(),n._UZ(26,"ux-column-sorting",36,37),n.qZA(),n.qZA(),n.TgZ(28,"th"),n._uU(29,"STATUS"),n.qZA(),n.qZA(),n.qZA(),n.TgZ(30,"tbody"),n.YNc(31,yn,11,10,"tr",38),n.qZA(),n.qZA(),n.BQk()}if(2&p){const a=n.MAs(9),e=n.MAs(15),t=n.MAs(21),u=n.MAs(27),d=n.oxw();n.xp6(4),n.uIk("aria-label",d.getColumnAriaLabel("Name",a))("aria-sort",a.state),n.xp6(6),n.uIk("aria-label",d.getColumnAriaLabel("Author",e))("aria-sort",e.state),n.xp6(6),n.uIk("aria-label",d.getColumnAriaLabel("Date Modified",t))("aria-sort",t.state),n.xp6(6),n.uIk("aria-label",d.getColumnAriaLabel("Work Completed",u))("aria-sort",u.state),n.xp6(9),n.Q6J("ngForOf",d.items)}}function _n(p,s){if(1&p&&(n.TgZ(0,"tr",39),n.TgZ(1,"td"),n._uU(2),n.qZA(),n.TgZ(3,"td"),n._uU(4),n.qZA(),n.TgZ(5,"td"),n._uU(6),n.qZA(),n.TgZ(7,"td"),n._UZ(8,"ux-spark",40),n.qZA(),n.TgZ(9,"td",41),n._UZ(10,"ux-icon",42),n.qZA(),n.qZA()),2&p){const a=s.$implicit,e=n.oxw(2);n.xp6(2),n.Oqu(a.name),n.xp6(2),n.Oqu(a.author),n.xp6(2),n.Oqu(a.date),n.xp6(2),n.Q6J("trackColor",e.sparkTrackColor)("barColor",e.sparkBarColor)("value",a.completed)("barHeight",3)("inlineLabel",a.completed),n.xp6(2),n.Q6J("name",a.active?"checkmark":null),n.uIk("aria-label",a.active?"Approved":"Not approved")}}function Tn(p,s){if(1&p){const a=n.EpF();n.ynx(0),n.TgZ(1,"table",25),n.TgZ(2,"thead"),n.TgZ(3,"tr",26),n.TgZ(4,"th",27),n.NdJ("click",function(){n.CHM(a);const t=n.MAs(8);return n.oxw().changeState("Name",t)})("keydown.enter",function(){n.CHM(a);const t=n.MAs(8);return n.oxw().changeState("Name",t)}),n.TgZ(5,"span"),n._uU(6,"Name"),n.qZA(),n._UZ(7,"ux-column-sorting",43,31),n.qZA(),n.TgZ(9,"th",27),n.NdJ("click",function(){n.CHM(a);const t=n.MAs(13);return n.oxw().changeState("Author",t)})("keydown.enter",function(){n.CHM(a);const t=n.MAs(13);return n.oxw().changeState("Author",t)}),n.TgZ(10,"span"),n._uU(11,"Author"),n.qZA(),n._UZ(12,"ux-column-sorting",44,33),n.qZA(),n.TgZ(14,"th",27),n.NdJ("click",function(){n.CHM(a);const t=n.MAs(18);return n.oxw().changeState("Date Modified",t)})("keydown.enter",function(){n.CHM(a);const t=n.MAs(18);return n.oxw().changeState("Date Modified",t)}),n.TgZ(15,"span"),n._uU(16,"Date Modified"),n.qZA(),n._UZ(17,"ux-column-sorting",45,35),n.qZA(),n.TgZ(19,"th",27),n.NdJ("click",function(){n.CHM(a);const t=n.MAs(23);return n.oxw().changeState("Work Completed",t)})("keydown.enter",function(){n.CHM(a);const t=n.MAs(23);return n.oxw().changeState("Work Completed",t)}),n.TgZ(20,"span"),n._uU(21,"Work Completed"),n.qZA(),n._UZ(22,"ux-column-sorting",46,37),n.qZA(),n.TgZ(24,"th"),n._uU(25,"Status"),n.qZA(),n.qZA(),n.qZA(),n.TgZ(26,"tbody"),n.YNc(27,_n,11,10,"tr",38),n.qZA(),n.qZA(),n.BQk()}if(2&p){const a=n.MAs(8),e=n.MAs(13),t=n.MAs(18),u=n.MAs(23),d=n.oxw();n.xp6(4),n.uIk("aria-label",d.getColumnAriaLabel("Name",a))("aria-sort",a.state),n.xp6(5),n.uIk("aria-label",d.getColumnAriaLabel("Author",e))("aria-sort",e.state),n.xp6(5),n.uIk("aria-label",d.getColumnAriaLabel("Date Modified",t))("aria-sort",t.state),n.xp6(5),n.uIk("aria-label",d.getColumnAriaLabel("Work Completed",u))("aria-sort",u.state),n.xp6(8),n.Q6J("ngForOf",d.items)}}const K=function(p){return[p]};let U=class extends x.u{constructor(s,a,e){super(o(76480)),this._colorService=s,this._announcer=a,this.order=[],this.items=[{id:1,name:"Document",author:chance.name(),date:"18 Dec 2016",completed:97,active:chance.bool()},{id:2,name:"Email",author:chance.name(),date:"22 Dec 2016",completed:15,active:chance.bool()},{id:3,name:"Email",author:chance.name(),date:"12 Dec 2016",completed:20,active:chance.bool()},{id:4,name:"Email",author:chance.name(),date:"16 Dec 2016",completed:74,active:chance.bool()},{id:5,name:"Email",author:chance.name(),date:"17 Dec 2016",completed:63,active:chance.bool()},{id:6,name:"Document",author:chance.name(),date:"21 Dec 2016",completed:21,active:chance.bool()},{id:7,name:"Document",author:chance.name(),date:"17 Dec 2016",completed:85,active:chance.bool()},{id:8,name:"Document",author:chance.name(),date:"17 Dec 2016",completed:11,active:chance.bool()}],this.playground=()=>({files:{"app.component.ts":this.snippets.raw.appTs,"app.component.html":this.snippets.raw.appHtml},modules:[{imports:["ColumnSortingModule","ColorServiceModule","SparkModule"],library:"@ux-aspects/ux-aspects"},{imports:["A11yModule"],library:"@angular/cdk/a11y"}]}),this.sparkTrackColor=this._colorService.getColor("chart2").setAlpha(.2).toRgba(),this.sparkBarColor=this._colorService.getColor("chart2").toHex(),this.iconSetDocumentationRoute=e===E.E.MicroFocus?"/ui-components/styling":"/css/icons"}changeState(s,a){this.order=a.changeState(),this.items=this.sort(this.items,this.order),this._announcer.announce(this.getColumnAriaLabel(s,a))}sort(s,a){return[...s].sort((e,t)=>{for(const u of a){const d=e[u.key],g=t[u.key];if(d!==g)return u.state===l.Tbm.Ascending?d<g?-1:1:d>g?-1:1}return e.id<t.id?-1:1})}getColumnAriaLabel(s,a){switch(a.state){case l.Tbm.Ascending:return a.order?`${s}: Ascending sort with priority ${a.order} applied, activate to apply a Descending sort`:`${s}: Ascending sort applied, activate to apply a Descending sort`;case l.Tbm.Descending:return a.order?`${s}: Descending sort with priority ${a.order} applied, activate to apply no sorting`:`${s}: Descending sort applied, activate to apply no sorting`;default:return`${s}: No sort applied, activate to apply an Ascending sort`}}};U.\u0275fac=function(s){return new(s||U)(n.Y36(l.x4Z),n.Y36(k.Kd),n.Y36(E.d))},U.\u0275cmp=n.Xpm({type:U,selectors:[["uxd-components-column-sorting"]],features:[n.qOj],decls:123,vars:11,consts:[[3,"ngSwitch"],[4,"ngSwitchDefault"],[4,"ngSwitchCase"],["tableTitle","Column Sorting Directive Inputs"],["uxd-api-property","","name","singleSort","type","boolean"],["uxd-api-property","","name","sortIndicator","type","TemplateRef<ColumnSortingIndicatorContext>"],["tableTitle","Column Sorting Component Inputs"],["uxd-api-property","","name","key","type","string"],["uxd-api-property","","name","state","type","ColumnSortingState"],["uxd-api-property","","name","order","type","number"],["uxd-api-property","","name","allowNoSort","type","boolean","defaultValue","true"],["uxd-api-property","","name","ascendingIcon","type","string","defaultValue","ascend"],["fragment","ux-icons",3,"routerLink"],["uxd-api-property","","name","descendingIcon","type","string","defaultValue","descend"],["tableTitle","Column Sorting Component Outputs"],["uxd-api-property","","name","stateChange","type","ColumnSortingState"],["uxd-api-property","","name","orderChange","type","number"],["tableTitle","Column Sorting Component Methods"],["uxd-api-property","","name","changeState","returns","ColumnSortingOrder[]"],["tableTitle","ColumnSortingIndicatorContext Interface"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"],["language","javascript",3,"content"],[1,"table","table-hover"],["uxColumnSorting",""],["uxFocusIndicator","","tabindex","0",1,"clickable","column-sorting",3,"click","keydown.enter"],[1,"column-sorting-header"],[1,"text-black"],["key","name"],["nameColumn","ux-column-sorting"],["key","author"],["authorColumn","ux-column-sorting"],["key","date"],["dateColumn","ux-column-sorting"],["key","completed"],["completedColumn","ux-column-sorting"],["class","clickable",4,"ngFor","ngForOf"],[1,"clickable"],[3,"trackColor","barColor","value","barHeight","inlineLabel"],[1,"text-center"],[3,"name"],["key","name","ascendingIcon","link-up","descendingIcon","link-down"],["key","author","ascendingIcon","link-up","descendingIcon","link-down"],["key","date","ascendingIcon","link-up","descendingIcon","link-down"],["key","completed","ascendingIcon","link-up","descendingIcon","link-down"]],template:function(s,a){1&s&&(n.ynx(0,0),n.YNc(1,Zn,32,9,"ng-container",1),n.YNc(2,Tn,28,9,"ng-container",2),n.BQk(),n._UZ(3,"hr"),n.TgZ(4,"p"),n._uU(5," Column sorting can be added to a table by applying the "),n.TgZ(6,"code"),n._uU(7,"uxColumnSorting"),n.qZA(),n._uU(8," directive to the "),n.TgZ(9,"code"),n._uU(10,"tr"),n.qZA(),n._uU(11," element and adding the "),n.TgZ(12,"code"),n._uU(13,"ux-column-sorting"),n.qZA(),n._uU(14," component in the "),n.TgZ(15,"code"),n._uU(16,"th"),n.qZA(),n._uU(17," of any columns that are sortable.\n"),n.qZA(),n.TgZ(18,"uxd-api-properties",3),n.TgZ(19,"tr",4),n._uU(20," If set to true the column will sort by only this column, removing sorting from all others. "),n.qZA(),n.TgZ(21,"tr",5),n._uU(22," A template can be provided to customize the appearance of the sort indicator. "),n.qZA(),n.qZA(),n.TgZ(23,"p"),n._uU(24,"The component will be exported as "),n.TgZ(25,"code"),n._uU(26,"ux-column-sorting"),n.qZA(),n._uU(27,"."),n.qZA(),n.TgZ(28,"uxd-api-properties",6),n.TgZ(29,"tr",7),n._uU(30," Defines a unique identifier for the column that can be used when sorting. "),n.qZA(),n.TgZ(31,"tr",8),n._uU(32," Defines the sorting direction of a column: "),n.TgZ(33,"code"),n._uU(34,"NoSort"),n.qZA(),n._uU(35,", "),n.TgZ(36,"code"),n._uU(37,"Ascending"),n.qZA(),n._uU(38," or "),n.TgZ(39,"code"),n._uU(40,"Descending"),n.qZA(),n._uU(41,". When manually setting this value it is the responsibility of the application to ensure that the table sort state matches the column sort state. "),n.qZA(),n.TgZ(42,"tr",9),n._uU(43," Defines the sorting order of a column. When manually setting this value it is the responsibility of the application to ensure that the table sort state matches the column sort order. "),n.qZA(),n.TgZ(44,"tr",10),n._uU(45," Defines if a column can be toggled to the "),n.TgZ(46,"code"),n._uU(47,"NoSort"),n.qZA(),n._uU(48," state. If set to "),n.TgZ(49,"code"),n._uU(50,"false"),n.qZA(),n._uU(51," this will toggle between the "),n.TgZ(52,"code"),n._uU(53,"Ascending"),n.qZA(),n._uU(54," and "),n.TgZ(55,"code"),n._uU(56,"Descending"),n.qZA(),n._uU(57," states when changing the sort direction. "),n.qZA(),n.TgZ(58,"tr",11),n._uU(59," Specify an icon name from the "),n.TgZ(60,"a",12),n._uU(61,"UX Aspects icon set"),n.qZA(),n._uU(62," for sorting in ascending order. "),n.qZA(),n.TgZ(63,"tr",13),n._uU(64," Specify an icon name from the "),n.TgZ(65,"a",12),n._uU(66,"UX Aspects icon set"),n.qZA(),n._uU(67," for sorting in descending order. "),n.qZA(),n.qZA(),n.TgZ(68,"uxd-api-properties",14),n.TgZ(69,"tr",15),n._uU(70," Emits when state changes. "),n.qZA(),n.TgZ(71,"tr",16),n._uU(72," Emits when the sort order changes. "),n.qZA(),n.qZA(),n.TgZ(73,"uxd-api-properties",17),n.TgZ(74,"tr",18),n._uU(75," Changes the state of the sorting on the column between "),n.TgZ(76,"code"),n._uU(77,"NoSort"),n.qZA(),n._uU(78,", "),n.TgZ(79,"code"),n._uU(80,"Ascending"),n.qZA(),n._uU(81," and "),n.TgZ(82,"code"),n._uU(83,"Descending"),n.qZA(),n._uU(84,". This returns an array of objects for each column being sorted containing "),n.TgZ(85,"code"),n._uU(86,"key: string"),n.qZA(),n._uU(87," and "),n.TgZ(88,"code"),n._uU(89,"state: ColumnSortingState"),n.qZA(),n._uU(90,". State can be used to find the current sorting state of the column eg. "),n.TgZ(91,"code"),n._uU(92,"(state === ColumnSortingState.Ascending)"),n.qZA(),n._uU(93,". The "),n.TgZ(94,"code"),n._uU(95,"ColumnSortingOrder"),n.qZA(),n._uU(96," interface has been provided for objects in the array. "),n.qZA(),n.qZA(),n.TgZ(97,"uxd-api-properties",19),n.TgZ(98,"tr",8),n._uU(99," Defines the sorting order of a column: "),n.TgZ(100,"code"),n._uU(101,"NoSort"),n.qZA(),n._uU(102,", "),n.TgZ(103,"code"),n._uU(104,"Ascending"),n.qZA(),n._uU(105," or "),n.TgZ(106,"code"),n._uU(107,"Descending"),n.qZA(),n._uU(108,". "),n.qZA(),n.TgZ(109,"tr",9),n._uU(110," If multiple columns are being sorted this will contain the sort order of the column. "),n.qZA(),n.qZA(),n.TgZ(111,"p"),n._uU(112,"The "),n.TgZ(113,"code"),n._uU(114,".column-sorting-header"),n.qZA(),n._uU(115," class can be used to align the sorting icon to the right of the table header as seen in the example above."),n.qZA(),n.TgZ(116,"p"),n._uU(117,"The code used for the above example is shown below:"),n.qZA(),n.TgZ(118,"ux-tabset",20),n.TgZ(119,"ux-tab",21),n._UZ(120,"uxd-snippet",22),n.qZA(),n.TgZ(121,"ux-tab",23),n._UZ(122,"uxd-snippet",24),n.qZA(),n.qZA()),2&s&&(n.Q6J("ngSwitch",a.theme),n.xp6(2),n.Q6J("ngSwitchCase",a.SiteThemeId.MicroFocusNext),n.xp6(58),n.Q6J("routerLink",n.VKq(7,K,a.iconSetDocumentationRoute)),n.xp6(5),n.Q6J("routerLink",n.VKq(9,K,a.iconSetDocumentationRoute)),n.xp6(53),n.Q6J("minimal",!1),n.xp6(2),n.Q6J("content",a.snippets.compiled.appHtml),n.xp6(2),n.Q6J("content",a.snippets.compiled.appTs))},directives:[r.RF,r.ED,r.n9,_.$,T.S,i.yS,y.A,Z.i,f.j,vn.Z,N.N,fn.f,r.sg,J.g,q.o],encapsulation:2}),U=(0,b.gn)([(0,v.cG)("ComponentsColumnSortingComponent")],U);var X=o(73393),j=o(28805),Cn=o(18735),wn=o(23405),nn=o(18119),an=o(26302),sn=o(25275);function An(p,s){if(1&p&&(n.TgZ(0,"span",7),n._uU(1),n.qZA()),2&p){const a=n.oxw();n.xp6(1),n.hij(" (",null==a.selected?null:a.selected.title,") ")}}function qn(p,s){if(1&p){const a=n.EpF();n.TgZ(0,"li",10),n.TgZ(1,"a",11),n.NdJ("click",function(){const u=n.CHM(a).$implicit,d=n.oxw(2),g=n.MAs(3);return d.selectFilter(u),g.focus()})("keydown.enter",function(){const u=n.CHM(a).$implicit,d=n.oxw(2),g=n.MAs(3);return d.selectFilter(u),g.focus()})("keydown.escape",function(){return n.CHM(a),n.oxw(2),n.MAs(3).focus()}),n._UZ(2,"ux-icon",12),n.TgZ(3,"span",13),n._uU(4),n.qZA(),n.qZA(),n.qZA()}if(2&p){const a=s.$implicit,e=n.oxw(2);n.xp6(1),n.uIk("aria-selected",a===e.selected),n.xp6(1),n.Q6J("name",a===e.selected?"checkmark":null),n.xp6(2),n.Oqu(a.name)}}function Un(p,s){if(1&p&&(n.TgZ(0,"ul",8),n.YNc(1,qn,5,3,"li",9),n.qZA()),2&p){const a=n.oxw(),e=n.MAs(3);n.Q6J("toggleButton",e),n.xp6(1),n.Q6J("ngForOf",a.filters)}}let tn=(()=>{class p{constructor(a){this._filterService=a,this.filters=[],this._onDestroy=new wn.xQ,a.events$.pipe((0,j.R)(this._onDestroy),(0,Cn.h)(e=>e instanceof l.wqt)).subscribe(()=>this.removeFilter()),a.filters$.pipe((0,j.R)(this._onDestroy)).subscribe(e=>{this.selected&&-1===e.indexOf(this.selected)&&this.removeFilter()})}ngOnInit(){this.selected=this.initial,this._filterService.filters$.pipe((0,j.R)(this._onDestroy)).subscribe(a=>{a.forEach(e=>{-1!==this.filters.indexOf(e)&&(this.selected=e)})})}ngOnDestroy(){this._onDestroy.next(),this._onDestroy.complete()}removeFilter(){this._filterService.remove(this.selected),this.selected=this.initial}selectFilter(a){this.removeFilter(),this.selected=a,this._filterService.add(this.selected)}}return p.\u0275fac=function(a){return new(a||p)(n.Y36(l.iZF))},p.\u0275cmp=n.Xpm({type:p,selectors:[["ux-filter-custom"]],inputs:{filters:"filters",initial:"initial"},decls:8,vars:7,consts:[["dropdown","",1,"btn-group","ux-custom-filter",3,"autoClose"],["dropdown","bs-dropdown"],["type","button","uxFocusIndicator","","tabindex","0","dropdownToggle","","uxMenuNavigationToggle","","aria-haspopup","true",1,"filter-dropdown","btn","dropdown-toggle",3,"menuOpen","menuOpenChange"],["toggle","uxMenuNavigationToggle"],["class","filter-title",4,"ngIf"],["name","down",1,"custom-filter-chevron"],["uxMenuNavigation","","class","dropdown-menu","role","menu",3,"toggleButton",4,"dropdownMenu"],[1,"filter-title"],["uxMenuNavigation","","role","menu",1,"dropdown-menu",3,"toggleButton"],["class","dropdown-list-item","role","none",4,"ngFor","ngForOf"],["role","none",1,"dropdown-list-item"],["role","menuitem","tabindex","-1","uxMenuNavigationItem","",1,"dropdown-item",3,"click","keydown.enter","keydown.escape"],[3,"name"],[1,"filter-dropdown-title"]],template:function(a,e){if(1&a){const t=n.EpF();n.TgZ(0,"div",0,1),n.TgZ(2,"button",2,3),n.NdJ("menuOpenChange",function(d){return n.CHM(t),n.MAs(1).isOpen=d}),n._uU(4),n.YNc(5,An,2,1,"span",4),n._UZ(6,"ux-icon",5),n.qZA(),n.YNc(7,Un,2,2,"ul",6),n.qZA()}if(2&a){const t=n.MAs(1);n.Q6J("autoClose",!0),n.xp6(2),n.ekj("active",e.selected!==e.initial),n.Q6J("menuOpen",t.isOpen),n.uIk("aria-expanded",t.isOpen),n.xp6(2),n.hij(" ",null==e.selected?null:e.selected.group," "),n.xp6(1),n.Q6J("ngIf",e.selected!==e.initial)}},directives:[C.TO,N.N,C.Mq,nn.k,r.O5,q.o,C.Hz,an.B,r.sg,sn.l],styles:[".ux-custom-filter.active[_ngcontent-%COMP%]{font-weight:600}.ux-custom-filter[_ngcontent-%COMP%]   .custom-filter-chevron[_ngcontent-%COMP%]{font-size:.625rem}.ux-custom-filter[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]   .dropdown-list-item[_ngcontent-%COMP%]   .dropdown-item[_ngcontent-%COMP%]{padding-left:10px}.ux-custom-filter[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]   .dropdown-list-item[_ngcontent-%COMP%]   .dropdown-item[_ngcontent-%COMP%]   ux-icon[_ngcontent-%COMP%]{display:inline-block;width:16px}.ux-custom-filter[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]   .dropdown-list-item[_ngcontent-%COMP%]   .dropdown-item[_ngcontent-%COMP%]   .filter-dropdown-title[_ngcontent-%COMP%]{padding-left:10px}"]}),p})(),S=class extends x.u{constructor(){super(o(31335)),this.statusFilters=[{group:"Custom",title:"Status",name:"Status (All)",initial:!0},{group:"Custom",title:"Active",name:"Active"},{group:"Custom",title:"Inactive",name:"Inactive"}],this.playground={files:{"app.component.ts":this.snippets.raw.appTs,"app.component.html":this.snippets.raw.appHtml,"sample-filter.component.html":this.snippets.raw.sampleHtml,"sample-filter.component.css":this.snippets.raw.sampleCss,"sample-filter.component.ts":this.snippets.raw.sampleTs},modules:[{imports:["FilterModule","RadioButtonModule","MenuNavigationModule"],library:"@ux-aspects/ux-aspects"},{imports:["SampleFilterCustomComponent"],library:"./sample-filter.component",declaration:!0},{imports:["BsDropdownModule"],library:"ngx-bootstrap/dropdown",forRoot:!0}]}}};S.\u0275fac=function(s){return new(s||S)},S.\u0275cmp=n.Xpm({type:S,selectors:[["uxd-components-custom-filters"]],features:[n.qOj],decls:31,vars:8,consts:[["uxd-api-property","","name","add","args","filter: Filter"],["uxd-api-property","","name","remove","args","filter: Filter"],["uxd-api-property","","name","removeAll"],[3,"filters","initial"],[3,"minimal"],["heading","HTML"],["language","html",3,"content"],["heading","TypeScript"],["language","javascript",3,"content"],["heading","Filter HTML"],["heading","Filter TypeScript"],["heading","Filter CSS"],["language","css",3,"content"]],template:function(s,a){1&s&&(n.TgZ(0,"p"),n._uU(1,"As part of UX Aspects we provide two common prebuilt Filter components, however you may require different filter components specifically for your application. We provide some useful classes for you to use to make the process of creating your own filter component simple while ensuring that it will work well with Filter Containers automatically."),n.qZA(),n.TgZ(2,"h4"),n._uU(3,"Creating a Custom Filter Component"),n.qZA(),n.TgZ(4,"p"),n._uU(5,"Your custom filter component should inject the FilterService. This service will provide you with the following functions:"),n.qZA(),n.TgZ(6,"uxd-api-properties"),n.TgZ(7,"tr",0),n._uU(8," Will add a filter to the list of active filters. "),n.qZA(),n.TgZ(9,"tr",1),n._uU(10," Will remove a filter to the list of active filters. "),n.qZA(),n.TgZ(11,"tr",2),n._uU(12," Will remove all filters from the list of active filters. "),n.qZA(),n.qZA(),n.TgZ(13,"h4"),n._uU(14,"Sample Custom Filter Component"),n.qZA(),n.TgZ(15,"ux-filter-container"),n._UZ(16,"ux-filter-custom",3),n.qZA(),n._UZ(17,"hr"),n.TgZ(18,"p"),n._uU(19,"The following code can be used to create the example above:"),n.qZA(),n.TgZ(20,"ux-tabset",4),n.TgZ(21,"ux-tab",5),n._UZ(22,"uxd-snippet",6),n.qZA(),n.TgZ(23,"ux-tab",7),n._UZ(24,"uxd-snippet",8),n.qZA(),n.TgZ(25,"ux-tab",9),n._UZ(26,"uxd-snippet",6),n.qZA(),n.TgZ(27,"ux-tab",10),n._UZ(28,"uxd-snippet",8),n.qZA(),n.TgZ(29,"ux-tab",11),n._UZ(30,"uxd-snippet",12),n.qZA(),n.qZA()),2&s&&(n.xp6(16),n.Q6J("filters",a.statusFilters)("initial",a.statusFilters[0]),n.xp6(4),n.Q6J("minimal",!1),n.xp6(2),n.Q6J("content",a.snippets.compiled.appHtml),n.xp6(2),n.Q6J("content",a.snippets.compiled.appTs),n.xp6(2),n.Q6J("content",a.snippets.compiled.sampleHtml),n.xp6(2),n.Q6J("content",a.snippets.compiled.sampleTs),n.xp6(2),n.Q6J("content",a.snippets.compiled.sampleCss))},directives:[_.$,T.S,X.F,tn,y.A,Z.i,f.j],encapsulation:2}),S=(0,b.gn)([(0,v.cG)("ComponentsCustomFiltersComponent")],S);var Sn=o(23017),Dn=o(43532);function Mn(p,s){if(1&p&&n._UZ(0,"ux-icon",33),2&p){const a=n.oxw().$implicit;n.uIk("aria-label",a.active?"Approved":"Not approved")}}function Fn(p,s){if(1&p&&(n.TgZ(0,"tr",29),n.TgZ(1,"td"),n._uU(2),n.qZA(),n.TgZ(3,"td"),n._uU(4),n.qZA(),n.TgZ(5,"td"),n._uU(6),n.qZA(),n.TgZ(7,"td"),n._UZ(8,"ux-spark",30),n.qZA(),n.TgZ(9,"td",31),n.YNc(10,Mn,1,1,"ux-icon",32),n.qZA(),n.qZA()),2&p){const a=s.$implicit;n.xp6(2),n.Oqu(a.name),n.xp6(2),n.Oqu(a.author),n.xp6(2),n.Oqu(a.date),n.xp6(2),n.Q6J("value",a.completed)("inlineLabel",a.completed),n.xp6(2),n.Q6J("ngIf",a.active)}}let D=class extends x.u{constructor(s){super(o(3659)),this._announcer=s,this.filters=[],this.statusFilters=[{group:"Status",title:"Status",name:"Status (All)",initial:!0},{group:"Status",title:"Active",name:"Active"},{group:"Status",title:"Inactive",name:"Inactive"}],this.authorFilters=[{group:"Author",title:"Author",name:"Author (All)",initial:!0},{group:"Author",title:"Lily Clarke",name:"Lily Clarke"},{group:"Author",title:"Jesse Bass",name:"Jesse Bass"},{group:"Author",title:"Iva Rogers",name:"Iva Rogers"},{group:"Author",title:"Nina Copeland",name:"Nina Copeland"},{group:"Author",title:"Bradley Mason",name:"Bradley Mason"},{group:"Author",title:"Aaron Scott",name:"Aaron Scott"},{group:"Author",title:"Ethel Collier",name:"Ethel Collier"},{group:"Author",title:"Lois Saunders",name:"Lois Saunders"}],this.typeaheadOptions={placeholder:"Find Author",minCharacters:1},this.dataSource=[{id:1,name:"Document",author:"Lily Clarke",date:"18 Dec 2016",completed:97,active:chance.bool()},{id:2,name:"Email",author:"Jesse Bass",date:"22 Dec 2016",completed:15,active:chance.bool()},{id:3,name:"Email",author:"Iva Rogers",date:"12 Dec 2016",completed:20,active:chance.bool()},{id:4,name:"Email",author:"Nina Copeland",date:"16 Dec 2016",completed:74,active:chance.bool()},{id:5,name:"Email",author:"Bradley Mason",date:"17 Dec 2016",completed:63,active:chance.bool()},{id:6,name:"Document",author:"Aaron Scott",date:"21 Dec 2016",completed:21,active:chance.bool()},{id:7,name:"Document",author:"Lily Clarke",date:"17 Dec 2016",completed:85,active:chance.bool()},{id:8,name:"Document",author:"Lily Clarke",date:"17 Dec 2016",completed:11,active:chance.bool()}],this.documents=[...this.dataSource],this.playground={files:{"app.component.ts":this.snippets.raw.appTs,"app.component.html":this.snippets.raw.appHtml},modules:[{imports:["FilterModule","ColorServiceModule","SparkModule"],library:"@ux-aspects/ux-aspects"},{imports:["A11yModule"],library:"@angular/cdk/a11y"}]}}onEvent(s){s instanceof l.rd4&&this._announcer.announce(`Filter ${s.filter.name} selected.`),s instanceof l.iFp&&this._announcer.announce(`Filter ${s.filter.name} deselected.`),s instanceof l.wqt&&this._announcer.announce("All filters deselected.")}apply(){this.documents=[...this.dataSource],this.filters.forEach(s=>{switch(s.group){case"Author":this.documents=this.documents.filter(a=>a.author===s.name);break;case"Status":this.documents=this.documents.filter(a=>a.active===("Active"===s.name))}})}};function Rn(p,s){1&p&&n._UZ(0,"ux-icon",17)}function On(p,s){if(1&p&&(n.TgZ(0,"tr"),n.TgZ(1,"td",1),n._uU(2),n.qZA(),n.TgZ(3,"td"),n._uU(4),n.qZA(),n.TgZ(5,"td"),n._uU(6),n.qZA(),n.TgZ(7,"td"),n._uU(8),n.qZA(),n.TgZ(9,"td"),n.YNc(10,Rn,1,0,"ux-icon",16),n.qZA(),n.qZA()),2&p){const a=s.$implicit,e=s.index,t=n.oxw();n.uIk("aria-setsize",t.total)("aria-posinset",e),n.xp6(2),n.Oqu(a.id),n.xp6(2),n.Oqu(a.name),n.xp6(2),n.Oqu(a.address),n.xp6(2),n.Oqu(a.phone),n.xp6(1),n.uIk("aria-label",a.active?"Active":"Inactive"),n.xp6(1),n.Q6J("ngIf",a.active)}}function In(p,s){1&p&&(n.TgZ(0,"tr"),n.TgZ(1,"td",18),n._UZ(2,"div",19),n.TgZ(3,"p",20),n._uU(4,"Loading..."),n.qZA(),n.qZA(),n.qZA())}D.\u0275fac=function(s){return new(s||D)(n.Y36(k.Kd))},D.\u0275cmp=n.Xpm({type:D,selectors:[["uxd-components-filters"]],features:[n.qOj],decls:135,vars:13,consts:[[3,"filters","filtersChange","events"],[3,"filters","initial","options"],[3,"filters","initial"],[1,"table","table-hover"],[1,"text-center"],["class","clickable",4,"ngFor","ngForOf"],["tableTitle","Inputs"],["uxd-api-property","","name","filters","type","Filter[]"],["uxd-api-property","","name","clearTooltip","type","string","defaultValue","Clear All"],["uxd-api-property","","name","clearAriaLabel","type","string"],["tableTitle","Outputs"],["uxd-api-property","","name","events","type","FilterEvent"],["uxd-api-property","","name","filtersChange","type","Filter[]"],["uxd-api-property","","name","initial","type","Filter"],["uxd-api-property","","name","id","type","string"],["uxd-api-property","","name","group","type","string","required","true"],["uxd-api-property","","name","title","type","string","required","true"],["uxd-api-property","","name","name","type","string","required","true"],["uxd-api-property","","name","initial","type","boolean"],["uxd-api-property","","name","options","type","FilterDynamicListConfig"],["uxd-api-property","","name","placeholder","type","string"],["uxd-api-property","","name","minCharacters","type","number","defaultValue","3"],["uxd-api-property","","name","maxResults","type","number"],["uxd-api-property","","name","maxIndividualItems","type","number","defaultValue","0"],[3,"minimal"],["heading","HTML"],["language","html",3,"content"],["heading","TypeScript"],["language","javascript",3,"content"],[1,"clickable"],["theme","chart2","barHeight","3",3,"value","inlineLabel"],[1,"text-center","vertical-center-icon"],["name","checkmark",4,"ngIf"],["name","checkmark"]],template:function(s,a){1&s&&(n.TgZ(0,"ux-filter-container",0),n.NdJ("filtersChange",function(t){return a.filters=t})("filtersChange",function(){return a.apply()})("events",function(t){return a.onEvent(t)}),n._UZ(1,"ux-filter-dynamic",1),n._UZ(2,"ux-filter-dropdown",2),n.qZA(),n.TgZ(3,"table",3),n.TgZ(4,"thead"),n.TgZ(5,"tr"),n.TgZ(6,"th"),n._uU(7,"Name"),n.qZA(),n.TgZ(8,"th"),n._uU(9,"Author"),n.qZA(),n.TgZ(10,"th"),n._uU(11,"Date modified"),n.qZA(),n.TgZ(12,"th"),n._uU(13,"Work completed"),n.qZA(),n.TgZ(14,"th",4),n._uU(15,"Status"),n.qZA(),n.qZA(),n.qZA(),n.TgZ(16,"tbody"),n.YNc(17,Fn,11,6,"tr",5),n.qZA(),n.qZA(),n.TgZ(18,"p"),n._uU(19,"Active filters:"),n.qZA(),n.TgZ(20,"pre"),n._uU(21),n.ALo(22,"json"),n.qZA(),n._UZ(23,"hr"),n.TgZ(24,"p"),n._uU(25,"Filters can be implemented to offer users a way to filter a set of data, allowing them to apply and remove conditions. Filters are contained within a Filter Container component which contains a clear all button for removing all active filters at once"),n.qZA(),n.TgZ(26,"p"),n._uU(27,"To add a Filter Container component to your application you must import the "),n.TgZ(28,"code"),n._uU(29,"FilterModule"),n.qZA(),n._uU(30," which allows the use of the "),n.TgZ(31,"code"),n._uU(32,"ux-filters-container"),n.qZA(),n._uU(33," component."),n.qZA(),n.TgZ(34,"p"),n._uU(35,"The following attributes can be used to customise the behaviour of the component:"),n.qZA(),n.TgZ(36,"uxd-api-properties",6),n.TgZ(37,"tr",7),n._uU(38," Defines the list of filters to be selected. "),n.qZA(),n.TgZ(39,"tr",8),n._uU(40," Defines the text to display on the clear button tooltip. "),n.qZA(),n.TgZ(41,"tr",9),n._uU(42," Determines the aria-label for the clear all button. "),n.qZA(),n.qZA(),n.TgZ(43,"uxd-api-properties",10),n.TgZ(44,"tr",11),n._uU(45," This will be triggered when a filter is added, removed or all filters removed. The event will be an instance of either "),n.TgZ(46,"code"),n._uU(47,"FilterAddEvent"),n.qZA(),n._uU(48,", "),n.TgZ(49,"code"),n._uU(50,"FilterRemoveEvent"),n.qZA(),n._uU(51," or "),n.TgZ(52,"code"),n._uU(53,"FilterRemoveAllEvent"),n.qZA(),n._uU(54," and will contain the filter being added or removed in a filter property (remove all will not contain affected filters). "),n.qZA(),n.TgZ(55,"tr",12),n._uU(56," This will emit the selected filters when the selection changes. "),n.qZA(),n.qZA(),n.TgZ(57,"h4"),n._uU(58,"Custom Templates"),n.qZA(),n.TgZ(59,"p"),n._uU(60," Additionally the clear all button can be customized by adding an "),n.TgZ(61,"code"),n._uU(62,"ng-template"),n.qZA(),n._uU(63," with "),n.TgZ(64,"code"),n._uU(65,"#clearAllTemplate"),n.qZA(),n._uU(66," as a child of the "),n.TgZ(67,"code"),n._uU(68,"ux-filter-container"),n.qZA(),n._uU(69," component.\n"),n.qZA(),n.TgZ(70,"h3"),n._uU(71,"Filter Dropdown"),n.qZA(),n.TgZ(72,"p"),n._uU(73,"The dropdown filter (shown as Status in the demo above) can be added inside the filter container using the "),n.TgZ(74,"code"),n._uU(75,"ux-filter-dropdown"),n.qZA(),n._uU(76," component."),n.qZA(),n.TgZ(77,"p"),n._uU(78,"The following attributes can be used to customise the behavior of the component:"),n.qZA(),n.TgZ(79,"uxd-api-properties",6),n.TgZ(80,"tr",7),n._uU(81," Sets the list of filters to be displayed. "),n.qZA(),n.TgZ(82,"tr",13),n._uU(83," Sets the initial filter state. This should be set to the state where nothing has been filtered as it will revert to this when the filters have been removed. "),n.qZA(),n.qZA(),n.TgZ(84,"h4"),n._uU(85,"Filter Options"),n.qZA(),n.TgZ(86,"p"),n._uU(87,"A filter object can contain the following properties:"),n.qZA(),n.TgZ(88,"uxd-api-properties"),n.TgZ(89,"tr",14),n._uU(90," Define the ID the filter element will use. "),n.qZA(),n.TgZ(91,"tr",15),n._uU(92," Sets the filter group. All filters in the same filter dropdown should have the same group. "),n.qZA(),n.TgZ(93,"tr",16),n._uU(94," The text which will be displayed on the button when this filter is active. "),n.qZA(),n.TgZ(95,"tr",17),n._uU(96," The text which will be displayed in the dropdown menu. "),n.qZA(),n.TgZ(97,"tr",18),n._uU(98," One of the filters in a group should be set to initial. This refers to the unfiltered state. "),n.qZA(),n.qZA(),n.TgZ(99,"h3"),n._uU(100,"Filter Dynamic"),n.qZA(),n.TgZ(101,"p"),n._uU(102,"When there are a large number of filter options, the Dynamic Filter can be used to replace the regular dropdown with a text search, supporting dropdown typeahead. This is configurable to fallback to the standard implementation when the list of filters falls beneath a certain length. An example of this is shown as Author in the demo above.\n"),n.qZA(),n.TgZ(103,"p"),n._uU(104,"The dynamic filter can be added inside the filter container using the "),n.TgZ(105,"code"),n._uU(106,"ux-filter-dynamic"),n.qZA(),n._uU(107," component."),n.qZA(),n.TgZ(108,"p"),n._uU(109,"The following attributes can be used to customise the behavior of the component:"),n.qZA(),n.TgZ(110,"uxd-api-properties",6),n.TgZ(111,"tr",7),n._uU(112," Sets the list of filters to be displayed. "),n.qZA(),n.TgZ(113,"tr",13),n._uU(114," Sets the initial filter state. This should be set to the state where nothing has been filtered. "),n.qZA(),n.TgZ(115,"tr",19),n._uU(116," Sets the typeahead options. "),n.qZA(),n.qZA(),n.TgZ(117,"p"),n._uU(118,"The FilterDynamicListConfig can contain the following properties:"),n.qZA(),n.TgZ(119,"uxd-api-properties"),n.TgZ(120,"tr",20),n._uU(121," Sets the placeholder text for the typeahead. "),n.qZA(),n.TgZ(122,"tr",21),n._uU(123," Defines the minimum number of characters that are required before results will be shown. "),n.qZA(),n.TgZ(124,"tr",22),n._uU(125," Sets the maximum number of results to display. "),n.qZA(),n.TgZ(126,"tr",23),n._uU(127," Defines the number of items that can be displayed before switching to use the typeahead. "),n.qZA(),n.qZA(),n.TgZ(128,"p"),n._uU(129,"The following code can be used to create the example above:"),n.qZA(),n.TgZ(130,"ux-tabset",24),n.TgZ(131,"ux-tab",25),n._UZ(132,"uxd-snippet",26),n.qZA(),n.TgZ(133,"ux-tab",27),n._UZ(134,"uxd-snippet",28),n.qZA(),n.qZA()),2&s&&(n.Q6J("filters",a.filters),n.xp6(1),n.Q6J("filters",a.authorFilters)("initial",a.authorFilters[0])("options",a.typeaheadOptions),n.xp6(1),n.Q6J("filters",a.statusFilters)("initial",a.statusFilters[0]),n.xp6(15),n.Q6J("ngForOf",a.documents),n.xp6(4),n.Oqu(n.lcZ(22,11,a.filters)),n.xp6(109),n.Q6J("minimal",!1),n.xp6(2),n.Q6J("content",a.snippets.compiled.appHtml),n.xp6(2),n.Q6J("content",a.snippets.compiled.appTs))},directives:[X.F,Sn.V,Dn.c,r.sg,_.$,T.S,y.A,Z.i,f.j,J.g,r.O5,q.o],pipes:[r.Ts],encapsulation:2}),D=(0,b.gn)([(0,v.cG)("ComponentsFiltersComponent")],D);let M=class extends x.u{constructor(){super(o(66079)),this.people=[],this.loading=!1,this.total=250,this._page=0,this.playground={files:{"app.component.html":this.snippets.raw.appHtml,"app.component.ts":this.snippets.raw.appTs,"app.component.css":this.snippets.raw.appCss},modules:[{library:"chance"},{imports:["FixedHeaderTableModule"],library:"@ux-aspects/ux-aspects"}]}}loadPage(){this.loading||this._page>=5||(this.loading=!0,setTimeout(()=>{this.people=[...this.people,...this.getPeople(this._page++,50)],this.loading=!1},2e3))}getPeople(s,a){const e=[];for(let t=s*a;t<s*a+a;t++)e.push({id:t,name:chance.name(),address:chance.address(),phone:chance.phone(),active:chance.bool()});return e}};M.\u0275fac=function(s){return new(s||M)},M.\u0275cmp=n.Xpm({type:M,selectors:[["uxd-components-fixed-header-table"]],features:[n.qOj],decls:64,vars:10,consts:[["uxFixedHeaderTable","",1,"table",3,"dataset","tableHeight","tablePaging"],[1,"table-col-id"],[4,"ngFor","ngForOf"],[4,"ngIf"],["tableTitle","Inputs"],["uxd-api-property","","name","tableHeight","type","number | string",3,"required"],["uxd-api-property","","name","dataset","type","ReadonlyArray<any>",3,"required"],["tableTitle","Outputs"],["uxd-api-property","","name","tablePaging","type","void"],["tableTitle","Methods"],["uxd-api-property","","name","setLayout","type","void"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"],["heading","CSS"],["name","checkmark",4,"ngIf"],["name","checkmark"],[1,"loading-indicator"],[1,"spinner","spinner-accent","spinner-bounce-middle"],[1,"loading-indicator-label"]],template:function(s,a){1&s&&(n.TgZ(0,"table",0),n.NdJ("tablePaging",function(){return a.loadPage()}),n.TgZ(1,"thead"),n.TgZ(2,"tr"),n.TgZ(3,"th",1),n._uU(4,"Id"),n.qZA(),n.TgZ(5,"th"),n._uU(6,"Name"),n.qZA(),n.TgZ(7,"th"),n._uU(8,"Address"),n.qZA(),n.TgZ(9,"th"),n._uU(10,"Phone"),n.qZA(),n.TgZ(11,"th"),n._uU(12,"Active"),n.qZA(),n.qZA(),n.qZA(),n.TgZ(13,"tbody"),n.YNc(14,On,11,8,"tr",2),n.YNc(15,In,5,0,"tr",3),n.qZA(),n.qZA(),n._UZ(16,"hr"),n.TgZ(17,"p"),n._uU(18," A fixed header table can be created by using the "),n.TgZ(19,"code"),n._uU(20,"uxFixedHeaderTable"),n.qZA(),n._uU(21," directive. This allows the table header to remain fixed in place and visible while the table content is scrolled.\n"),n.qZA(),n.TgZ(22,"p"),n._uU(23," To give a column a fixed width you should apply a class to both the "),n.TgZ(24,"code"),n._uU(25,"th"),n.qZA(),n._uU(26," and associated "),n.TgZ(27,"code"),n._uU(28,"td"),n.qZA(),n._uU(29," elements. This class should set the "),n.TgZ(30,"code"),n._uU(31,"width"),n.qZA(),n._uU(32," property and also set "),n.TgZ(33,"code"),n._uU(34,"flex: none"),n.qZA(),n._uU(35,".\n"),n.qZA(),n.TgZ(36,"p"),n._uU(37,"The properties of this directive are:"),n.qZA(),n.TgZ(38,"uxd-api-properties",4),n.TgZ(39,"tr",5),n._uU(40," This defines the height of the table body. When a number is provided the unit will default to pixels. If a string is provided then the CSS unit will need to be specifed as part of the string, e.g. "),n.TgZ(41,"code"),n._uU(42,"'50%'"),n.qZA(),n._uU(43,". If using a percentage value, the table element should also have an explicit height set. "),n.qZA(),n.TgZ(44,"tr",6),n._uU(45," If specifed, any time the dataset changes the layout will be recalculated to ensure the columns headers remain aligned with the columns after a scrollbar has appeared or disappeared. The dataset should be immutable to ensure changes are detected. TypeScript can enforce this immutability by using the "),n.TgZ(46,"code"),n._uU(47,"ReadonlyArray"),n.qZA(),n._uU(48," type. "),n.qZA(),n.qZA(),n.TgZ(49,"uxd-api-properties",7),n.TgZ(50,"tr",8),n._uU(51," This event will be triggered when the user scrolls to the bottom of the table. This can be used to implement paging functionality. This event will also be triggered when the table initially loads to allow loading of the first page. "),n.qZA(),n.qZA(),n.TgZ(52,"uxd-api-properties",9),n.TgZ(53,"tr",10),n._uU(54," This will recalculate the layout of the table to ensure the columns headers remain aligned with the columns after a scrollbar has appeared or disappeared. "),n.qZA(),n.qZA(),n.TgZ(55,"p"),n._uU(56,"The following code can be used to create the example shown above:"),n.qZA(),n.TgZ(57,"ux-tabset",11),n.TgZ(58,"ux-tab",12),n._UZ(59,"uxd-snippet",13),n.qZA(),n.TgZ(60,"ux-tab",14),n._UZ(61,"uxd-snippet",13),n.qZA(),n.TgZ(62,"ux-tab",15),n._UZ(63,"uxd-snippet",13),n.qZA(),n.qZA()),2&s&&(n.Q6J("dataset",a.people)("tableHeight",500),n.xp6(14),n.Q6J("ngForOf",a.people),n.xp6(1),n.Q6J("ngIf",a.loading),n.xp6(24),n.Q6J("required",!0),n.xp6(5),n.Q6J("required",!1),n.xp6(13),n.Q6J("minimal",!1),n.xp6(2),n.Q6J("content",a.snippets.compiled.appHtml),n.xp6(2),n.Q6J("content",a.snippets.compiled.appTs),n.xp6(2),n.Q6J("content",a.snippets.compiled.appCss))},directives:[V.n,r.sg,r.O5,_.$,T.S,y.A,Z.i,f.j,q.o],styles:[".table-col-id[_ngcontent-%COMP%]{width:50px;min-width:50px;flex:none}.loading-indicator[_ngcontent-%COMP%]{display:flex;align-items:center}.loading-indicator[_ngcontent-%COMP%]   .spinner[_ngcontent-%COMP%]{margin:0 1em 0 .5em}.loading-indicator[_ngcontent-%COMP%]   .loading-indicator-label[_ngcontent-%COMP%]{margin:0;font-style:italic}"]}),M=(0,b.gn)([(0,v.cG)("ComponentsFixedHeaderTableComponent")],M);var zn=o(10945),En=o(26923),Nn=o(68642);function Jn(p,s){if(1&p&&(n.TgZ(0,"tr",9),n.TgZ(1,"td",10),n._uU(2),n.qZA(),n.TgZ(3,"td"),n._uU(4),n.qZA(),n.TgZ(5,"td"),n._uU(6),n.ALo(7,"date"),n.qZA(),n.TgZ(8,"td"),n._UZ(9,"ux-spark",11),n.qZA(),n.TgZ(10,"td"),n.TgZ(11,"button",12),n._UZ(12,"ux-icon",13),n.qZA(),n.TgZ(13,"button",14),n._UZ(14,"ux-icon",15),n.qZA(),n.TgZ(15,"button",16),n._UZ(16,"ux-icon",17),n.qZA(),n.qZA(),n.qZA()),2&p){const a=s.$implicit;n.Q6J("uxSelectionItem",a),n.xp6(2),n.Oqu(a.name),n.xp6(2),n.Oqu(a.author),n.xp6(2),n.Oqu(n.xi3(7,6,a.date,"shortDate")),n.xp6(3),n.Q6J("value",a.complete)("inlineLabel",a.complete)}}let F=class extends x.u{constructor(){super(o(50946)),this.documents=[],this.selected=[],this.playground={files:{"app.component.html":this.snippets.raw.appHtml,"app.component.ts":this.snippets.raw.appTs,"app.component.css":this.snippets.raw.appCss},modules:[{library:"chance"},{imports:["HoverActionModule","SelectionModule","SparkModule","TooltipModule"],library:"@ux-aspects/ux-aspects"}]};for(let s=1;s<6;s++)this.documents.push({name:`Document ${s}`,author:chance.name(),date:chance.date({year:2017}),complete:chance.floating({min:0,max:100,fixed:2})})}};F.\u0275fac=function(s){return new(s||F)},F.\u0275cmp=n.Xpm({type:F,selectors:[["uxd-components-hover-actions"]],features:[n.qOj],decls:55,vars:6,consts:[[1,"table","table-hover"],[1,"table-header-dark"],["mode","row-alt",3,"uxSelection","uxSelectionChange"],["class","hover-action-container","uxHoverActionContainer","",3,"uxSelectionItem",4,"ngFor","ngForOf"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"],["heading","CSS"],["uxHoverActionContainer","",1,"hover-action-container",3,"uxSelectionItem"],[1,"text-black"],["barHeight","3",3,"value","inlineLabel"],["type","button","aria-label","View","uxTooltip","View","uxHoverAction","",1,"hover-action-btn"],["name","view",1,"hover-action-icon"],["type","button","aria-label","Share","uxTooltip","Share","uxHoverAction","",1,"hover-action-btn"],["name","share",1,"hover-action-icon"],["type","button","aria-label","Delete","uxTooltip","Delete","uxHoverAction","",1,"hover-action-btn"],["name","trash",1,"hover-action-icon"]],template:function(s,a){1&s&&(n.TgZ(0,"table",0),n.TgZ(1,"thead"),n.TgZ(2,"tr",1),n.TgZ(3,"th"),n._uU(4,"Name"),n.qZA(),n.TgZ(5,"th"),n._uU(6,"Author"),n.qZA(),n.TgZ(7,"th"),n._uU(8,"Date"),n.qZA(),n.TgZ(9,"th"),n._uU(10,"Work Completed (%)"),n.qZA(),n._UZ(11,"th"),n.qZA(),n.qZA(),n.TgZ(12,"tbody",2),n.NdJ("uxSelectionChange",function(t){return a.selected=t}),n.YNc(13,Jn,17,9,"tr",3),n.qZA(),n.qZA(),n._UZ(14,"hr"),n.TgZ(15,"p"),n._uU(16," Hover actions are a simple way to display additional controls on a component only on hover or when focused. It also provides keyboard control for navigating through the hover actions. It is commonly used within table rows, however it can be used within an element of any kind.\n"),n.qZA(),n.TgZ(17,"p"),n._uU(18," To add hover actions to an element add a "),n.TgZ(19,"code"),n._uU(20,"uxHoverActionContainer"),n.qZA(),n._uU(21," directive to it. This will define the container element that will contain hover actions. By default, container elements are given a "),n.TgZ(22,"code"),n._uU(23,"tabindex"),n.qZA(),n._uU(24," of "),n.TgZ(25,"code"),n._uU(26,"0"),n.qZA(),n._uU(27,".\n"),n.qZA(),n.TgZ(28,"p"),n._uU(29," Within the container you should add the "),n.TgZ(30,"code"),n._uU(31,"uxHoverAction"),n.qZA(),n._uU(32," directive to any element that is a hover action.\n"),n.qZA(),n.TgZ(33,"p"),n._uU(34," When the hover action container is hovered or focused, or a hover action within it is focused, the container will receive a "),n.TgZ(35,"code"),n._uU(36,"hover-action-container-active"),n.qZA(),n._uU(37," class which can be used to apply additional styles when the container is active.\n"),n.qZA(),n.TgZ(38,"p"),n._uU(39," Additionally, each hover action will receive a "),n.TgZ(40,"code"),n._uU(41,"hover-action-active"),n.qZA(),n._uU(42," class when the container is hovered or focused. A hover action will also receive a "),n.TgZ(43,"code"),n._uU(44,"hover-action-focused"),n.qZA(),n._uU(45," class when that individual hover action is focused.\n"),n.qZA(),n.TgZ(46,"p"),n._uU(47," The following code can be used to create the example shown above:\n"),n.qZA(),n.TgZ(48,"ux-tabset",4),n.TgZ(49,"ux-tab",5),n._UZ(50,"uxd-snippet",6),n.qZA(),n.TgZ(51,"ux-tab",7),n._UZ(52,"uxd-snippet",6),n.qZA(),n.TgZ(53,"ux-tab",8),n._UZ(54,"uxd-snippet",6),n.qZA(),n.qZA()),2&s&&(n.xp6(12),n.Q6J("uxSelection",a.selected),n.xp6(1),n.Q6J("ngForOf",a.documents),n.xp6(35),n.Q6J("minimal",!1),n.xp6(2),n.Q6J("content",a.snippets.compiled.appHtml),n.xp6(2),n.Q6J("content",a.snippets.compiled.appTs),n.xp6(2),n.Q6J("content",a.snippets.compiled.appCss))},directives:[W.p,r.sg,y.A,Z.i,f.j,zn.n,$.Q,J.g,En.i,Nn.k,q.o],pipes:[r.uU],styles:[".hover-action-container[_ngcontent-%COMP%]{outline:none}.hover-action-container[_ngcontent-%COMP%]   .hover-action-icon[_ngcontent-%COMP%]{display:inline-block;padding:3px 6px;cursor:pointer}"]}),F=(0,b.gn)([(0,v.cG)("ComponentsHoverActionsComponent")],F);var Ln=o(45623),Hn=o(23810),Qn=o(68465);function Pn(p,s){if(1&p&&(n.TgZ(0,"tr"),n.TgZ(1,"td",24),n._uU(2),n.qZA(),n.TgZ(3,"td"),n._uU(4),n.qZA(),n.TgZ(5,"td"),n._uU(6),n.qZA(),n.qZA()),2&p){const a=s.$implicit;n.xp6(2),n.Oqu(a.name),n.xp6(2),n.Oqu(a.author),n.xp6(2),n.Oqu(a.date.toLocaleDateString())}}function Wn(p,s){if(1&p&&(n.TgZ(0,"div",21),n.TgZ(1,"table",22),n.TgZ(2,"thead"),n.TgZ(3,"tr"),n.TgZ(4,"th"),n._uU(5,"Document"),n.qZA(),n.TgZ(6,"th"),n._uU(7,"Author"),n.qZA(),n.TgZ(8,"th"),n._uU(9,"Date"),n.qZA(),n.qZA(),n.qZA(),n.TgZ(10,"tbody"),n.YNc(11,Pn,7,3,"tr",23),n.qZA(),n.qZA(),n.qZA()),2&p){const a=n.oxw();n.xp6(11),n.Q6J("ngForOf",a.documents)}}function $n(p,s){if(1&p&&(n.TgZ(0,"div",27),n.TgZ(1,"h3",28),n._uU(2),n.qZA(),n.TgZ(3,"p",29),n.TgZ(4,"span",30),n._uU(5,"Authored on"),n.qZA(),n._uU(6),n.TgZ(7,"span",30),n._uU(8,"by"),n.qZA(),n._uU(9),n.qZA(),n.qZA()),2&p){const a=s.$implicit;n.xp6(2),n.Oqu(a.name),n.xp6(4),n.hij(" ",a.date.toLocaleDateString()," "),n.xp6(3),n.hij(" ",a.author," ")}}function jn(p,s){if(1&p&&(n.TgZ(0,"div",25),n.YNc(1,$n,10,3,"div",26),n.qZA()),2&p){const a=n.oxw();n.xp6(1),n.Q6J("ngForOf",a.documents)}}function Bn(p,s){if(1&p&&(n.TgZ(0,"div",33),n.TgZ(1,"h3",28),n._uU(2),n.qZA(),n.TgZ(3,"p",29),n.TgZ(4,"span",30),n._uU(5,"Authored on"),n.qZA(),n._uU(6),n.TgZ(7,"span",30),n._uU(8,"by"),n.qZA(),n._uU(9),n.qZA(),n.qZA()),2&p){const a=s.$implicit;n.xp6(2),n.Oqu(a.name),n.xp6(4),n.hij(" ",a.date.toLocaleDateString()," "),n.xp6(3),n.hij(" ",a.author," ")}}function Gn(p,s){if(1&p&&(n.TgZ(0,"div",31),n.YNc(1,Bn,10,3,"div",32),n.qZA()),2&p){const a=n.oxw();n.xp6(1),n.Q6J("ngForOf",a.documents)}}let R=class extends x.u{constructor(){super(o(94244)),this.width=100,this.group="table",this.documents=[],this.options={type:l.tAr.Value,track:{min:40,max:100,ticks:{major:{show:!0,steps:60,labels:!0,formatter:s=>40===s?"Narrow":"Wide"},minor:{show:!1}}}},this.layouts={table:{group:"table"},card:{group:"card",minWidth:620},cardstack:{group:"card",maxWidth:620}},this.playground={files:{"app.component.html":this.snippets.raw.appHtml,"app.component.ts":this.snippets.raw.appTs,"app.component.css":this.snippets.raw.appCss},modules:[{imports:["SliderModule","LayoutSwitcherModule","AccordionModule"],library:"@ux-aspects/ux-aspects"},{library:"chance"},{imports:["ButtonsModule"],forRoot:!0,library:"ngx-bootstrap/buttons"}]};for(let s=1;s<10;s++)this.documents.push({name:`Document ${s}`,author:chance.name(),date:chance.date({year:2017})})}};R.\u0275fac=function(s){return new(s||R)},R.\u0275cmp=n.Xpm({type:R,selectors:[["uxd-components-layout-switching"]],features:[n.qOj],decls:74,vars:14,consts:[[1,"row"],[1,"btn-group","pull-right","send-to-back"],["type","button","btnRadio","table",1,"btn","button-toggle-primary",3,"ngModel","ngModelChange"],["type","button","btnRadio","card",1,"btn","button-toggle-primary",3,"ngModel","ngModelChange"],[1,"row","m-t"],["uxLayoutSwitcher","",1,"layout-switcher-example",3,"group"],["class","table-reponsive",4,"uxLayoutSwitcherItem"],["class","layout-switcher-card-container",4,"uxLayoutSwitcherItem"],["class","layout-switcher-card-stack-container",4,"uxLayoutSwitcherItem"],[1,"row","uxd-customize-example"],[1,"col-md-12"],["heading","Customize Example...",1,"accordion-chevron"],[1,"row","uxd-customize-row"],[1,"dimension-slider",3,"value","options","valueChange"],["tableTitle","Inputs"],["uxd-api-property","","name","group","type","string"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"],["heading","CSS"],[1,"table-reponsive"],[1,"table","table-hover"],[4,"ngFor","ngForOf"],[1,"text-black"],[1,"layout-switcher-card-container"],["class","layout-switcher-card",4,"ngFor","ngForOf"],[1,"layout-switcher-card"],[1,"text-black","m-t-nil"],[1,"m-b-nil"],[1,"text-muted"],[1,"layout-switcher-card-stack-container"],["class","layout-switcher-card-stack-card",4,"ngFor","ngForOf"],[1,"layout-switcher-card-stack-card"]],template:function(s,a){1&s&&(n.TgZ(0,"div",0),n.TgZ(1,"div",1),n.TgZ(2,"button",2),n.NdJ("ngModelChange",function(t){return a.group=t}),n._uU(3,"Table"),n.qZA(),n.TgZ(4,"button",3),n.NdJ("ngModelChange",function(t){return a.group=t}),n._uU(5,"Card"),n.qZA(),n.qZA(),n.qZA(),n.TgZ(6,"div",4),n.TgZ(7,"div",5),n.YNc(8,Wn,12,1,"div",6),n.YNc(9,jn,2,1,"div",7),n.YNc(10,Gn,2,1,"div",8),n.qZA(),n.qZA(),n.TgZ(11,"div",9),n.TgZ(12,"div",10),n.TgZ(13,"ux-accordion"),n.TgZ(14,"ux-accordion-panel",11),n.TgZ(15,"div",12),n.TgZ(16,"div",10),n.TgZ(17,"label"),n._uU(18,"Container Width"),n.qZA(),n.TgZ(19,"ux-slider",13),n.NdJ("valueChange",function(t){return a.width=t}),n.qZA(),n.qZA(),n.qZA(),n.TgZ(20,"div",12),n.TgZ(21,"div",10),n.TgZ(22,"i"),n._uU(23," Use the slider above to change the width of the container element. When displaying the "),n.TgZ(24,"b"),n._uU(25,"table"),n.qZA(),n._uU(26," group the layout will simply resize, however when displaying the "),n.TgZ(27,"b"),n._uU(28,"card"),n.qZA(),n._uU(29," group it will switch between a grid and stacked layout depending on the size of the container. "),n.qZA(),n.qZA(),n.qZA(),n.qZA(),n.qZA(),n.qZA(),n.qZA(),n._UZ(30,"hr"),n.TgZ(31,"p"),n._uU(32," The "),n.TgZ(33,"code"),n._uU(34,"uxLayoutSwitcher"),n.qZA(),n._uU(35," directive can be used to easily switch between several different layouts, either by selecting a desired layout or based on size constraints.\n"),n.qZA(),n.TgZ(36,"p"),n._uU(37," To use the layout switcher add the "),n.TgZ(38,"code"),n._uU(39,"uxLayoutSwitcher"),n.qZA(),n._uU(40," directive to the container element. The size of this element will be monitored and the appropriate layout will be displayed based on the container's dimensions. The following attribute can be used to configure the directive:\n"),n.qZA(),n.TgZ(41,"uxd-api-properties",14),n.TgZ(42,"tr",15),n._uU(43," Defines which layout group should be shown. This will show a layout from the specified group name and will take into account any size constraints if there are multiple layouts in that group. "),n.qZA(),n.qZA(),n.TgZ(44,"p"),n._uU(45," Inside the container element you should add all the various layouts you wish to have. A layout is defined by adding "),n.TgZ(46,"code"),n._uU(47,"*uxLayoutSwitcherItem"),n.qZA(),n._uU(48," as a structural directive to an element. The attribute value can be used to define several things by following the "),n.TgZ(49,"code"),n._uU(50,"LayoutSwitcherItem"),n.qZA(),n._uU(51," interface:\n"),n.qZA(),n.TgZ(52,"ul"),n.TgZ(53,"li"),n.TgZ(54,"code"),n._uU(55,"group"),n.qZA(),n._uU(56," - defines which layout group the layout should belong to. Each group can contain multiple layouts, in which case size constraints should be used to define when each layout should be shown. "),n.qZA(),n.TgZ(57,"li"),n.TgZ(58,"code"),n._uU(59,"minWidth"),n.qZA(),n._uU(60," - defines the minimum width required for this layout to be shown. "),n.qZA(),n.TgZ(61,"li"),n.TgZ(62,"code"),n._uU(63,"maxWidth"),n.qZA(),n._uU(64," - defines the maximum width allowed for this layout to be shown. "),n.qZA(),n.qZA(),n.TgZ(65,"p"),n._uU(66,"The following code can be used to create the example shown above:"),n.qZA(),n.TgZ(67,"ux-tabset",16),n.TgZ(68,"ux-tab",17),n._UZ(69,"uxd-snippet",18),n.qZA(),n.TgZ(70,"ux-tab",19),n._UZ(71,"uxd-snippet",18),n.qZA(),n.TgZ(72,"ux-tab",20),n._UZ(73,"uxd-snippet",18),n.qZA(),n.qZA()),2&s&&(n.xp6(2),n.Q6J("ngModel",a.group),n.xp6(2),n.Q6J("ngModel",a.group),n.xp6(3),n.Udp("width",a.width,"%"),n.Q6J("group",a.group),n.xp6(1),n.Q6J("uxLayoutSwitcherItem",a.layouts.table),n.xp6(1),n.Q6J("uxLayoutSwitcherItem",a.layouts.card),n.xp6(1),n.Q6J("uxLayoutSwitcherItem",a.layouts.cardstack),n.xp6(9),n.Q6J("value",a.width)("options",a.options),n.xp6(48),n.Q6J("minimal",!1),n.xp6(2),n.Q6J("content",a.snippets.compiled.appHtml),n.xp6(2),n.Q6J("content",a.snippets.compiled.appTs),n.xp6(2),n.Q6J("content",a.snippets.compiled.appCss))},directives:[P.G,B.lz,m.JJ,m.On,Ln.t,Hn.v,H.Z,Q.U,Qn.Pi,_.$,T.S,y.A,Z.i,f.j,r.sg],styles:[".layout-switcher-example[_ngcontent-%COMP%]{height:430px;overflow-y:auto}.layout-switcher-card-container[_ngcontent-%COMP%]   .layout-switcher-card[_ngcontent-%COMP%]{display:inline-block;width:calc(33% - 20px);height:115px;border:1px solid #e7eaec;margin:10px;padding:15px 10px;cursor:default;vertical-align:top}.layout-switcher-card-container[_ngcontent-%COMP%]   .layout-switcher-card[_ngcontent-%COMP%]:hover{background-color:#f5f5f5}.layout-switcher-card-stack-container[_ngcontent-%COMP%]   .layout-switcher-card-stack-card[_ngcontent-%COMP%]{border-left:1px solid #e7eaec;border-right:1px solid #e7eaec;border-bottom:1px solid #e7eaec;padding:10px}.layout-switcher-card-stack-container[_ngcontent-%COMP%]   .layout-switcher-card-stack-card[_ngcontent-%COMP%]:first-of-type{border-top:1px solid #e7eaec}.layout-switcher-card-stack-container[_ngcontent-%COMP%]   .layout-switcher-card-stack-card[_ngcontent-%COMP%]:hover{background-color:#f5f5f5}.dimension-slider[_ngcontent-%COMP%]{width:400px;margin-left:30px}"]}),R=(0,b.gn)([(0,v.cG)("ComponentsLayoutSwitchingComponent")],R);var Vn=o(14199),Yn=o(54790),Kn=o(94969);const Xn=["row"];function na(p,s){if(1&p){const a=n.EpF();n.TgZ(0,"tr",21,22),n.NdJ("keydown.arrowdown",function(t){const u=n.CHM(a),d=u.$implicit,g=u.index;return n.oxw().movedown(d,g,t)})("keydown.arrowup",function(t){const u=n.CHM(a),d=u.$implicit,g=u.index;return n.oxw().moveup(d,g,t)}),n.TgZ(2,"td",1),n._UZ(3,"ux-icon",23),n.qZA(),n.TgZ(4,"td"),n._uU(5),n.qZA(),n.TgZ(6,"td"),n._uU(7),n.qZA(),n.TgZ(8,"td"),n._uU(9),n.ALo(10,"date"),n.qZA(),n.TgZ(11,"td"),n._UZ(12,"ux-spark",24),n.qZA(),n.TgZ(13,"td",2),n._UZ(14,"ux-icon",25),n.qZA(),n.qZA()}if(2&p){const a=s.$implicit;n.zWS("aria-label","",a.document," by ",a.author,". Use arrow keys to reorder items."),n.Q6J("uxReorderableModel",a),n.xp6(5),n.Oqu(a.document),n.xp6(2),n.Oqu(a.author),n.xp6(2),n.Oqu(n.lcZ(10,10,a.date)),n.xp6(3),n.Q6J("value",a.completed)("inlineLabel",a.completed+"%"),n.xp6(2),n.Q6J("name",a.active?"checkmark":null),n.uIk("aria-label",a.active?"Approved":"Not approved")}}let O=class extends x.u{constructor(){super(o(88309)),this.data=[],this.playground={files:{"app.component.html":this.snippets.raw.appHtml,"app.component.ts":this.snippets.raw.appTs,"app.component.css":this.snippets.raw.appCss},modules:[{imports:["ReorderableModule","SparkModule"],library:"@ux-aspects/ux-aspects"}]};for(let s=0;s<10;s++)this.data.push({document:`Document ${s}`,author:chance.name(),date:chance.date({year:2018}),completed:chance.integer({min:10,max:100}),active:chance.bool()})}movedown(s,a,e){const t=Math.min(a+1,this.data.length-1);this.data[a]=Object.assign({},this.data[t]),this.data[t]=Object.assign({},s),e.preventDefault(),requestAnimationFrame(()=>{const u=this.rows.toArray()[t];u&&u.nativeElement.focus()})}moveup(s,a,e){const t=Math.max(a-1,0);this.data[a]=Object.assign({},this.data[t]),this.data[t]=Object.assign({},s),e.preventDefault(),requestAnimationFrame(()=>{const u=this.rows.toArray()[t];u&&u.nativeElement.focus()})}};function aa(p,s){if(1&p){const a=n.EpF();n.TgZ(0,"tr",43),n.NdJ("selectedChange",function(t){return n.CHM(a).$implicit.selected=t}),n.TgZ(1,"td",44),n.TgZ(2,"ux-checkbox",45),n.NdJ("valueChange",function(t){return n.CHM(a).$implicit.selected=t}),n.qZA(),n.qZA(),n.TgZ(3,"td"),n._uU(4),n.qZA(),n.TgZ(5,"td"),n._uU(6),n.qZA(),n.TgZ(7,"td"),n._uU(8),n.ALo(9,"date"),n.qZA(),n.qZA()}if(2&p){const a=s.$implicit;n.Q6J("uxSelectionItem",a)("selected",a.selected),n.uIk("aria-selected",a.selected),n.xp6(2),n.Q6J("value",a.selected),n.xp6(2),n.Oqu(a.name),n.xp6(2),n.Oqu(a.author),n.xp6(2),n.Oqu(n.lcZ(9,7,a.date))}}O.\u0275fac=function(s){return new(s||O)},O.\u0275cmp=n.Xpm({type:O,selectors:[["uxd-components-reorderable-table"]],viewQuery:function(s,a){if(1&s&&n.Gf(Xn,5),2&s){let e;n.iGM(e=n.CRH())&&(a.rows=e)}},features:[n.qOj],decls:121,vars:6,consts:[[1,"table","table-hover"],[1,"drag-handle-column"],[1,"text-center"],["uxReorderable","",3,"reorderableModel","reorderableModelChange"],["class","reorderable-row","uxFocusIndicator","","tabindex","0",3,"uxReorderableModel","keydown.arrowdown","keydown.arrowup",4,"ngFor","ngForOf"],["tableTitle","Inputs"],["uxd-api-property","","name","reorderableModel","type","any[]"],["uxd-api-property","","name","reorderableGroup","type","string"],["uxd-api-property","","name","reorderingDisabled","type","boolean","defaultValue","false"],["tableTitle","Outputs"],["uxd-api-property","","name","reorderableModelChange","type","any[]"],["uxd-api-property","","name","reorderStart","type","ReorderEvent"],["uxd-api-property","","name","reorderCancel","type","ReorderEvent"],["uxd-api-property","","name","reorderEnd","type","ReorderEvent"],["uxd-api-property","","name","element","type","Element"],["uxd-api-property","","name","model","type","any"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","Typescript"],["heading","CSS"],["uxFocusIndicator","","tabindex","0",1,"reorderable-row",3,"uxReorderableModel","keydown.arrowdown","keydown.arrowup"],["row",""],["uxReorderableHandle","","name","more","rotate","90"],["theme","chart2","barHeight","3",3,"value","inlineLabel"],[3,"name"]],template:function(s,a){1&s&&(n.TgZ(0,"table",0),n.TgZ(1,"thead"),n.TgZ(2,"tr"),n._UZ(3,"th",1),n.TgZ(4,"th"),n._uU(5,"Name"),n.qZA(),n.TgZ(6,"th"),n._uU(7,"Author"),n.qZA(),n.TgZ(8,"th"),n._uU(9,"Date Modified"),n.qZA(),n.TgZ(10,"th"),n._uU(11,"Work Completed"),n.qZA(),n.TgZ(12,"th",2),n._uU(13,"Status"),n.qZA(),n.qZA(),n.qZA(),n.TgZ(14,"tbody",3),n.NdJ("reorderableModelChange",function(t){return a.data=t}),n.YNc(15,na,15,12,"tr",4),n.qZA(),n.qZA(),n._UZ(16,"hr"),n.TgZ(17,"p"),n._uU(18," Table rows can be reordered by using the "),n.TgZ(19,"code"),n._uU(20,"uxReorderable"),n.qZA(),n._uU(21," directive. The above example demonstrates how a table can be reordered by adding a handle to each row. The "),n.TgZ(22,"code"),n._uU(23,"uxReorderable"),n.qZA(),n._uU(24," directive can be used in conjunction with "),n.TgZ(25,"code"),n._uU(26,"ngModel"),n.qZA(),n._uU(27," so additional forms of reordering can be implemented, for example, using the keyboard.\n"),n.qZA(),n.TgZ(28,"p"),n._uU(29," The "),n.TgZ(30,"code"),n._uU(31,"uxReorderable"),n.qZA(),n._uU(32," directive is not restricted to use on tables, it can be used with any list of elements.\n"),n.qZA(),n.TgZ(33,"p"),n._uU(34," By default each immediate child of "),n.TgZ(35,"code"),n._uU(36,"uxReorderable"),n.qZA(),n._uU(37," will become draggable, however you can specify an element within the item to be the drag handle which the user will have to drag to move the item. A handle can be specified by adding the "),n.TgZ(38,"code"),n._uU(39,"uxReorderableHandle"),n.qZA(),n._uU(40," to the element that should be dragged to move the object.\n"),n.qZA(),n.TgZ(41,"p"),n._uU(42," The following properties can be used on the "),n.TgZ(43,"code"),n._uU(44,"uxReorderable"),n.qZA(),n._uU(45," directive:\n"),n.qZA(),n.TgZ(46,"uxd-api-properties",5),n.TgZ(47,"tr",6),n.TgZ(48,"p"),n._uU(49," This property can be used to provide the "),n.TgZ(50,"code"),n._uU(51,"uxReorderable"),n.qZA(),n._uU(52," directive with a dataset that represents the items that can be reordered. This can used as a two way binding which will ensure the dataset always reflects the current order of items in the list. Each list item should have a "),n.TgZ(53,"code"),n._uU(54,"uxReorderableModel"),n.qZA(),n._uU(55," directive applied, with a value indicating which item in the dataset it represents. "),n.qZA(),n.TgZ(56,"p"),n._uU(57," If the list is generated using "),n.TgZ(58,"code"),n._uU(59,"ngFor"),n.qZA(),n._uU(60," this property should be bound to the same dataset. "),n.qZA(),n.TgZ(61,"p"),n._uU(62," If there is no dataset representing the items then this property is not required. "),n.qZA(),n.qZA(),n.TgZ(63,"tr",7),n._uU(64," The name of the reorderable group which this container belongs to. "),n.TgZ(65,"code"),n._uU(66,"uxReorderable"),n.qZA(),n._uU(67," elements which belong to the same group can have items dragged between them. Only required if multiple drop containers are being created. "),n.qZA(),n.TgZ(68,"tr",8),n._uU(69," Determines if reordering is disabled. "),n.qZA(),n.qZA(),n.TgZ(70,"uxd-api-properties",9),n.TgZ(71,"tr",10),n._uU(72," This event will be triggered when the order changes and will contain an updated dataset containing the items in their current order. This should be used when the list of items is generated using "),n.TgZ(73,"code"),n._uU(74,"ngFor"),n.qZA(),n._uU(75," to ensure the data remains in the same order for both the "),n.TgZ(76,"code"),n._uU(77,"uxReorderable"),n.qZA(),n._uU(78," and "),n.TgZ(79,"code"),n._uU(80,"ngFor"),n.qZA(),n._uU(81," directives. "),n.qZA(),n.TgZ(82,"tr",11),n._uU(83," This event is triggered when a user begins dragging an item. The event will contain the element being moved. "),n.qZA(),n.TgZ(84,"tr",12),n._uU(85," This event is triggered when the item being dragged is returned to the same location as it began. The event will contain the element that was being moved. "),n.qZA(),n.TgZ(86,"tr",13),n._uU(87," This event is triggered when a user has relocated an item. The event will contain the element that was moved. "),n.qZA(),n.qZA(),n.TgZ(88,"p"),n._uU(89," The "),n.TgZ(90,"code"),n._uU(91,"ReorderEvent"),n.qZA(),n._uU(92," interface is as follows:\n"),n.qZA(),n.TgZ(93,"uxd-api-properties"),n.TgZ(94,"tr",14),n._uU(95," The element that the action is or was being performed on. "),n.qZA(),n.TgZ(96,"tr",15),n._uU(97," The data associated with the element being dragged. This will be null if no "),n.TgZ(98,"code"),n._uU(99,"uxReorderableModel"),n.qZA(),n._uU(100," was specified on the element. "),n.qZA(),n.qZA(),n.TgZ(101,"p"),n._uU(102," This directive dynamically applies the following classes to assist with styling:\n"),n.qZA(),n.TgZ(103,"ul"),n.TgZ(104,"li"),n.TgZ(105,"code"),n._uU(106,"ux-reorderable-moving"),n.qZA(),n._uU(107," - this is set on a draggable item while it is being dragged."),n.qZA(),n.TgZ(108,"li"),n.TgZ(109,"code"),n._uU(110,"ux-reorderable-container-moving"),n.qZA(),n._uU(111," - this is set on the container(s) while an item is being dragged."),n.qZA(),n.qZA(),n.TgZ(112,"p"),n._uU(113," The following code can be used to create the example above:\n"),n.qZA(),n.TgZ(114,"ux-tabset",16),n.TgZ(115,"ux-tab",17),n._UZ(116,"uxd-snippet",18),n.qZA(),n.TgZ(117,"ux-tab",19),n._UZ(118,"uxd-snippet",18),n.qZA(),n.TgZ(119,"ux-tab",20),n._UZ(120,"uxd-snippet",18),n.qZA(),n.qZA()),2&s&&(n.xp6(14),n.Q6J("reorderableModel",a.data),n.xp6(1),n.Q6J("ngForOf",a.data),n.xp6(99),n.Q6J("minimal",!1),n.xp6(2),n.Q6J("content",a.snippets.compiled.appHtml),n.xp6(2),n.Q6J("content",a.snippets.compiled.appTs),n.xp6(2),n.Q6J("content",a.snippets.compiled.appCss))},directives:[Vn.i,r.sg,_.$,T.S,y.A,Z.i,f.j,N.N,Yn.H,q.o,Kn.O,J.g],pipes:[r.uU],styles:[".reorderable-row[_ngcontent-%COMP%]{background-color:#fff}.cdk-drag.cdk-drag-placeholder.reorderable-row[_ngcontent-%COMP%]{background-color:#00a7a233;box-sizing:border-box;outline:2px dashed #00a7a2}.cdk-drag-placeholder.reorderable-row[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{opacity:0}.cdk-drag-preview.reorderable-row[_ngcontent-%COMP%]{box-sizing:border-box;border-radius:4px;padding-top:8px;background-color:#e8edee}.table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover   .drag-handle-column[_ngcontent-%COMP%]{color:#dcdedf}.drag-handle-column[_ngcontent-%COMP%]{width:48px;text-align:center;color:#dcdedf;transition:color .25s ease-in-out;cursor:move}.table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover   .drag-handle-column[_ngcontent-%COMP%]:hover{color:#bdbec0}"],changeDetection:0}),O=(0,b.gn)([(0,v.cG)("ComponentsReorderableTableComponent")],O);let I=class extends x.u{constructor(){super(o(36563)),this.data=[],this.selection=[],this.mode="simple",this.playground={files:{"app.component.html":this.snippets.raw.appHtml,"app.component.ts":this.snippets.raw.appTs,"app.component.css":this.snippets.raw.appCss},modules:[{imports:["SelectionModule","CheckboxModule","RadioButtonModule","AccordionModule"],library:"@ux-aspects/ux-aspects"}]};for(let s=0;s<8;s++)this.data.push({name:`Document ${s+1}`,author:chance.name(),date:chance.date(),selected:!1})}};function sa(p,s){if(1&p){const a=n.EpF();n.TgZ(0,"li"),n.TgZ(1,"a",16),n.NdJ("click",function(){const u=n.CHM(a).$implicit;return n.oxw(2).sort(u)})("keydown.enter",function(){const u=n.CHM(a).$implicit,d=n.oxw(2),g=n.MAs(6);return d.sort(u),g.focus()}),n._UZ(2,"ux-icon",17),n.TgZ(3,"span",18),n._uU(4),n.qZA(),n.qZA(),n.qZA()}if(2&p){const a=s.$implicit,e=n.oxw(2);n.xp6(2),n.ekj("invisible",a!==e.selected),n.xp6(2),n.Oqu(a)}}function ta(p,s){if(1&p&&(n.TgZ(0,"ul",14),n.YNc(1,sa,5,3,"li",15),n.qZA()),2&p){const a=n.oxw();n.xp6(1),n.Q6J("ngForOf",a.options)}}I.\u0275fac=function(s){return new(s||I)},I.\u0275cmp=n.Xpm({type:I,selectors:[["uxd-components-selection"]],features:[n.qOj],decls:190,vars:11,consts:[["aria-multiselectable","true",1,"table","table-hover"],[3,"uxSelection","mode","uxSelectionChange"],["select","ux-selection"],["class","clickable",3,"uxSelectionItem","selected","selectedChange",4,"ngFor","ngForOf"],[1,"btn","btn-primary","m-r-sm",3,"click"],[1,"btn","btn-primary",3,"click"],[1,"row","uxd-customize-example"],[1,"col-md-12"],["heading","Customize Example...",1,"accordion-chevron"],[1,"row","uxd-customize-row"],["option","simple",3,"ngModel","ngModelChange"],["option","row",3,"ngModel","ngModelChange"],["option","row-alt",3,"ngModel","ngModelChange"],["tableTitle","Inputs"],["uxd-api-property","","name","uxSelection","type","any[]"],["uxd-api-property","","name","mode","type","'simple' | 'row' | 'row-alt' | SelectionStrategy","defaultValue","'simple'"],["uxd-api-property","","name","disabled","type","boolean"],["uxd-api-property","","name","clickSelection","type","boolean","defaultValue","true"],["uxd-api-property","","name","keyboardSelection","type","boolean","defaultValue","true"],["uxd-api-property","","name","selectionItems","type","any[]"],["tableTitle","Outputs"],["uxd-api-property","","name","uxSelectionChange","type","any[]"],["tableTitle","Functions"],["uxd-api-property","","name","selectAll"],["uxd-api-property","","name","deselectAll"],["uxd-api-property","","name","uxSelectionItem","type","any",3,"required"],["uxd-api-property","","name","uxSelectionDisabled","type","boolean"],["uxd-api-property","","name","selected","type","boolean"],["uxd-api-property","","name","selectedChange","type","boolean"],["uxd-api-property","","name","select"],["uxd-api-property","","name","deselect"],["tableTitle","SelectionStrategy"],["uxd-api-property","","name","mousedown","args","event: MouseEvent, data: any"],["uxd-api-property","","name","click","args","event: MouseEvent, data: any"],["uxd-api-property","","name","keydown","args","event: KeyboardEvent, data: any"],["uxd-api-property","","name","select","args","...data: any[]"],["uxd-api-property","","name","toggle","args","...data: any[]"],["uxd-api-property","","name","deselect","args","...data: any[]"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"],["heading","CSS"],[1,"clickable",3,"uxSelectionItem","selected","selectedChange"],[1,"checkbox-column"],["tabindex","-1","aria-hidden","true",1,"m-b-nil",3,"value","valueChange"]],template:function(s,a){if(1&s){const e=n.EpF();n.TgZ(0,"table",0),n.TgZ(1,"thead"),n.TgZ(2,"tr"),n._UZ(3,"th"),n.TgZ(4,"th"),n._uU(5,"Document"),n.qZA(),n.TgZ(6,"th"),n._uU(7,"Author"),n.qZA(),n.TgZ(8,"th"),n._uU(9,"Created Date"),n.qZA(),n.qZA(),n.qZA(),n.TgZ(10,"tbody",1,2),n.NdJ("uxSelectionChange",function(u){return a.selection=u}),n.YNc(12,aa,10,9,"tr",3),n.qZA(),n.qZA(),n.TgZ(13,"button",4),n.NdJ("click",function(){return n.CHM(e),n.MAs(11).selectAll()}),n._uU(14,"Select All"),n.qZA(),n.TgZ(15,"button",5),n.NdJ("click",function(){return n.CHM(e),n.MAs(11).deselectAll()}),n._uU(16,"Deselect All"),n.qZA(),n._UZ(17,"hr"),n.TgZ(18,"div",6),n.TgZ(19,"div",7),n.TgZ(20,"ux-accordion"),n.TgZ(21,"ux-accordion-panel",8),n.TgZ(22,"div",9),n.TgZ(23,"div",7),n.TgZ(24,"label"),n._uU(25,"mode"),n.qZA(),n.TgZ(26,"ux-radio-button",10),n.NdJ("ngModelChange",function(u){return a.mode=u}),n._uU(27,"simple"),n.qZA(),n.TgZ(28,"ux-radio-button",11),n.NdJ("ngModelChange",function(u){return a.mode=u}),n._uU(29,"row"),n.qZA(),n.TgZ(30,"ux-radio-button",12),n.NdJ("ngModelChange",function(u){return a.mode=u}),n._uU(31,"row-alt"),n.qZA(),n.qZA(),n.qZA(),n.qZA(),n.qZA(),n.qZA(),n.qZA(),n.TgZ(32,"p"),n._uU(33," The "),n.TgZ(34,"code"),n._uU(35,"uxSelection"),n.qZA(),n._uU(36," directive can be used to allow items to easily be selected and deselected. This is particularly useful in tables where rows can be selected to perform actions on specific items. The "),n.TgZ(37,"code"),n._uU(38,"uxSelection"),n.qZA(),n._uU(39," directive should be added to the container element, for example a "),n.TgZ(40,"code"),n._uU(41,"table"),n.qZA(),n._uU(42,".\n"),n.qZA(),n.TgZ(43,"p"),n._uU(44," Each selectable item should be a child element with the "),n.TgZ(45,"code"),n._uU(46,"uxSelectionItem"),n.qZA(),n._uU(47," directive applied to it.\n"),n.qZA(),n.TgZ(48,"p"),n._uU(49," Each selectable item will get a "),n.TgZ(50,"code"),n._uU(51,"ux-selection-focused"),n.qZA(),n._uU(52," class applied when the item receives keyboard focus and a "),n.TgZ(53,"code"),n._uU(54,"ux-selection-selected"),n.qZA(),n._uU(55," class when the item becomes selected. These can be used to customize the appearance of the items in their various states.\n"),n.qZA(),n.TgZ(56,"p"),n._uU(57," The following can be used to interact with and customize the behavior of the "),n.TgZ(58,"code"),n._uU(59,"uxSelection"),n.qZA(),n._uU(60," directive.\n"),n.qZA(),n.TgZ(61,"uxd-api-properties",13),n.TgZ(62,"tr",14),n._uU(63," Defines the items that should be selected. "),n.qZA(),n.TgZ(64,"tr",15),n._uU(65," Defines the selection behavior. The following modes can be used: "),n.TgZ(66,"ul"),n.TgZ(67,"li"),n.TgZ(68,"code"),n._uU(69,"simple"),n.qZA(),n._uU(70," - This allows clicking on an item to toggle its selected state. It also provides keyboard navigation using the arrow keys and toggling using the spacebar key. "),n.qZA(),n.TgZ(71,"li"),n.TgZ(72,"code"),n._uU(73,"row"),n.qZA(),n._uU(74," - This allows more complex selection behavior. Clicking on an item will select only that item and deselect all others. Multiple items can be selected by "),n.TgZ(75,"code"),n._uU(76,"ctrl"),n.qZA(),n._uU(77," clicking on items, and groups of items can be selected by "),n.TgZ(78,"code"),n._uU(79,"shift"),n.qZA(),n._uU(80," clicking. Keyboard navigation is also provided using the arrow keys and spacebar to toggle selection and "),n.TgZ(81,"code"),n._uU(82,"ctrl"),n.qZA(),n._uU(83," and "),n.TgZ(84,"code"),n._uU(85,"shift"),n.qZA(),n._uU(86," support is also available for multiple selection. "),n.qZA(),n.TgZ(87,"li"),n.TgZ(88,"code"),n._uU(89,"row-alt"),n.qZA(),n._uU(90," - This is similar to "),n.TgZ(91,"code"),n._uU(92,"row"),n.qZA(),n._uU(93," mode, except that the cursor keys move the selection as well as the focus. Holding "),n.TgZ(94,"code"),n._uU(95,"ctrl"),n.qZA(),n._uU(96," with the cursor keys allows the focus to be moved without affecting the selection. "),n.qZA(),n.qZA(),n.TgZ(97,"p"),n._uU(98," Alternatively, custom selection behavior can be defined by defining a class which extends "),n.TgZ(99,"code"),n._uU(100,"SelectionStrategy"),n.qZA(),n._uU(101,", and providing an instance of the custom class to this property. See below for details of the "),n.TgZ(102,"code"),n._uU(103,"SelectionStrategy"),n.qZA(),n._uU(104," class. "),n.qZA(),n.qZA(),n.TgZ(105,"tr",16),n._uU(106," Can be used to enabled/disable selection behavior. "),n.qZA(),n.TgZ(107,"tr",17),n._uU(108," Can be used to enable/disable click selection on items. This can be used to manually control the selection of an item, for example, binding the selection state to a checkbox. "),n.qZA(),n.TgZ(109,"tr",18),n._uU(110," Can be used to enable/disable keyboard navigation on items. Use this if you wish to provide custom keyboard controls for selection. "),n.qZA(),n.TgZ(111,"tr",19),n._uU(112," The full set of selection items. Only needed if the full set of "),n.TgZ(113,"code"),n._uU(114,"uxSelectionItem"),n.qZA(),n._uU(115,"s is not available, e.g. within a virtual scroll container. "),n.qZA(),n.qZA(),n.TgZ(116,"uxd-api-properties",20),n.TgZ(117,"tr",21),n._uU(118," This event will be triggered when there is a change to the selected items. It will contain an array of the currently selected items. "),n.qZA(),n.qZA(),n.TgZ(119,"uxd-api-properties",22),n.TgZ(120,"tr",23),n._uU(121," This function can be called to select all "),n.TgZ(122,"code"),n._uU(123,"uxSelectionItem"),n.qZA(),n._uU(124," elements within the directive. "),n.qZA(),n.TgZ(125,"tr",24),n._uU(126," This function can be called to deselect all "),n.TgZ(127,"code"),n._uU(128,"uxSelectionItem"),n.qZA(),n._uU(129," elements within the directive. "),n.qZA(),n.qZA(),n.TgZ(130,"p"),n._uU(131," The following can be used to interact with and customize the behavior of the "),n.TgZ(132,"code"),n._uU(133,"uxSelectionItem"),n.qZA(),n._uU(134," directive.\n"),n.qZA(),n.TgZ(135,"uxd-api-properties",13),n.TgZ(136,"tr",25),n._uU(137," Defines the data associated with this item. "),n.qZA(),n.TgZ(138,"tr",26),n._uU(139," Defines if this specific item can be selected. "),n.qZA(),n.TgZ(140,"tr",27),n._uU(141," Defines whether or not this item is currently selected. "),n.qZA(),n.qZA(),n.TgZ(142,"uxd-api-properties",20),n.TgZ(143,"tr",28),n._uU(144," This event will be triggered when this item becomes selected. The event will contain the boolean value representing its selected state. "),n.qZA(),n.qZA(),n.TgZ(145,"uxd-api-properties",22),n.TgZ(146,"tr",29),n._uU(147," This function can be called to select this item. "),n.qZA(),n.TgZ(148,"tr",30),n._uU(149," This function can be called to deselect this item. "),n.qZA(),n.qZA(),n.TgZ(150,"p"),n._uU(151," The "),n.TgZ(152,"code"),n._uU(153,"SelectionStrategy"),n.qZA(),n._uU(154," class, which can be subclassed to provide custom selection behavior, has the following interface:\n"),n.qZA(),n.TgZ(155,"uxd-api-properties",31),n.TgZ(156,"tr",32),n._uU(157," Called when the mousedown event occurs on the item representing "),n.TgZ(158,"code"),n._uU(159,"data"),n.qZA(),n._uU(160,". Override this function to provide custom behavior. "),n.qZA(),n.TgZ(161,"tr",33),n._uU(162," Called when the click event occurs on the item representing "),n.TgZ(163,"code"),n._uU(164,"data"),n.qZA(),n._uU(165,". Override this function to provide custom behavior. "),n.qZA(),n.TgZ(166,"tr",34),n._uU(167," Called when the keydown event occurs on the item representing "),n.TgZ(168,"code"),n._uU(169,"data"),n.qZA(),n._uU(170,". Override this function to provide custom behavior. "),n.qZA(),n.TgZ(171,"tr",35),n._uU(172," Select the item(s). "),n.qZA(),n.TgZ(173,"tr",36),n._uU(174," Toggle the selected state of the item(s). "),n.qZA(),n.TgZ(175,"tr",37),n._uU(176," Deselect the item(s). "),n.qZA(),n.TgZ(177,"tr",23),n._uU(178," Select all items. "),n.qZA(),n.TgZ(179,"tr",24),n._uU(180," Deselect all items. "),n.qZA(),n.qZA(),n.TgZ(181,"p"),n._uU(182," The following code can be used to create the example above:\n"),n.qZA(),n.TgZ(183,"ux-tabset",38),n.TgZ(184,"ux-tab",39),n._UZ(185,"uxd-snippet",40),n.qZA(),n.TgZ(186,"ux-tab",41),n._UZ(187,"uxd-snippet",40),n.qZA(),n.TgZ(188,"ux-tab",42),n._UZ(189,"uxd-snippet",40),n.qZA(),n.qZA()}2&s&&(n.xp6(10),n.Q6J("uxSelection",a.selection)("mode",a.mode),n.xp6(2),n.Q6J("ngForOf",a.data),n.xp6(14),n.Q6J("ngModel",a.mode),n.xp6(2),n.Q6J("ngModel",a.mode),n.xp6(2),n.Q6J("ngModel",a.mode),n.xp6(106),n.Q6J("required",!0),n.xp6(47),n.Q6J("minimal",!1),n.xp6(2),n.Q6J("content",a.snippets.compiled.appHtml),n.xp6(2),n.Q6J("content",a.snippets.compiled.appTs),n.xp6(2),n.Q6J("content",a.snippets.compiled.appCss))},directives:[W.p,r.sg,P.G,H.Z,Q.U,G._,m.JJ,m.On,_.$,T.S,y.A,Z.i,f.j,$.Q,Y.b],pipes:[r.uU],styles:[".table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]{outline:none}.clickable[_ngcontent-%COMP%]{outline:none}"]}),I=(0,b.gn)([(0,v.cG)("ComponentsSelectionComponent")],I);let z=class extends x.u{constructor(){super(o(42618)),this.options=["Date Modified","Name","Author"],this.selected=this.options[0],this.descending=!0,this.playground={files:{"app.component.html":this.snippets.raw.appHtml,"app.component.ts":this.snippets.raw.appTs},modules:[{imports:["BsDropdownModule"],library:"ngx-bootstrap",forRoot:!0},{imports:["MenuNavigationModule"],library:"@ux-aspects/ux-aspects"}]}}sort(s){this.selected=s}};z.\u0275fac=function(s){return new(s||z)},z.\u0275cmp=n.Xpm({type:z,selectors:[["uxd-components-sorting"]],features:[n.qOj],decls:22,vars:9,consts:[[1,"sorter-container"],[1,"sorter-title"],["uxMenuNavigation","","dropdown","",1,"btn-group","filter","sort-direction-toggle",3,"toggleButton","navigatedOut"],["dropdown","bs-dropdown"],["uxMenuNavigationToggle","","dropdownToggle","",1,"btn","dropdown-toggle","filter-dropdown",3,"menuOpen","menuOpenChange"],["toggle","uxMenuNavigationToggle"],["name","down"],["class","dropdown-menu","role","menu",4,"dropdownMenu"],["uxFocusIndicator","",1,"sort-icon","text-muted",3,"click"],[3,"name"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"],["role","menu",1,"dropdown-menu"],[4,"ngFor","ngForOf"],["tabindex","-1","role","menuitem","uxMenuNavigationItem","",3,"click","keydown.enter"],["name","checkmark",1,"sorter-icon"],[1,"sorter-text"]],template:function(s,a){if(1&s){const e=n.EpF();n.TgZ(0,"div",0),n.TgZ(1,"span",1),n._uU(2,"Sort by"),n.qZA(),n.TgZ(3,"div",2,3),n.NdJ("navigatedOut",function(){return n.CHM(e),n.MAs(6).focus()}),n.TgZ(5,"button",4,5),n.NdJ("menuOpenChange",function(u){return n.CHM(e),n.MAs(4).isOpen=u}),n._uU(7),n._UZ(8,"ux-icon",6),n.qZA(),n.YNc(9,ta,2,1,"ul",7),n.TgZ(10,"button",8),n.NdJ("click",function(){return a.descending=!a.descending}),n._UZ(11,"ux-icon",9),n.qZA(),n.qZA(),n.qZA(),n._UZ(12,"hr"),n.TgZ(13,"p"),n._uU(14," A sort dropdown is commonly used to allow the user to choose how they would like a dataset to be ordered. It should be used in cases where column sorting is not applicable, such as a list of cards. Additionally a direction toggle may also be used to indicate whether or not the data should in ascending or descending order.\n"),n.qZA(),n.TgZ(15,"p"),n._uU(16," Use the following code to create the example above:\n"),n.qZA(),n.TgZ(17,"ux-tabset",10),n.TgZ(18,"ux-tab",11),n._UZ(19,"uxd-snippet",12),n.qZA(),n.TgZ(20,"ux-tab",13),n._UZ(21,"uxd-snippet",12),n.qZA(),n.qZA()}if(2&s){const e=n.MAs(4),t=n.MAs(6);n.xp6(3),n.Q6J("toggleButton",t),n.xp6(2),n.Q6J("menuOpen",e.isOpen),n.xp6(2),n.hij(" ",a.selected," "),n.xp6(3),n.zWS("aria-label","",a.descending?"Descending":"Ascending"," sort applied, activate to apply a ",a.descending?"ascending":"descending"," sort"),n.xp6(1),n.Q6J("name",a.descending?"descend":"ascend"),n.xp6(6),n.Q6J("minimal",!1),n.xp6(2),n.Q6J("content",a.snippets.compiled.appHtml),n.xp6(2),n.Q6J("content",a.snippets.compiled.appTs)}},directives:[an.B,C.TO,nn.k,C.Mq,q.o,C.Hz,N.N,y.A,Z.i,f.j,r.sg,sn.l],encapsulation:2,changeDetection:0}),z=(0,b.gn)([(0,v.cG)("ComponentsSortingComponent")],z);const pa=[U,D,S,O,tn,R,F,M,I,z,A,w],ea=[{path:"**",component:en.R,data:{category:L.N.resolveCategoryData(L.I.Components,"Tables")}}];let oa=(()=>{class p{constructor(a,e){e.registerResolver(a,pa)}}return p.\u0275fac=function(a){return new(a||p)(n.LFG(n._Vd),n.LFG(L.N))},p.\u0275mod=n.oAB({type:p}),p.\u0275inj=n.cJS({imports:[[k.rt,l.jKR,l.fxp,C.mr,B.Fq,l.nDK,l.htR,r.ez,pn.N,l.iLy,l.yWj,m.u5,l.BJI,l.QX1,l.n_Q,l.$P7,l.cc7,l._d0,i.Bz.forChild(ea),l.I95,l.JHo,l.tMd,l.U$I,l.f_l,l.z8t]]}),p})()}}]);
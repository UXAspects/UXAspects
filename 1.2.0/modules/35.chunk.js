webpackJsonp([35],{1517:function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o=function(){function t(t,n,e,o,a){this.snippets={compiled:{},raw:{}},this.loadSnippetsFromRequireContext(this.snippets.raw,a),this.snippets.compiled=this.snippets.raw}return t.prototype.loadSnippetsFromRequireContext=function(t,n){n&&n.keys().forEach(function(e){var o=e.replace("./","").replace(/\W+(\w)/g,function(t){return t[1].toUpperCase()});t[o]=n(e)})},t}();n.BaseDocumentationSection=o},1675:function(t,n,e){function o(t){return e(a(t))}function a(t){var n=i[t];if(!(n+1))throw new Error("Cannot find module '"+t+"'.");return n}var i={"./contacts-contacts.js":2548,"./contacts-labels.js":2549,"./contacts-popover.html":312,"./contacts.css":2550,"./contacts.html":2551,"./contacts.js":2552};o.keys=function(){return Object.keys(i)},o.resolve=a,t.exports=o,o.id=1675},1819:function(t,n,e){"use strict";var o=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)n.hasOwnProperty(e)&&(t[e]=n[e])};return function(n,e){function o(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)}}(),a=this&&this.__decorate||function(t,n,e,o){var a,i=arguments.length,r=i<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,e):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,n,e,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(r=(i<3?a(r):i>3?a(n,e,r):a(n,e))||r);return i>3&&r&&Object.defineProperty(n,e,r),r},i=this&&this.__metadata||function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)};Object.defineProperty(n,"__esModule",{value:!0});var r=e(0),c=e(1517),s=e(285),l=function(t){function n(){var n=t.call(this,null,null,null,null,e(1675))||this;return n.codepen={html:n.snippets.raw.contactsHtml,htmlAttributes:{"ng-controller":"ContactsDemoCtrl as vm"},htmlTemplates:[{id:"contacts-popover.html",content:n.snippets.raw.contactsPopoverHtml}],css:[n.snippets.raw.contactsCss],js:[n.snippets.raw.contactsJs]},n}return o(n,t),n}(c.BaseDocumentationSection);l=a([r.Component({selector:"uxd-contacts-ng1",template:e(2176)}),s.DocumentationSectionComponent("ComponentsContactsNg1Component"),i("design:paramtypes",[])],l),n.ComponentsContactsNg1Component=l},1820:function(t,n,e){"use strict";var o=this&&this.__decorate||function(t,n,e,o){var a,i=arguments.length,r=i<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,e):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,n,e,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(r=(i<3?a(r):i>3?a(n,e,r):a(n,e))||r);return i>3&&r&&Object.defineProperty(n,e,r),r};Object.defineProperty(n,"__esModule",{value:!0});var a=e(0),i=e(285),r=function(){function t(){this.htmlCode=e(2555),this.cssCode=e(2554),this.javascriptCode=e(2556),this.modalHtmlCode=e(158),this.modalJavascriptCode=e(2553),this.modalItemHtmlCode=e(313),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"ContactsOverflowDemoCtrl as vm"},htmlTemplates:[{id:"contacts-overflow-modal.html",content:this.modalHtmlCode},{id:"contacts-overflow-modal-item.html",content:this.modalItemHtmlCode}],css:[this.cssCode],js:[this.javascriptCode,this.modalJavascriptCode]}}return t}();r=o([a.Component({selector:"uxd-contacts-overflow-ng1",template:e(2177),styles:[e(3060)],encapsulation:a.ViewEncapsulation.None}),i.DocumentationSectionComponent("ComponentsContactsOverflowNg1Component")],r),n.ComponentsContactsOverflowNg1Component=r},1821:function(t,n,e){"use strict";var o=this&&this.__decorate||function(t,n,e,o){var a,i=arguments.length,r=i<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,e):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,n,e,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(r=(i<3?a(r):i>3?a(n,e,r):a(n,e))||r);return i>3&&r&&Object.defineProperty(n,e,r),r},a=this&&this.__metadata||function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)};Object.defineProperty(n,"__esModule",{value:!0});var i=e(0),r=e(19),c=e(286),s=e(150),l=e(287),d=e(1819),p=e(1820),m=e(289),u=e(288),h=[d.ComponentsContactsNg1Component,p.ComponentsContactsOverflowNg1Component],f=[{path:"**",component:l.DocumentationCategoryComponent,data:{category:s.ResolverService.resolveCategoryData(s.DocumentationPage.Components,"Contacts")}}],v=function(){function t(t,n){n.registerResolver(t)}return t}();v=o([i.NgModule({imports:[m.WrappersModule,u.TabsModule,c.DocumentationComponentsModule,r.RouterModule.forChild(f)],exports:h,declarations:h,entryComponents:h}),a("design:paramtypes",[i.ComponentFactoryResolver,s.ResolverService])],v),n.ComponentsContactsModule=v},2084:function(t,n,e){n=t.exports=e(9)(void 0),n.push([t.i,".contact-overflow-scroll-pane {\n  height: 300px;\n}\n.contact-overflow-modal-item-row {\n  padding: 5px 8px;\n  border-bottom: 1px solid lightgray;\n  margin-right: 7px;\n}\n.contact-overflow-modal-item-label {\n  width: 30px;\n  text-align: center;\n  color: #fff;\n  background-color: #835996;\n  padding: 2px 0;\n}\n",""])},2176:function(t,n){t.exports='<uxd-contacts-wrapper></uxd-contacts-wrapper>\n\n<hr>\n\n<p>The Contacts control can be used to display a shorthand notation for the participants in a communication. The participant’s name, short name or initials can be shown, along with an organization, and individuals belonging to the same organization can be grouped together. The status of a contact, active or passive, can be displayed to indicate their involvement in a conversation. Organizations can be labelled as “External” or “Risk”.</p>\n\n<p>To use the Contacts control use the <code>contact-group</code> directive. The full list of configuration attributes for this control is defined below:</p>\n\n<div class="demo-attributes table-responsive">\n<table class="table m-t">\n  <tbody><tr>\n    <th>Name</th>\n    <th>Type</th>\n    <th>Binding</th>\n    <th>Description</th>\n    <th>Optional</th>\n  </tr>\n  <tr>\n    <td class="attribute">contacts</td>\n    <td>array</td>\n    <td>variable</td>\n    <td>An array of contacts to display (format defined below) or a single contact object.</td>\n    <td>false</td>\n  </tr>\n  <tr>\n    <td class="attribute">organization</td>\n    <td>object</td>\n    <td>variable</td>\n    <td>An object defining the organization (format defined below).</td>\n    <td>false</td>\n  </tr>\n  <tr>\n    <td class="attribute">size</td>\n    <td>string</td>\n    <td>variable</td>\n    <td>The size of the control, either <code>medium</code> or <code>small</code>.</td>\n    <td>false</td>\n  </tr>\n  <tr>\n    <td class="attribute">colors</td>\n    <td>object</td>\n    <td>variable</td>\n    <td>An object mapping the <code>primary</code>, <code>secondary</code>, <code>active</code>, and <code>passive</code> colors in #HTML format. The primary color will be used as the background for the contact. We recommend you use colors from the <a routerLink="/css/color-palette" fragment="color-palette">Color Palette</a>.</td>\n    <td>false</td>\n  </tr>\n  <tr>\n    <td class="attribute">max-contacts</td>\n    <td>number</td>\n    <td>literal</td>\n    <td>The maximum number of contacts to display. The remainder will be condensed into an overflow segment.</td>\n    <td>true</td>\n  </tr>\n  <tr>\n    <td class="attribute">overflow-click</td>\n    <td>function</td>\n    <td>variable</td>\n    <td>Handler for the click event in the overflow segment.</td>\n    <td>true</td>\n  </tr>\n</tbody></table>\n</div>\n\n<h4>Contact Object</h4>\n\n<p>Contacts can be supplied either as a single object, or more typically as an array of objects.</p>\n<div class="demo-attributes table-responsive">\n<table class="table m-t">\n  <tbody><tr>\n    <th>Name</th>\n    <th>Description</th>\n    <th>Optional</th>\n  </tr>\n  <tr>\n    <td class="attribute">text</td>\n    <td>The name to be displayed for the contact.</td>\n    <td>false</td>\n  </tr>\n  <tr>\n    <td class="attribute">status</td>\n    <td>Either "active" or "passive".</td>\n    <td>true</td>\n  </tr>\n  <tr>\n    <td class="attribute">tooltip</td>\n    <td>Simple tooltip to show text or HTML for the contact on hover.</td>\n    <td>true</td>\n  </tr>\n  <tr>\n    <td class="attribute">customTooltip</td>\n    <td>\n      This can be used to design a complex tooltip which appears on hover. The <code>customTooltip</code> object can have the following attributes :\n      <ul>\n        <li><code>template</code>: (required) The relative path to the HTML template to be displayed for the contact on hover.\n        </li>\n        <li><code>tooltipPosition</code>: (optional) either "top" or "bottom" - default value is "bottom".\n        </li>\n        <li><code>data</code>: (optional) The data attribute can be defined as an object to contain information for the tooltip. The values in the data object can be displayed accordingly through the template HTML.\n        </li>\n      </ul>\n    </td>\n    <td>true</td>\n  </tr>\n</tbody></table>\n</div>\n<p>The example at the top of the page shows usage of the ‘active’ status, the ‘passive’ status, and no status.</p>\n\n<uxd-snippet [content]="snippets.compiled.contactsContactsJs" language="javascript"></uxd-snippet>\n\n<h4>Organization Object</h4>\n\n<p>Organizations should be objects with the following properties:</p>\n<div class="demo-attributes table-responsive">\n<table class="table m-t">\n  <tbody><tr>\n    <th>Name</th>\n    <th>Description</th>\n    <th>Optional</th>\n  </tr>\n  <tr>\n    <td class="attribute">text</td>\n    <td>The name to be displayed for the organization.</td>\n    <td>false</td>\n  </tr>\n  <tr>\n    <td class="attribute">label</td>\n    <td>String, either <code>external</code> or <code>risk</code>.</td>\n    <td>true</td>\n  </tr>\n  <tr>\n    <td class="attribute">tooltip</td>\n    <td>Simple tooltip to show text or HTML for the organization on hover</td>\n    <td>true</td>\n  </tr>\n  <tr>\n    <td class="attribute">customTooltip</td>\n    <td>\n      This can be used to design a complex tooltip which appears on hover. The <code>customTooltip</code> object can have the following attributes :\n      <ul>\n      <li><code>template</code>: (required) The relative path to the HTML template to be displayed for the contact on hover.\n      </li>\n      <li><code>tooltipPosition</code>: (optional) either "top" or "bottom" - default value is "bottom".\n      </li>\n      <li><code>data</code>: (optional) The data attribute can be defined as an object to contain information for the tooltip. The values in the data object can be displayed accordingly through the template HTML.\n      </li>\n      </ul>\n    </td>\n    <td>true</td>\n  </tr>\n</tbody></table>\n</div>\n<p>The example at the top of the page shows usage of both the “risk” and “external” labels.</p>\n\n<uxd-snippet [content]="snippets.compiled.contactsLabelsJs" language="javascript"></uxd-snippet>\n\n<p>The following code was used to create the example at the top of this page:</p>\n\n<tabset>\n    <tab heading="HTML">\n        <uxd-snippet [content]="snippets.compiled.contactsHtml" language="html"></uxd-snippet>\n    </tab>\n    <tab heading="JavaScript">\n        <uxd-snippet [content]="snippets.compiled.contactsJs" language="javascript"></uxd-snippet>\n    </tab>\n    <tab heading="Tooltip HTML">\n        <uxd-snippet [content]="snippets.compiled.contactsPopoverHtml" language="html"></uxd-snippet>\n    </tab>\n</tabset>\n\n<blockquote>\n    <p><strong>Note</strong>: To upgrade this component to use in an Angular 4 application use: <code>upgradeAdapter.upgradeNg1Component(\'uxContactGroupNg1\')</code></p>\n</blockquote>'},2177:function(t,n){t.exports='<uxd-contacts-overflow-wrapper></uxd-contacts-overflow-wrapper>\n\n<hr>\n\n<p>When there are many contacts to show, you may wish to truncate the display. To do this you can configure the overflow behaviour\n    for the Contacts Group control.</p>\n\n<p>Above is an example of the overflow segment, configured using the <code>max-contacts</code> and\n    <code>overflow-click</code> attributes. The <code>overflow-click</code>    handler in this example opens a modal dialog containing a scrolling view of the full list of contacts, but can be configured\n    as per application requirement.</p>\n\n<p>The following code was used to create this example:</p>\n\n<tabset>\n    <tab heading="HTML">\n        <uxd-snippet [code]="htmlCode" language="html"></uxd-snippet>\n    </tab>\n    <tab heading="Javascript">\n        <uxd-snippet [code]="javascriptCode" language="javascript"></uxd-snippet>\n    </tab>\n    <tab heading="CSS">\n        <uxd-snippet [code]="cssCode" language="css"></uxd-snippet>\n    </tab>\n    <tab heading="Modal HTML">\n        <uxd-snippet [code]="modalHtmlCode" language="html"></uxd-snippet>\n    </tab>\n    <tab heading="Modal Javascript">\n        <uxd-snippet [code]="modalJavascriptCode" language="javascript"></uxd-snippet>\n    </tab>\n    <tab heading="Template HTML">\n        <uxd-snippet [code]="modalItemHtmlCode" language="html"></uxd-snippet>\n    </tab>\n</tabset>'},2548:function(t,n){t.exports='vm.contacts = [{\n    text: "II",\n    status: "active",\n    customTooltip:{\n        template: "app/contacts/contactPopover.html",\n        tooltipPosition: "top",\n        data: {\n            description: "Finance, Variable Income, Storage",\n            riskScore: "Low (0.1)",\n            longName:"Iago Innery",\n        }\n    }\n  },\n  //...\n];'},2549:function(t,n){t.exports='vm.organization = {\n    text: "Investing",\n    label: "risk"\n};'},2550:function(t,n){t.exports=".contacts-demo {\n    text-align: center;\n    margin-top: 200px;\n}"},2551:function(t,n){t.exports='<div class="contacts-demo">\n    <contact-group contacts="vm.contacts" organization="vm.organization" size="vm.size" colors="vm.colors"></contact-group>\n    &nbsp;\n    <i class="contacts-arrow p-r hpe-icon hpe-link-next"></i>\n    &nbsp;\n    <contact-group contacts="vm.otherContacts" organization="vm.otherOrganization" size="vm.size" colors="vm.colorsAlt"></contact-group>\n</div>'},2552:function(t,n){t.exports="angular.module('app').controller('ContactsDemoCtrl', ContactsDemoCtrl);\n\nfunction ContactsDemoCtrl() {\n    var vm = this;\n\n    vm.contacts = [{\n        text: 'RL',\n        status: 'active',\n        customTooltip: {\n            template: 'contacts-popover.html',\n            tooltipPosition: 'top',\n            data: {\n                description: 'Finance, Variable Income, Storage',\n                riskScore: 'Low (0.1)',\n                longName: 'Ryan Lawrence',\n            }\n        }\n    }, {\n        text: 'SH',\n        status: 'passive',\n        customTooltip: {\n            template: 'contacts-popover.html',\n            tooltipPosition: 'top',\n            data: {\n                description: 'Trade, Fixed Income, Securities',\n                riskScore: 'Low (0.2)',\n                longName: 'Simon Hemmings'\n            }\n\n        }\n    }, {\n        text: 'PMG',\n        status: 'active',\n        customTooltip: {\n            template: 'contacts-popover.html',\n            tooltipPosition: 'top',\n            data: {\n                description: 'Trade, Fixed Income, Securities',\n                riskScore: 'Low (0.2)',\n                longName: 'Peter McGrath'\n            }\n        }\n    }, {\n        text: 'RM',\n        status: 'active',\n        customTooltip: {\n            template: 'contacts-popover.html',\n            tooltipPosition: 'top',\n            data: {\n                description: 'Trade, Fixed Income, Securities',\n                riskScore: 'Low (0.2)',\n                longName: 'Rebecca Martin'\n            }\n\n        }\n    }];\n\n    vm.otherContacts = [{\n        text: 'Claire Dowd',\n        customTooltip: {\n            template: 'contacts-popover.html',\n            data: {\n                description: 'Trade, Fixed Income, Securities',\n                riskScore: 'Low (0.2)'\n            }\n        }\n    }, {\n        text: 'David Bond',\n        customTooltip: {\n            template: 'contacts-popover.html',\n            data: {\n                description: 'Trade, Fixed Income, Securities',\n                riskScore: 'Low (0.2)'\n            }\n        }\n    }];\n\n    vm.organization = {\n        text: 'Investing',\n        label: 'risk'\n    };\n\n    vm.otherOrganization = {\n        text: 'Trading',\n        label: 'external'\n    };\n\n    vm.size = 'medium';\n\n    vm.colors = {\n        primary: '#7b63a3',\n        secondary: '#ffffff'\n    };\n\n    vm.colorsAlt = {\n        primary: '#025662',\n        secondary: '#ffffff'\n    };\n}\n"},2553:function(t,n){t.exports="angular.module('app').controller('ContactsOverflowDemoModalCtrl', ContactsOverflowDemoModalCtrl);\n\nContactsOverflowDemoModalCtrl.$inject = ['$modalInstance', '$q', 'contacts'];\n\nfunction ContactsOverflowDemoModalCtrl($modalInstance, $q, contacts) {\n    var vm = this;\n\n    vm.scrollConfig = {\n        resizeSensor: true\n    };\n\n    vm.pageSize = 25;\n    vm.pageFunction = function (page, pageSize) {\n        return $q.when(contacts.slice(page * pageSize, (page + 1) * pageSize));\n    };\n\n    vm.ok = function () {\n        $modalInstance.close();\n    };\n}"},2554:function(t,n){t.exports=".contact-overflow-scroll-pane {\n    height: 300px;\n}\n.contact-overflow-modal-item-row {\n    padding: 5px 8px;\n    border-bottom: 1px solid lightgray;\n    margin-right: 7px;\n}\n.contact-overflow-modal-item-label {\n    width: 30px;\n    text-align: center;\n    color: #fff;\n    background-color: #835996;\n    padding: 2px 0;\n}"},2555:function(t,n){t.exports='<div class="text-center">\n    <contact-group contacts="vm.overflowContacts" organization="vm.organization" size="vm.size" colors="vm.colors" max-contacts="4" overflow-click="vm.onOverflowClick()"></contact-group>\n</div>'},2556:function(t,n){t.exports="angular.module('app').controller('ContactsOverflowDemoCtrl', ContactsOverflowDemoCtrl);\n\nContactsOverflowDemoCtrl.$inject = ['$modal'];\n\nfunction ContactsOverflowDemoCtrl($modal) {\n    var vm = this;\n\n    vm.overflowContacts = [{\n        text: 'DS',\n        detail: 'Dean Smith'\n    }, {\n        text: 'JB',\n        detail: 'James Bell'\n    }, {\n        text: 'RY',\n        detail: 'Rose Young'\n    }, {\n        text: 'PJ',\n        detail: 'Paul Jones'\n    }, {\n        text: 'GM',\n        detail: 'Glen Manning'\n    }, {\n        text: 'MU',\n        detail: 'Mike Underwood'\n    }, {\n        text: 'LH',\n        detail: 'Leah Harris'\n    }];\n    for (var i = 0; i < 100; i += 1) {\n        vm.overflowContacts.push({\n            text: 'C' + i,\n            detail: 'Contact ' + i\n        });\n    }\n\n    vm.organization = {\n        text: 'Investing',\n        label: 'risk'\n    };\n\n    vm.size = 'medium';\n\n    vm.colors = {\n        primary: '#7b63a3',\n        secondary: '#ffffff'\n    };\n\n    vm.colorsAlt = {\n        primary: '#025662',\n        secondary: '#ffffff'\n    };\n\n    vm.onOverflowClick = function () {\n        $modal.open({\n            animation: false,\n            templateUrl: 'contacts-overflow-modal.html',\n            controller: 'ContactsOverflowDemoModalCtrl',\n            controllerAs: 'vm',\n            resolve: {\n                contacts: function () {\n                    return vm.overflowContacts;\n                }\n            },\n            keyboard: 'true'\n        });\n    };\n}\n"},3060:function(t,n,e){var o=e(2084);t.exports="string"==typeof o?o:o.toString()}});
(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1219],{87413:y=>{y.exports={snippet:'<span class="token selector">ux-alert</span> <span class="token punctuation">{</span>\n    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">ux-alert:last-of-type</span> <span class="token punctuation">{</span>\n    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:"ux-alert {\n    margin-bottom: 8px;\n}\n\nux-alert:last-of-type {\n    margin-bottom: 16px;\n}"}},63385:y=>{y.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-alert</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let alert of alerts<span class="token punctuation">"</span></span>\n          <span class="token attr-name">[type]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>alert.type<span class="token punctuation">"</span></span>\n          <span class="token attr-name">[dismissible]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>\n          <span class="token attr-name">(dismiss)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>remove(alert)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">uxAlertIcon</span> <span class="token attr-name">[name]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>alert.icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">[innerHTML]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>alert.description<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-alert</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-primary<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reset()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Reset<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n',example:'<ux-alert *ngFor="let alert of alerts"\n          [type]="alert.type"\n          [dismissible]="true"\n          (dismiss)="remove(alert)">\n\n    <ux-icon uxAlertIcon [name]="alert.icon"></ux-icon>\n\n    <span [innerHTML]="alert.description"></span>\n</ux-alert>\n\n<button class="btn button-primary" (click)="reset()">Reset</button>\n'}},63989:y=>{y.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">selector</span><span class="token operator">:</span> <span class="token string">\'app-root\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">templateUrl</span><span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">styleUrls</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">private</span> readonly _alerts<span class="token operator">:</span> ReadonlyArray<span class="token operator">&lt;</span>AlertExample<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'info\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">\'status-information-filled\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">\'This is an example of an info alert message &lt;a class="alert-link">with a link&lt;/a>.\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">\'status-error-filled\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">\'This is an example of an error alert message &lt;a class="alert-link">with a link&lt;/a>.\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'success\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">\'status-approved-filled\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">\'This is an example of a success alert message &lt;a class="alert-link">with a link&lt;/a>.\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'warning\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">\'status-warning-filled\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">\'This is an example of a warning alert message &lt;a class="alert-link">with a link&lt;/a>.\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'dark\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">\'status-information-filled\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">\'This is an example of a dark alert message &lt;a class="alert-link">with a link&lt;/a>.\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token literal-property property">alerts</span><span class="token operator">:</span> AlertExample<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>_alerts<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token function">remove</span><span class="token punctuation">(</span>alert<span class="token operator">:</span> AlertExample<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>alerts <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>alerts<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">_alert</span> <span class="token operator">=></span> _alert <span class="token operator">!==</span> alert<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>alerts <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>_alerts<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">AlertExample</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">type</span><span class="token operator">:</span> string<span class="token punctuation">;</span>\n    <span class="token literal-property property">icon</span><span class="token operator">:</span> string<span class="token punctuation">;</span>\n    <span class="token literal-property property">description</span><span class="token operator">:</span> string<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',example:"import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n\n    private readonly _alerts: ReadonlyArray<AlertExample> = [\n        {\n            type: 'info',\n            icon: 'status-information-filled',\n            description: 'This is an example of an info alert message <a class=\"alert-link\">with a link</a>.',\n        },\n        {\n            type: 'error',\n            icon: 'status-error-filled',\n            description: 'This is an example of an error alert message <a class=\"alert-link\">with a link</a>.',\n        },\n        {\n            type: 'success',\n            icon: 'status-approved-filled',\n            description: 'This is an example of a success alert message <a class=\"alert-link\">with a link</a>.',\n        },\n        {\n            type: 'warning',\n            icon: 'status-warning-filled',\n            description: 'This is an example of a warning alert message <a class=\"alert-link\">with a link</a>.',\n        },\n        {\n            type: 'dark',\n            icon: 'status-information-filled',\n            description: 'This is an example of a dark alert message <a class=\"alert-link\">with a link</a>.',\n        },\n    ];\n\n    alerts: AlertExample[] = [...this._alerts];\n\n    remove(alert: AlertExample): void {\n        this.alerts = this.alerts.filter(_alert => _alert !== alert);\n    }\n\n    reset(): void {\n        this.alerts = [...this._alerts];\n    }\n}\n\nexport interface AlertExample {\n    type: string;\n    icon: string;\n    description: string;\n}\n"}},35486:y=>{y.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row badge-row text-center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-sm-3 col-sm-offset-3 col-xs-6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-primary<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[uxBadge]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>badgeContent<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[badgeSize]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>badgeSize<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[badgeMaxValue]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>badgeMaxValue<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[badgeOverlap]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>badgeOverlap<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[badgeColor]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectedColor<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[badgeBorderColor]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectedBorderColor<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[badgeHidden]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>badgeHidden<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[badgeHorizontalPosition]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>badgeHorizontalPosition<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[badgeVerticalPosition]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>badgeVerticalPosition<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            Tasks\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-sm-3 col-xs-6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>icon-example<span class="token punctuation">"</span></span>\n            <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[uxBadge]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>badgeContent<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[badgeSize]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>badgeSize<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[badgeMaxValue]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>badgeMaxValue<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[badgeOverlap]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>badgeOverlap<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[badgeColor]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectedColor<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[badgeBorderColor]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectedBorderColor<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[badgeHidden]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>badgeHidden<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[badgeHorizontalPosition]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>badgeHorizontalPosition<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[badgeVerticalPosition]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>badgeVerticalPosition<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n',example:'<div class="row badge-row text-center">\n    <div class="col-sm-3 col-sm-offset-3 col-xs-6">\n        <button class="btn btn-primary"\n            [uxBadge]="badgeContent"\n            [badgeSize]="badgeSize"\n            [badgeMaxValue]="badgeMaxValue"\n            [badgeOverlap]="badgeOverlap"\n            [badgeColor]="selectedColor"\n            [badgeBorderColor]="selectedBorderColor"\n            [badgeHidden]="badgeHidden"\n            [badgeHorizontalPosition]="badgeHorizontalPosition"\n            [badgeVerticalPosition]="badgeVerticalPosition">\n            Tasks\n        </button>\n    </div>\n    <div class="col-sm-3 col-xs-6">\n        <ux-icon class="icon-example"\n            name="list"\n            [uxBadge]="badgeContent"\n            [badgeSize]="badgeSize"\n            [badgeMaxValue]="badgeMaxValue"\n            [badgeOverlap]="badgeOverlap"\n            [badgeColor]="selectedColor"\n            [badgeBorderColor]="selectedBorderColor"\n            [badgeHidden]="badgeHidden"\n            [badgeHorizontalPosition]="badgeHorizontalPosition"\n            [badgeVerticalPosition]="badgeVerticalPosition">\n        </ux-icon>\n    </div>\n</div>\n'}},55422:y=>{y.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BadgeHorizontalPosition<span class="token punctuation">,</span> BadgeSize<span class="token punctuation">,</span> BadgeVerticalPosition <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">selector</span><span class="token operator">:</span> <span class="token string">\'app-root\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">templateUrl</span><span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">hideButton</span><span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    <span class="token literal-property property">badgeContent</span><span class="token operator">:</span> string <span class="token operator">|</span> number <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">;</span>\n    <span class="token literal-property property">badgeMaxValue</span><span class="token operator">:</span> number <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n    <span class="token literal-property property">badgeSize</span><span class="token operator">:</span> BadgeSize <span class="token operator">=</span> <span class="token string">\'medium\'</span><span class="token punctuation">;</span>\n    <span class="token literal-property property">badgeOverlap</span><span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    <span class="token literal-property property">badgeHidden</span><span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    <span class="token literal-property property">badgeHorizontalPosition</span><span class="token operator">:</span> BadgeHorizontalPosition <span class="token operator">=</span> <span class="token string">\'after\'</span><span class="token punctuation">;</span>\n    <span class="token literal-property property">badgeVerticalPosition</span><span class="token operator">:</span> BadgeVerticalPosition <span class="token operator">=</span> <span class="token string">\'above\'</span><span class="token punctuation">;</span>\n    <span class="token literal-property property">selectedColor</span><span class="token operator">:</span> string  <span class="token operator">=</span> <span class="token string">\'critical\'</span><span class="token punctuation">;</span>\n    <span class="token literal-property property">selectedBorderColor</span><span class="token operator">:</span> string <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',example:"import { Component } from '@angular/core';\nimport { BadgeHorizontalPosition, BadgeSize, BadgeVerticalPosition } from '@ux-aspects/ux-aspects';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n})\nexport class AppComponent {\n    hideButton: boolean = false;\n    badgeContent: string | number = 18;\n    badgeMaxValue: number = null;\n    badgeSize: BadgeSize = 'medium';\n    badgeOverlap: boolean = true;\n    badgeHidden: boolean = false;\n    badgeHorizontalPosition: BadgeHorizontalPosition = 'after';\n    badgeVerticalPosition: BadgeVerticalPosition = 'above';\n    selectedColor: string  = 'critical';\n    selectedBorderColor: string = null;\n}\n"}},33506:y=>{y.exports={snippet:'<span class="token selector">.notification-wrapper</span> <span class="token punctuation">{</span>\r\n    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\r\n    <span class="token property">padding</span><span class="token punctuation">:</span> 0 5px<span class="token punctuation">;</span>\r\n    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\r\n    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span>\r\n\r\n<span class="token selector">.notification-icon</span> <span class="token punctuation">{</span>\r\n    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\r\n    <span class="token property">flex</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\r\n    <span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>\r\n    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\r\n    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\r\n    <span class="token property">align-self</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\r\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 1.5rem<span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span>\r\n\r\n<span class="token selector">.notification-content</span> <span class="token punctuation">{</span>\r\n    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\r\n    <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span>\r\n    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>100% - 50px<span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span>\r\n\r\n<span class="token selector">.notification-title,\r\n.notification-description,\r\n.notification-timestamp</span> <span class="token punctuation">{</span>\r\n    <span class="token property">line-height</span><span class="token punctuation">:</span> initial<span class="token punctuation">;</span>\r\n    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span>\r\n\r\n<span class="token selector">.notification-title</span> <span class="token punctuation">{</span>\r\n    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>\r\n    <span class="token property">font-weight</span><span class="token punctuation">:</span> 600<span class="token punctuation">;</span>\r\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 1.125rem<span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span>\r\n\r\n<span class="token selector">.notification-description</span> <span class="token punctuation">{</span>\r\n    <span class="token property">flex</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\r\n    <span class="token property">margin-right</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>\r\n    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>\r\n    <span class="token property">word-break</span><span class="token punctuation">:</span> break-all<span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span>\r\n\r\n<span class="token selector">.notification-timestamp</span> <span class="token punctuation">{</span>\r\n    <span class="token property">flex</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\r\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 0.8125rem<span class="token punctuation">;</span>\r\n    <span class="token property">opacity</span><span class="token punctuation">:</span> 0.8<span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span>',example:".notification-wrapper {\r\n    display: flex;\r\n    padding: 0 5px;\r\n    align-items: center;\r\n    height: 100%;\r\n}\r\n\r\n.notification-icon {\r\n    display: flex;\r\n    flex: none;\r\n    width: 50px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    align-self: center;\r\n    font-size: 1.5rem;\r\n}\r\n\r\n.notification-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: calc(100% - 50px);\r\n}\r\n\r\n.notification-title,\r\n.notification-description,\r\n.notification-timestamp {\r\n    line-height: initial;\r\n    margin: 0;\r\n}\r\n\r\n.notification-title {\r\n    margin-bottom: 5px;\r\n    font-weight: 600;\r\n    font-size: 1.125rem;\r\n}\r\n\r\n.notification-description {\r\n    flex: none;\r\n    margin-right: 3px;\r\n    margin-bottom: 3px;\r\n    word-break: break-all;\r\n}\r\n\r\n.notification-timestamp {\r\n    flex: none;\r\n    font-size: 0.8125rem;\r\n    opacity: 0.8;\r\n}"}},91525:y=>{y.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-notification-list</span> <span class="token attr-name">direction</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>above<span class="token punctuation">"</span></span> <span class="token attr-name">position</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-notification-list</span><span class="token punctuation">></span></span>\r\n\r\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-primary m-r-sm<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showNotification(notification)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n        Show Notification\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-secondary m-r-sm<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>notificationService.dismissAll()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n        Dismiss Notifications\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\r\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\r\n\r\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ng-template</span> <span class="token attr-name">#notification</span> <span class="token attr-name">let-notificationRef</span> <span class="token attr-name">let-data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>data<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dismiss<span class="token punctuation">"</span></span>\r\n        <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>\r\n        <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Dismiss Notification<span class="token punctuation">"</span></span>\r\n        <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>notificationService.dismiss(notificationRef)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>close<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\r\n\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>notification-wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n\r\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>notification-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chat<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\r\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\r\n\r\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>notification-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>notification-title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Messages Received<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>\r\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>notification-description<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{ data.description }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\r\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>notification-timestamp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n                {{ notificationRef.date | date:\'EEEE, MMMM d, y, h:mm:ss a\' }}\r\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\r\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\r\n\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\r\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ng-template</span><span class="token punctuation">></span></span>\r\n\r\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>\r\n\r\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row uxd-customize-example<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-accordion</span><span class="token punctuation">></span></span>\r\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-accordion-panel</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>accordion-chevron<span class="token punctuation">"</span></span> <span class="token attr-name">heading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Customize Example...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row uxd-customize-row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-6 col-sm-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>backgroundColor<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>backgroundColor<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\r\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input-group m-b-sm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Background color<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>backgroundColor<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\r\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\r\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-6 col-sm-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>duration<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>duration<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\r\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-number-picker</span> <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>duration<span class="token punctuation">"</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3600<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-number-picker</span><span class="token punctuation">></span></span>\r\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\r\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\r\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row uxd-customize-row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-sm-6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>backgroundColor<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>description<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\r\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input-group m-b-sm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Enter description<span class="token punctuation">"</span></span>\r\n                                <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>description<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\r\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\r\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\r\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-accordion-panel</span><span class="token punctuation">></span></span>\r\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-accordion</span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\r\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\r\n',example:'<ux-notification-list direction="above" position="top-right"></ux-notification-list>\r\n\r\n<div class="btn-container">\r\n    <button class="btn button-primary m-r-sm" (click)="showNotification(notification)">\r\n        Show Notification\r\n    </button>\r\n    <button class="btn button-secondary m-r-sm" (click)="notificationService.dismissAll()">\r\n        Dismiss Notifications\r\n    </button>\r\n</div>\r\n\r\n<ng-template #notification let-notificationRef let-data="data">\r\n    <button class="dismiss"\r\n        tabindex="0"\r\n        aria-label="Dismiss Notification"\r\n        (click)="notificationService.dismiss(notificationRef)">\r\n        <ux-icon name="close"></ux-icon>\r\n    </button>\r\n\r\n    <div class="notification-wrapper">\r\n\r\n        <div class="notification-icon">\r\n            <ux-icon name="chat"></ux-icon>\r\n        </div>\r\n\r\n        <div class="notification-content">\r\n            <h4 class="notification-title">Messages Received</h4>\r\n            <p class="notification-description">{{ data.description }}</p>\r\n            <p class="notification-timestamp">\r\n                {{ notificationRef.date | date:\'EEEE, MMMM d, y, h:mm:ss a\' }}\r\n            </p>\r\n        </div>\r\n\r\n    </div>\r\n</ng-template>\r\n\r\n<hr>\r\n\r\n<div class="row uxd-customize-example">\r\n    <div class="col-md-12">\r\n        <ux-accordion>\r\n            <ux-accordion-panel class="accordion-chevron" heading="Customize Example...">\r\n                <div class="row uxd-customize-row">\r\n                    <div class="col-md-6 col-sm-12">\r\n                        <label for="backgroundColor">backgroundColor</label>\r\n                        <div class="input-group m-b-sm">\r\n                            <input type="text" placeholder="Background color" class="form-control" [(ngModel)]="backgroundColor">\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-6 col-sm-12">\r\n                        <label for="duration">duration</label>\r\n                        <ux-number-picker [(value)]="duration" min="0" max="3600"></ux-number-picker>\r\n                    </div>\r\n                </div>\r\n                <div class="row uxd-customize-row">\r\n                    <div class="col-sm-6">\r\n                        <label for="backgroundColor">description</label>\r\n                        <div class="input-group m-b-sm">\r\n                            <input type="text" placeholder="Enter description"\r\n                                class="form-control" [(ngModel)]="description">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ux-accordion-panel>\r\n        </ux-accordion>\r\n    </div>\r\n</div>\r\n'}},18536:y=>{y.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> LiveAnnouncer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/cdk/a11y\'</span><span class="token punctuation">;</span>\r\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> HostListener<span class="token punctuation">,</span> OnDestroy<span class="token punctuation">,</span> TemplateRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\r\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ColorService<span class="token punctuation">,</span> NotificationService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\r\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Subject<span class="token punctuation">,</span> Subscription <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'rxjs\'</span><span class="token punctuation">;</span>\r\n<span class="token keyword">import</span> <span class="token punctuation">{</span> buffer<span class="token punctuation">,</span> debounceTime <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'rxjs/operators\'</span><span class="token punctuation">;</span>\r\n\r\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\r\n    <span class="token literal-property property">selector</span><span class="token operator">:</span> <span class="token string">\'app-root\'</span><span class="token punctuation">,</span>\r\n    <span class="token literal-property property">templateUrl</span><span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\r\n    <span class="token literal-property property">styleUrls</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span>\r\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\r\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token keyword">implements</span> <span class="token class-name">OnDestroy</span> <span class="token punctuation">{</span>\r\n\r\n    <span class="token literal-property property">duration</span><span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>\r\n    <span class="token literal-property property">description</span><span class="token operator">:</span> string <span class="token operator">=</span> <span class="token string">\'You have 16 messages\'</span><span class="token punctuation">;</span>\r\n    <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> string <span class="token operator">=</span> <span class="token string">\'rgba(123, 99, 163, 1)\'</span><span class="token punctuation">;</span>\r\n\r\n    <span class="token keyword">private</span> readonly _notifications <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Subject</span><span class="token operator">&lt;</span>string<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n    <span class="token keyword">private</span> readonly _subscription<span class="token operator">:</span> Subscription<span class="token punctuation">;</span>\r\n\r\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token keyword">public</span> <span class="token literal-property property">notificationService</span><span class="token operator">:</span> NotificationService<span class="token punctuation">,</span>\r\n        <span class="token keyword">public</span> <span class="token literal-property property">colorService</span><span class="token operator">:</span> ColorService<span class="token punctuation">,</span>\r\n        <span class="token keyword">private</span> readonly _liveAnnouncer<span class="token operator">:</span> LiveAnnouncer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n\r\n        <span class="token comment">// buffer notifications then announce them</span>\r\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_subscription <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_notifications<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>\r\n            <span class="token function">buffer</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_notifications<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">debounceTime</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\r\n        <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token parameter">notifications</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\r\n            <span class="token keyword">this</span><span class="token punctuation">.</span>_liveAnnouncer<span class="token punctuation">.</span><span class="token function">announce</span><span class="token punctuation">(</span>\r\n                notifications<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">notification</span> <span class="token operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Notification: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>notification<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\r\n            <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\n    <span class="token punctuation">}</span>\r\n\r\n    <span class="token function">ngOnDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\r\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_subscription<span class="token punctuation">.</span><span class="token function">unsubscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_notifications<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n    <span class="token punctuation">}</span>\r\n\r\n    <span class="token function">showNotification</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">template</span><span class="token operator">:</span> TemplateRef<span class="token operator">&lt;</span>any<span class="token operator">></span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n        <span class="token keyword">this</span><span class="token punctuation">.</span>notificationService<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span>template<span class="token punctuation">,</span>\r\n            <span class="token punctuation">{</span> <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>duration<span class="token punctuation">,</span> <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>backgroundColor <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n            <span class="token punctuation">{</span> <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>description <span class="token punctuation">}</span>\r\n        <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\n        <span class="token comment">// announce the notification</span>\r\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_notifications<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>description<span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n    <span class="token punctuation">}</span>\r\n\r\n    @<span class="token function">HostListener</span><span class="token punctuation">(</span><span class="token string">\'document:keydown.escape\'</span><span class="token punctuation">)</span>\r\n    <span class="token function">dismissNotifications</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\r\n        <span class="token keyword">this</span><span class="token punctuation">.</span>notificationService<span class="token punctuation">.</span><span class="token function">dismissAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n    <span class="token punctuation">}</span>\r\n<span class="token punctuation">}</span>\r\n',example:"import { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { Component, HostListener, OnDestroy, TemplateRef } from '@angular/core';\r\nimport { ColorService, NotificationService } from '@ux-aspects/ux-aspects';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { buffer, debounceTime } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnDestroy {\r\n\r\n    duration: number = 4;\r\n    description: string = 'You have 16 messages';\r\n    backgroundColor: string = 'rgba(123, 99, 163, 1)';\r\n\r\n    private readonly _notifications = new Subject<string>();\r\n    private readonly _subscription: Subscription;\r\n\r\n    constructor(public notificationService: NotificationService,\r\n        public colorService: ColorService,\r\n        private readonly _liveAnnouncer: LiveAnnouncer) {\r\n\r\n        // buffer notifications then announce them\r\n        this._subscription = this._notifications.pipe(\r\n            buffer(this._notifications.pipe(debounceTime(1000)))\r\n        ).subscribe(notifications => {\r\n            this._liveAnnouncer.announce(\r\n                notifications.map(notification => `Notification: ${notification}.`).join()\r\n            );\r\n        });\r\n\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._subscription.unsubscribe();\r\n        this._notifications.complete();\r\n    }\r\n\r\n    showNotification(template: TemplateRef<any>) {\r\n        this.notificationService.show(template,\r\n            { duration: this.duration, backgroundColor: this.backgroundColor },\r\n            { description: this.description }\r\n        );\r\n\r\n        // announce the notification\r\n        this._notifications.next(this.description);\r\n    }\r\n\r\n    @HostListener('document:keydown.escape')\r\n    dismissNotifications(): void {\r\n        this.notificationService.dismissAll();\r\n    }\r\n}\r\n"}},75221:(y,A,r)=>{var w={"./app.css":87413,"./app.html":63385,"./app.ts":63989,"docs/app/pages/components/components-sections/notifications/alert/snippets/app.css":87413,"docs/app/pages/components/components-sections/notifications/alert/snippets/app.html":63385,"docs/app/pages/components/components-sections/notifications/alert/snippets/app.ts":63989};function x(h){var g=_(h);return r(g)}function _(h){if(!r.o(w,h)){var g=new Error("Cannot find module '"+h+"'");throw g.code="MODULE_NOT_FOUND",g}return w[h]}x.keys=function(){return Object.keys(w)},x.resolve=_,y.exports=x,x.id=75221},70599:(y,A,r)=>{var w={"./app.html":35486,"./app.ts":55422,"docs/app/pages/components/components-sections/notifications/badge/snippets/app.html":35486,"docs/app/pages/components/components-sections/notifications/badge/snippets/app.ts":55422};function x(h){var g=_(h);return r(g)}function _(h){if(!r.o(w,h)){var g=new Error("Cannot find module '"+h+"'");throw g.code="MODULE_NOT_FOUND",g}return w[h]}x.keys=function(){return Object.keys(w)},x.resolve=_,y.exports=x,x.id=70599},84950:(y,A,r)=>{var w={"./app.css":33506,"./app.html":91525,"./app.ts":18536,"docs/app/pages/components/components-sections/notifications/notifications/snippets/app.css":33506,"docs/app/pages/components/components-sections/notifications/notifications/snippets/app.html":91525,"docs/app/pages/components/components-sections/notifications/notifications/snippets/app.ts":18536};function x(h){var g=_(h);return r(g)}function _(h){if(!r.o(w,h)){var g=new Error("Cannot find module '"+h+"'");throw g.code="MODULE_NOT_FOUND",g}return w[h]}x.keys=function(){return Object.keys(w)},x.resolve=_,y.exports=x,x.id=84950},61219:(y,A,r)=>{"use strict";r.r(A),r.d(A,{ComponentsNotificationsModule:()=>v});var w=r(24191),x=r(96814),_=r(40285),h=r(74289),g=r(78478),G=r(24535),en=r(991),E=r(64661),V=r(21802),J=r(56082),S=r(89044),n=r(28830),K=r(54068),O=r(54481),M=r(12012),U=r(41597),q=r(61525),P=r(1494),N=r(24315),z=r(6306),T=r(64056);function Y(m,i){if(1&m){const l=n.EpF();n.TgZ(0,"ux-alert",15),n.NdJ("dismiss",function(){const d=n.CHM(l).$implicit,C=n.oxw();return n.KtG(C.remove(d))}),n._UZ(1,"ux-icon",16)(2,"span",17),n.qZA()}if(2&m){const l=i.$implicit;n.Q6J("type",l.type)("dismissible",!0),n.xp6(1),n.Q6J("name",l.icon),n.xp6(1),n.Q6J("innerHTML",l.description,n.oJD)}}let B=class an extends J.u{constructor(){super(r(75221)),this._alerts=[{type:"info",icon:"status-information-filled",description:'This is an example of an info alert message <a class="alert-link">with a link</a>.'},{type:"error",icon:"status-error-filled",description:'This is an example of an error alert message <a class="alert-link">with a link</a>.'},{type:"success",icon:"status-approved-filled",description:'This is an example of a success alert message <a class="alert-link">with a link</a>.'},{type:"warning",icon:"status-warning-filled",description:'This is an example of a warning alert message <a class="alert-link">with a link</a>.'},{type:"dark",icon:"status-information-filled",description:'This is an example of a dark alert message <a class="alert-link">with a link</a>.'}],this.alerts=[...this._alerts],this.playground={files:{"app.component.ts":this.snippets.raw.appTs,"app.component.html":this.snippets.raw.appHtml,"app.component.css":this.snippets.raw.appCss},modules:[{imports:["AlertModule","AccordionModule","CheckboxModule"],library:"@ux-aspects/ux-aspects"}]}}remove(i){this.alerts=this.alerts.filter(l=>l!==i)}reset(){this.alerts=[...this._alerts]}static#n=this.\u0275fac=function(l){return new(l||an)};static#a=this.\u0275cmp=n.Xpm({type:an,selectors:[["uxmd-pages-alert"]],features:[n.qOj],decls:54,vars:5,consts:[[3,"type","dismissible","dismiss",4,"ngFor","ngForOf"],[1,"btn","button-primary",3,"click"],["tableTitle","Inputs"],["uxd-api-property","","name","type","type","AlertType","defaultValue","info"],["uxd-api-property","","name","dismissible","type","boolean","defaultValue","false"],["uxd-api-property","","name","backgroundColor","type","string"],["uxd-api-property","","name","foregroundColor","type","string"],["uxd-api-property","","name","dismissAriaLabel","type","string","defaultValue","Dismiss Alert"],["tableTitle","Outputs"],["uxd-api-property","","name","dismiss"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"],["heading","CSS"],[3,"type","dismissible","dismiss"],["uxAlertIcon","",3,"name"],[3,"innerHTML"]],template:function(l,o){1&l&&(n.YNc(0,Y,3,4,"ux-alert",0),n.TgZ(1,"button",1),n.NdJ("click",function(){return o.reset()}),n._uU(2,"Reset"),n.qZA(),n._UZ(3,"hr"),n.TgZ(4,"p"),n._uU(5," A "),n.TgZ(6,"code"),n._uU(7,"ux-alert"),n.qZA(),n._uU(8," can be used to display a message to the user. The alert color and icon can be used to indicate a status such as success, warning or error.\n"),n.qZA(),n.TgZ(9,"p"),n._uU(10," To display an icon in the alert add an icon from our icon set and apply the "),n.TgZ(11,"code"),n._uU(12,"uxAlertIcon"),n.qZA(),n._uU(13," directive.\n"),n.qZA(),n.TgZ(14,"p"),n._uU(15," The following can be used to customize the appearance and behavior of the alert:\n"),n.qZA(),n.TgZ(16,"uxd-api-properties",2)(17,"tr",3),n._uU(18," Defines the background and foreground color of the alert. Valid types are: "),n.TgZ(19,"code"),n._uU(20,"info"),n.qZA(),n._uU(21,", "),n.TgZ(22,"code"),n._uU(23,"error"),n.qZA(),n._uU(24,", "),n.TgZ(25,"code"),n._uU(26,"warning"),n.qZA(),n._uU(27,", "),n.TgZ(28,"code"),n._uU(29,"success"),n.qZA(),n._uU(30," and "),n.TgZ(31,"code"),n._uU(32,"dark"),n.qZA(),n._uU(33,". "),n.qZA(),n.TgZ(34,"tr",4),n._uU(35," Defines whether or not the dismiss button is visible. "),n.qZA(),n.TgZ(36,"tr",5),n._uU(37," To set a background color that is not included in the predefined types, this property can be used to set the background color using a color from our color palette or a CSS color value. "),n.qZA(),n.TgZ(38,"tr",6),n._uU(39," To set a foreground color that is not included in the predefined types, this property can be used to set the foreground color using a color from our color palette or a CSS color value. "),n.qZA(),n.TgZ(40,"tr",7),n._uU(41," Define a custom aria label for the alert dismiss button. "),n.qZA()(),n.TgZ(42,"uxd-api-properties",8)(43,"tr",9),n._uU(44," This event will emit when the dismiss button is clicked. "),n.qZA()(),n.TgZ(45,"p"),n._uU(46," The example above can be created using the following code:\n"),n.qZA(),n.TgZ(47,"ux-tabset",10)(48,"ux-tab",11),n._UZ(49,"uxd-snippet",12),n.qZA(),n.TgZ(50,"ux-tab",13),n._UZ(51,"uxd-snippet",12),n.qZA(),n.TgZ(52,"ux-tab",14),n._UZ(53,"uxd-snippet",12),n.qZA()()),2&l&&(n.Q6J("ngForOf",o.alerts),n.xp6(47),n.Q6J("minimal",!1),n.xp6(2),n.Q6J("content",o.snippets.compiled.appHtml),n.xp6(2),n.Q6J("content",o.snippets.compiled.appTs),n.xp6(2),n.Q6J("content",o.snippets.compiled.appCss))},dependencies:[K.w,O.V,x.sg,M.$,U.S,q.j,P.G,N.o,z.A,T.i],styles:["ux-alert[_ngcontent-%COMP%]{margin-bottom:8px}ux-alert[_ngcontent-%COMP%]:last-of-type{margin-bottom:16px}"]})};B=(0,V.gn)([(0,S.cG)("ComponentsAlertComponent")],B);var H=r(82079),R=r(23684),D=r(61164),$=r(82442),X=r(42861),Q=r(95739),W=r(2022);const F=function(){return{updateOn:"blur"}},L=function(m){return[m]};let j=class sn extends J.u{constructor(i,l){super(r(70599)),this.documentationType=i,this.colorService=l,this.hideButton=!1,this.badgeContent="18",this.badgeMaxValue=null,this.badgeSize="medium",this.badgeOverlap=!0,this.badgeHidden=!1,this.badgeHorizontalPosition="after",this.badgeVerticalPosition="above",this.selectedColor="critical",this.selectedBorderColor=null,this.playground={files:{"app.component.html":this.snippets.raw.appHtml,"app.component.ts":this.snippets.raw.appTs},modules:[{imports:["BadgeModule"],library:"@ux-aspects/ux-aspects"},{imports:["RouterModule"],library:"@angular/router",importsWithProviders:["RouterModule.forRoot([])"]}]},this.colorPaletteDocumentationRoute=i===H.E.MicroFocus?"/ui-components/styling":"/css/color-palette",i===H.E.MicroFocus&&(this.colorPaletteFragment="color-palette")}static#n=this.\u0275fac=function(l){return new(l||sn)(n.Y36(H.d),n.Y36(g.x4Z))};static#a=this.\u0275cmp=n.Xpm({type:sn,selectors:[["uxd-components-badge"]],features:[n.qOj],decls:127,vars:46,consts:[[1,"row","badge-row","text-center"],[1,"col-sm-3","col-sm-offset-3","col-xs-6"],[1,"btn","btn-primary",3,"uxBadge","badgeSize","badgeMaxValue","badgeOverlap","badgeColor","badgeBorderColor","badgeHidden","badgeHorizontalPosition","badgeVerticalPosition"],[1,"col-sm-3","col-xs-6"],["name","list",1,"icon-example",3,"uxBadge","badgeSize","badgeMaxValue","badgeOverlap","badgeColor","badgeBorderColor","badgeHidden","badgeHorizontalPosition","badgeVerticalPosition"],[1,"row","uxd-customize-example"],[1,"col-md-12"],["heading","Customize Example...",1,"accordion-chevron"],[1,"row","uxd-customize-row"],[1,"col-md-6","col-sm-12"],["for","uxBadge"],[1,"input-group","m-b-sm"],["type","text",1,"form-control",3,"ngModel","ngModelChange"],["for","badgeMaxValue"],["min","0","max","1000000",3,"value","valueChange"],[1,"col-md-6","col-sm-6"],["for","badgeColor"],["type","text",1,"form-control",3,"ngModel","ngModelOptions","ngModelChange"],["for","badgeBorderColor"],[1,"col-md-3","col-sm-6"],["for","buttonSize"],["option","above",3,"value","valueChange"],["option","below",3,"value","valueChange"],["option","before",3,"value","valueChange"],["option","after",3,"value","valueChange"],[1,"col-md-2","col-sm-3"],[1,"col-md-4","col-sm-9"],["option","small",3,"value","valueChange"],["option","medium",3,"value","valueChange"],["option","large",3,"value","valueChange"],[3,"value","valueChange"],["tableTitle","Inputs"],["uxd-api-property","","name","uxBadge","type","string | number"],["uxd-api-property","","name","badgeColor","type","string"],[3,"fragment","routerLink"],["uxd-api-property","","name","badgeBorderColor","type","string"],["uxd-api-property","","name","badgeValueLimit","type","number"],["uxd-api-property","","name","badgeVerticalPosition","type","'above' | 'below'","defaultValue","'above'"],["uxd-api-property","","name","badgeHorizontalPosition","type","'before' | 'after'","defaultValue","'after'"],["uxd-api-property","","name","badgeOverlap","type","boolean","defaultValue","true"],["uxd-api-property","","name","badgeSize","type","'small' | 'medium' | 'large'","defaultValue","medium"],["uxd-api-property","","name","badgeHidden","type","boolean","defaultValue","false"],[3,"minimal"],["heading","HTML"],["language","html",3,"content"],["heading","TypeScript"],["language","javascript",3,"content"]],template:function(l,o){1&l&&(n.TgZ(0,"div",0)(1,"div",1)(2,"button",2),n._uU(3," Tasks "),n.qZA()(),n.TgZ(4,"div",3),n._UZ(5,"ux-icon",4),n.qZA()(),n.TgZ(6,"div",5)(7,"div",6)(8,"ux-accordion")(9,"ux-accordion-panel",7)(10,"div",8)(11,"div",9)(12,"label",10),n._uU(13,"uxBadge"),n.qZA(),n.TgZ(14,"div",11)(15,"input",12),n.NdJ("ngModelChange",function(d){return o.badgeContent=d}),n.qZA()()(),n.TgZ(16,"div",9)(17,"label",13),n._uU(18,"badgeMaxValue"),n.qZA(),n.TgZ(19,"ux-number-picker-inline",14),n.NdJ("valueChange",function(d){return o.badgeMaxValue=d}),n.qZA()()(),n.TgZ(20,"div",8)(21,"div",15)(22,"label",16),n._uU(23,"badgeColor"),n.qZA(),n.TgZ(24,"div",11)(25,"input",17),n.NdJ("ngModelChange",function(d){return o.selectedColor=d}),n.qZA()()(),n.TgZ(26,"div",15)(27,"label",18),n._uU(28,"badgeBorderColor"),n.qZA(),n.TgZ(29,"div",11)(30,"input",17),n.NdJ("ngModelChange",function(d){return o.selectedBorderColor=d}),n.qZA()()()(),n.TgZ(31,"div",8)(32,"div",19)(33,"label",20),n._uU(34,"badgeVerticalPosition"),n.qZA()(),n.TgZ(35,"div",19)(36,"ux-radio-button",21),n.NdJ("valueChange",function(d){return o.badgeVerticalPosition=d}),n._uU(37,"above"),n.qZA(),n.TgZ(38,"ux-radio-button",22),n.NdJ("valueChange",function(d){return o.badgeVerticalPosition=d}),n._uU(39,"below"),n.qZA()(),n.TgZ(40,"div",19)(41,"label",20),n._uU(42,"badgeHorizontalPosition"),n.qZA()(),n.TgZ(43,"div",19)(44,"ux-radio-button",23),n.NdJ("valueChange",function(d){return o.badgeHorizontalPosition=d}),n._uU(45,"before"),n.qZA(),n.TgZ(46,"ux-radio-button",24),n.NdJ("valueChange",function(d){return o.badgeHorizontalPosition=d}),n._uU(47,"after"),n.qZA()()(),n.TgZ(48,"div",8)(49,"div",25)(50,"label",20),n._uU(51,"badgeSize"),n.qZA()(),n.TgZ(52,"div",26)(53,"ux-radio-button",27),n.NdJ("valueChange",function(d){return o.badgeSize=d}),n._uU(54,"small"),n.qZA(),n.TgZ(55,"ux-radio-button",28),n.NdJ("valueChange",function(d){return o.badgeSize=d}),n._uU(56,"medium"),n.qZA(),n.TgZ(57,"ux-radio-button",29),n.NdJ("valueChange",function(d){return o.badgeSize=d}),n._uU(58,"large"),n.qZA()(),n.TgZ(59,"div",19)(60,"ux-checkbox",30),n.NdJ("valueChange",function(d){return o.badgeOverlap=d}),n._uU(61,"badgeOverlap"),n.qZA()(),n.TgZ(62,"div",19)(63,"ux-checkbox",30),n.NdJ("valueChange",function(d){return o.badgeHidden=d}),n._uU(64,"badgeHidden"),n.qZA()()()()()()(),n._UZ(65,"hr"),n.TgZ(66,"p"),n._uU(67," The "),n.TgZ(68,"code"),n._uU(69,"uxBadge"),n.qZA(),n._uU(70," directive can be added to any element to provide additional information as a badge, such as status text or unread count.\n"),n.qZA(),n.TgZ(71,"p")(72,"strong"),n._uU(73,"Note:"),n.qZA(),n._uU(74," the badge directive relies on the CSS overflow property being set to "),n.TgZ(75,"code"),n._uU(76,"visible"),n.qZA(),n._uU(77," for the subject element due to how the badge element attaches to it. If you want to use "),n.TgZ(78,"code"),n._uU(79,"hidden"),n.qZA(),n._uU(80,", you will need to add a wrapper element around the subject so it only affects the contents."),n.qZA(),n.TgZ(81,"p"),n._uU(82," The appearance and behavior of the directive can be configured using the following properties:\n"),n.qZA(),n.TgZ(83,"uxd-api-properties",31)(84,"tr",32),n._uU(85," The value to display in the badge. "),n.qZA(),n.TgZ(86,"tr",33),n._uU(87," The color you want to use for the background color. This can be a color name from the "),n.TgZ(88,"a",34),n._uU(89,"color palette"),n.qZA(),n._uU(90,", or a CSS Hex/RGB/RGBA value. "),n.qZA(),n.TgZ(91,"tr",35),n._uU(92," The color you want to use for the border of the badge. If this value is not set the badge will have a transparent border. This can be a color name from the "),n.TgZ(93,"a",34),n._uU(94,"color palette"),n.qZA(),n._uU(95,", or a CSS Hex/RGB/RGBA value. "),n.qZA(),n.TgZ(96,"tr",36),n._uU(97," Sets a character or number limit on the content within the badge. If the content is a number and larger than this value it will display this value with an appended "),n.TgZ(98,"strong"),n._uU(99,"+"),n.qZA(),n._uU(100,", otherwise the content will be treated as text and use this value to truncate the number of characters displayed followed by an ellipsis ("),n.TgZ(101,"strong"),n._uU(102,"\u2026"),n.qZA(),n._uU(103,"). "),n.qZA(),n.TgZ(104,"tr",37),n._uU(105," The vertical position of the badge in relation to its subject element. "),n.qZA(),n.TgZ(106,"tr",38),n._uU(107," The horizontal position of the badge in relation to its subject element. "),n.qZA(),n.TgZ(108,"tr",39),n._uU(109," This will determine whether the badge content will overlap its subject element. If overlap is "),n.TgZ(110,"code"),n._uU(111,"false"),n.qZA(),n._uU(112," the badge will start after the end of the subject element, otherwise if it is set to "),n.TgZ(113,"code"),n._uU(114,"true"),n.qZA(),n._uU(115," the badge horizontal center will be at the end of its subject element. "),n.qZA(),n.TgZ(116,"tr",40),n._uU(117," The size of the badge. "),n.qZA(),n.TgZ(118,"tr",41),n._uU(119," Whether the badge is visible. "),n.qZA()(),n.TgZ(120,"p"),n._uU(121,"The following code can be used to create the example above:"),n.qZA(),n.TgZ(122,"ux-tabset",42)(123,"ux-tab",43),n._UZ(124,"uxd-snippet",44),n.qZA(),n.TgZ(125,"ux-tab",45),n._UZ(126,"uxd-snippet",46),n.qZA()()),2&l&&(n.xp6(2),n.Q6J("uxBadge",o.badgeContent)("badgeSize",o.badgeSize)("badgeMaxValue",o.badgeMaxValue)("badgeOverlap",o.badgeOverlap)("badgeColor",o.selectedColor)("badgeBorderColor",o.selectedBorderColor)("badgeHidden",o.badgeHidden)("badgeHorizontalPosition",o.badgeHorizontalPosition)("badgeVerticalPosition",o.badgeVerticalPosition),n.xp6(3),n.Q6J("uxBadge",o.badgeContent)("badgeSize",o.badgeSize)("badgeMaxValue",o.badgeMaxValue)("badgeOverlap",o.badgeOverlap)("badgeColor",o.selectedColor)("badgeBorderColor",o.selectedBorderColor)("badgeHidden",o.badgeHidden)("badgeHorizontalPosition",o.badgeHorizontalPosition)("badgeVerticalPosition",o.badgeVerticalPosition),n.xp6(10),n.Q6J("ngModel",o.badgeContent),n.xp6(4),n.Q6J("value",o.badgeMaxValue),n.xp6(6),n.Q6J("ngModel",o.selectedColor)("ngModelOptions",n.DdM(40,F)),n.xp6(5),n.Q6J("ngModel",o.selectedBorderColor)("ngModelOptions",n.DdM(41,F)),n.xp6(6),n.Q6J("value",o.badgeVerticalPosition),n.xp6(2),n.Q6J("value",o.badgeVerticalPosition),n.xp6(6),n.Q6J("value",o.badgeHorizontalPosition),n.xp6(2),n.Q6J("value",o.badgeHorizontalPosition),n.xp6(7),n.Q6J("value",o.badgeSize),n.xp6(2),n.Q6J("value",o.badgeSize),n.xp6(2),n.Q6J("value",o.badgeSize),n.xp6(3),n.Q6J("value",o.badgeOverlap),n.xp6(3),n.Q6J("value",o.badgeHidden),n.xp6(25),n.Q6J("fragment",o.colorPaletteFragment)("routerLink",n.VKq(42,L,o.colorPaletteDocumentationRoute)),n.xp6(5),n.Q6J("fragment",o.colorPaletteFragment)("routerLink",n.VKq(44,L,o.colorPaletteDocumentationRoute)),n.xp6(29),n.Q6J("minimal",!1),n.xp6(2),n.Q6J("content",o.snippets.compiled.appHtml),n.xp6(2),n.Q6J("content",o.snippets.compiled.appTs))},dependencies:[R.Z,D.U,$.l,X.b,M.$,U.S,q.j,P.G,_.Fj,_.JJ,_.On,N.o,Q.gB,W._,h.rH,z.A,T.i],styles:[".badge-row[_ngcontent-%COMP%]{padding:7px 0}"]})};j=(0,V.gn)([(0,S.cG)("ComponentsBadgeComponent")],j);var nn=r(72079),I=r(25846);class s{constructor(i){this.closingNotifier=i}call(i,l){return l.subscribe(new e(i,this.closingNotifier))}}class e extends I.Ds{constructor(i,l){super(i),this.buffer=[],this.add((0,I.ft)(l,new I.IY(this)))}_next(i){this.buffer.push(i)}notifyNext(){const i=this.buffer;this.buffer=[],this.destination.next(i)}}var t=r(96776),c=r(77369),p=r(60882);function u(m,i){if(1&m){const l=n.EpF();n.TgZ(0,"button",34),n.NdJ("click",function(){const d=n.CHM(l).$implicit,C=n.oxw();return n.KtG(C.notificationService.dismiss(d))}),n._UZ(1,"ux-icon",35),n.qZA(),n.TgZ(2,"div",36)(3,"div",37),n._UZ(4,"ux-icon",38),n.qZA(),n.TgZ(5,"div",39)(6,"h4",40),n._uU(7,"Messages Received"),n.qZA(),n.TgZ(8,"p",41),n._uU(9),n.qZA(),n.TgZ(10,"p",42),n._uU(11),n.ALo(12,"date"),n.qZA()()()}if(2&m){const l=i.$implicit,o=i.data;n.xp6(9),n.Oqu(o.description),n.xp6(2),n.Oqu(n.xi3(12,2,l.date,"EEEE, MMMM d, y, h:mm:ss a"))}}let f=class tn extends J.u{constructor(i,l,o){super(r(84950)),this.notificationService=i,this.colorService=l,this._liveAnnouncer=o,this.duration=4,this.description="You have 16 messages",this.colors=[[new g.D95("primary",this.colorService.getColor("primary").toHex()),new g.D95("accent",this.colorService.getColor("accent").toHex()),new g.D95("chart4",this.colorService.getColor("chart4").toHex()),new g.D95("chart5",this.colorService.getColor("chart5").toHex())],[new g.D95("ok",this.colorService.getColor("ok").toHex()),new g.D95("warning",this.colorService.getColor("warning").toHex()),new g.D95("critical",this.colorService.getColor("critical").toHex())]],this.selected=this.colors[0][1],this.playground={files:{"app.component.html":this.snippets.raw.appHtml,"app.component.ts":this.snippets.raw.appTs,"app.component.css":this.snippets.raw.appCss},modules:[{imports:["NotificationModule","NumberPickerModule","ColorPickerModule","AccordionModule","MenuModule"],library:"@ux-aspects/ux-aspects"},{imports:["A11yModule"],library:"@angular/cdk/a11y"}]},this._notifications=new nn.xQ,this._subscription=this._notifications.pipe(function a(m){return function(l){return l.lift(new s(m))}}(this._notifications.pipe((0,t.b)(1e3)))).subscribe(b=>{this._liveAnnouncer.announce(b.map(d=>`Notification: ${d}.`).join())})}ngOnDestroy(){this._subscription.unsubscribe(),this._notifications.complete()}showNotification(i){this.notificationService.show(i,{duration:this.duration,backgroundColor:this.selected.hex},{description:this.description}),this._notifications.next(this.description)}dismissNotifications(){this.notificationService.dismissAll()}static#n=this.\u0275fac=function(l){return new(l||tn)(n.Y36(g.gqp),n.Y36(g.x4Z),n.Y36(w.Kd))};static#a=this.\u0275cmp=n.Xpm({type:tn,selectors:[["uxd-notifications"]],hostBindings:function(l,o){1&l&&n.NdJ("keydown.escape",function(){return o.dismissNotifications()},!1,n.evT)},features:[n.qOj],decls:171,vars:8,consts:[["direction","above","position","top-right"],[1,"btn-container"],[1,"btn","button-primary","m-r-sm",3,"click"],[1,"btn","button-secondary","m-r-sm",3,"click"],["notification",""],[1,"row","uxd-customize-example"],[1,"col-md-12"],["heading","Customize Example...",1,"accordion-chevron"],[1,"row","uxd-customize-row"],[1,"col-md-6","col-sm-12"],["for","backgroundColor"],[3,"colors","selected","selectedChange"],["for","duration"],["min","0","max","3600",3,"value","valueChange"],[1,"input-group","m-b-sm"],["type","text","placeholder","Enter description",1,"form-control",3,"ngModel","ngModelChange"],["tableTitle","Notification List"],["uxd-api-property","","name","position","type","string","defaultValue","top-right"],["uxd-api-property","","name","direction","type","string","defaultValue","above"],["tableTitle","Notification Service"],["uxd-api-property","","name","show","args","TemplateRef, NotificationOptions?, object?","returns","NotificationRef"],["uxd-api-property","","name","getHistory","returns","NotificationRef[]"],["uxd-api-property","","name","dismiss","args","NotificationRef"],["uxd-api-property","","name","dismissAll"],["uxd-api-property","","name","remove","args","NotificationRef"],["uxd-api-property","","name","removeAll"],["tableTitle","NotificationOptions Interface"],["uxd-api-property","","name","duration","type","number","defaultValue","4"],["uxd-api-property","","name","backgroundColor","type","string","defaultValue","#7b63a3"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"],["heading","CSS"],["tabindex","0","aria-label","Dismiss Notification",1,"dismiss",3,"click"],["name","close"],[1,"notification-wrapper"],[1,"notification-icon"],["name","chat"],[1,"notification-content"],[1,"notification-title"],[1,"notification-description"],[1,"notification-timestamp"]],template:function(l,o){if(1&l){const b=n.EpF();n._UZ(0,"ux-notification-list",0),n.TgZ(1,"div",1)(2,"button",2),n.NdJ("click",function(){n.CHM(b);const C=n.MAs(7);return n.KtG(o.showNotification(C))}),n._uU(3,"Show Notification"),n.qZA(),n.TgZ(4,"button",3),n.NdJ("click",function(){return o.notificationService.dismissAll()}),n._uU(5,"Dismiss Notifications"),n.qZA()(),n.YNc(6,u,13,5,"ng-template",null,4,n.W1O),n._UZ(8,"hr"),n.TgZ(9,"div",5)(10,"div",6)(11,"ux-accordion")(12,"ux-accordion-panel",7)(13,"div",8)(14,"div",9)(15,"label",10),n._uU(16,"backgroundColor"),n.qZA(),n.TgZ(17,"uxd-color-picker-dropdown",11),n.NdJ("selectedChange",function(C){return o.selected=C}),n.qZA()(),n.TgZ(18,"div",9)(19,"label",12),n._uU(20,"duration"),n.qZA(),n.TgZ(21,"ux-number-picker",13),n.NdJ("valueChange",function(C){return o.duration=C}),n.qZA()()(),n.TgZ(22,"div",8)(23,"div",9)(24,"label",10),n._uU(25,"description"),n.qZA(),n.TgZ(26,"div",14)(27,"input",15),n.NdJ("ngModelChange",function(C){return o.description=C}),n.qZA()()()()()()()(),n.TgZ(28,"p"),n._uU(29,"Notifications can be used to inform the user of occurring events or to alert the user of something that may require their attention. The "),n.TgZ(30,"code"),n._uU(31,"ux-notification-list"),n.qZA(),n._uU(32," component can be used to display a list of notifications."),n.qZA(),n.TgZ(33,"p"),n._uU(34,"The following attributes can be used to customize the "),n.TgZ(35,"code"),n._uU(36,"ux-notification-list"),n.qZA(),n._uU(37," component:"),n.qZA(),n.TgZ(38,"uxd-api-properties",16)(39,"tr",17),n._uU(40," Sets the position of the list of notifications within the browser window. The possible options are: "),n.TgZ(41,"code"),n._uU(42,"top-right"),n.qZA(),n._uU(43,", "),n.TgZ(44,"code"),n._uU(45,"top-left"),n.qZA(),n._uU(46,", "),n.TgZ(47,"code"),n._uU(48,"bottom-left"),n.qZA(),n._uU(49," and "),n.TgZ(50,"code"),n._uU(51,"bottom-right"),n.qZA(),n._uU(52,". "),n.qZA(),n.TgZ(53,"tr",18),n._uU(54," Sets the order in which notifications are displayed: "),n.TgZ(55,"ul")(56,"li")(57,"code"),n._uU(58,"above"),n.qZA(),n._uU(59," - newer notifications will appear above older ones."),n.qZA(),n.TgZ(60,"li")(61,"code"),n._uU(62,"below"),n.qZA(),n._uU(63," - newer notifications will appear below older ones."),n.qZA()()()(),n.TgZ(64,"p"),n._uU(65,"Notifications are controlled by the "),n.TgZ(66,"code"),n._uU(67,"notificationService"),n.qZA(),n._uU(68,". It is recommended that the service is injected into the "),n.TgZ(69,"code"),n._uU(70,"AppComponent"),n.qZA(),n._uU(71,". The following functions can be called on the service:"),n.qZA(),n.TgZ(72,"uxd-api-properties",19)(73,"tr",20)(74,"p"),n._uU(75," This function should be called to show a notification. "),n.qZA(),n.TgZ(76,"p"),n._uU(77," It should be given a "),n.TgZ(78,"code"),n._uU(79,"TemplateRef"),n.qZA(),n._uU(80," containing the content to be displayed. Optionally it can be passed a second argument, a "),n.TgZ(81,"code"),n._uU(82,"NotificationOptions"),n.qZA(),n._uU(83," object containing properties to configure the notification. "),n.qZA(),n.TgZ(84,"p"),n._uU(85," An optional third argument can be given. This is an object containing any additional information you want to provide to the template. This can be accessed by adding a "),n.TgZ(86,"code"),n._uU(87,'let-data="data"'),n.qZA(),n._uU(88," attribute to the "),n.TgZ(89,"code"),n._uU(90,"ng-template"),n.qZA(),n._uU(91," element. "),n.qZA(),n.TgZ(92,"p"),n._uU(93," It will return a "),n.TgZ(94,"code"),n._uU(95,"NotificationRef"),n.qZA(),n._uU(96," object which will contain the information passed to the "),n.TgZ(97,"code"),n._uU(98,"showNotification"),n.qZA(),n._uU(99," function along with a "),n.TgZ(100,"code"),n._uU(101,"date"),n.qZA(),n._uU(102," property which will contain the time at which the notification was shown. "),n.qZA()(),n.TgZ(103,"tr",21),n._uU(104," This function will return a list of all the notifications that have been shown. "),n.qZA(),n.TgZ(105,"tr",22),n._uU(106," This function can be called to dismiss a notification. It should be passed the object to dismiss. "),n.qZA(),n.TgZ(107,"tr",23),n._uU(108," This function will dismiss any currently visible notifications. "),n.qZA(),n.TgZ(109,"tr",24),n._uU(110," This function can be called to remove a notification from the notification history. If the notification is currently visible it will also be dismissed. It should be passed the "),n.TgZ(111,"code"),n._uU(112,"notificationRef"),n.qZA(),n._uU(113," to dismiss. "),n.qZA(),n.TgZ(114,"tr",25),n._uU(115," This function can be called to remove all notifications from the notification history. If any notifications are currently visible they will also be dismissed. "),n.qZA()(),n.TgZ(116,"p"),n._uU(117,"The content of the notification should be specified inside an "),n.TgZ(118,"code"),n._uU(119,"ng-template"),n.qZA(),n._uU(120," element. The "),n.TgZ(121,"code"),n._uU(122,"ng-template"),n.qZA(),n._uU(123," property "),n.TgZ(124,"code"),n._uU(125,"let-notificationRef"),n.qZA(),n._uU(126," can be used to access the "),n.TgZ(127,"code"),n._uU(128,"NotificationRef"),n.qZA(),n._uU(129," object returned from the service."),n.qZA(),n.TgZ(130,"p"),n._uU(131,"A second object may optionally be passed to the "),n.TgZ(132,"code"),n._uU(133,"showNotification"),n.qZA(),n._uU(134," function. The following options can be passed in this object to configure the notification:"),n.qZA(),n.TgZ(135,"uxd-api-properties",26)(136,"tr",27),n._uU(137," Sets the duration (in seconds) the notification should appear before automatically dismissing. A value of "),n.TgZ(138,"code"),n._uU(139,"0"),n.qZA(),n._uU(140," will show the notification until manually dismissed. "),n.qZA(),n.TgZ(141,"tr",28),n._uU(142," Sets the background color of the notification. "),n.qZA()(),n.TgZ(143,"p"),n._uU(144," To improve accessbility the "),n.TgZ(145,"code"),n._uU(146,"LiveAnnouncer"),n.qZA(),n._uU(147," can be used to provide audio feedback to screen readers by announcing the content of the notification. Additionally, the escape key can be used to dismiss all notifications by using "),n.TgZ(148,"code"),n._uU(149,"@HostListener('document:keydown.escape')"),n.qZA(),n._uU(150,".\n"),n.qZA(),n.TgZ(151,"p"),n._uU(152,"The following code can be used to create the example above:"),n.qZA(),n.TgZ(153,"ux-tabset",29)(154,"ux-tab",30),n._UZ(155,"uxd-snippet",31),n.qZA(),n.TgZ(156,"ux-tab",32),n._UZ(157,"uxd-snippet",31),n.qZA(),n.TgZ(158,"ux-tab",33),n._UZ(159,"uxd-snippet",31),n.qZA()(),n.TgZ(160,"blockquote")(161,"p")(162,"strong"),n._uU(163,"Note"),n.qZA(),n._uU(164,": The "),n.TgZ(165,"code"),n._uU(166,"BrowserAnimationsModule"),n.qZA(),n._uU(167," must be imported from "),n.TgZ(168,"code"),n._uU(169,"'@angular/platform-browser/animations'"),n.qZA(),n._uU(170,"."),n.qZA()()}2&l&&(n.xp6(17),n.Q6J("colors",o.colors)("selected",o.selected),n.xp6(4),n.Q6J("value",o.duration),n.xp6(6),n.Q6J("ngModel",o.description),n.xp6(126),n.Q6J("minimal",!1),n.xp6(2),n.Q6J("content",o.snippets.compiled.appHtml),n.xp6(2),n.Q6J("content",o.snippets.compiled.appTs),n.xp6(2),n.Q6J("content",o.snippets.compiled.appCss))},dependencies:[R.Z,D.U,M.$,U.S,c._,q.j,P.G,_.Fj,_.JJ,_.On,N.o,p.Z,Q.gB,z.A,T.i,x.uU],styles:[".notification-wrapper[_ngcontent-%COMP%]{display:flex;padding:0 5px;align-items:center;height:100%}.notification-icon[_ngcontent-%COMP%]{display:flex;flex:none;width:50px;justify-content:center;align-items:center;align-self:center;font-size:1.5rem}.notification-content[_ngcontent-%COMP%]{display:flex;flex-direction:column;width:calc(100% - 50px)}.notification-title[_ngcontent-%COMP%], .notification-description[_ngcontent-%COMP%], .notification-timestamp[_ngcontent-%COMP%]{line-height:initial;margin:0}.notification-title[_ngcontent-%COMP%]{margin-bottom:3px;font-weight:600;font-size:1.125rem}.notification-description[_ngcontent-%COMP%]{flex:none;margin-right:5px;margin-bottom:3px;word-break:break-all}.notification-timestamp[_ngcontent-%COMP%]{flex:none;font-size:.8125rem;opacity:.8}"],changeDetection:0})};f=(0,V.gn)([(0,S.cG)("ComponentsNotificationsComponent")],f);const Z=[B,j,f],k=[{path:"**",component:en.R,data:{category:E.N.resolveCategoryData(E.I.Components,"Notifications")}}];let v=(()=>{class m{constructor(l,o){o.registerResolver(l,Z)}static#n=this.\u0275fac=function(o){return new(o||m)(n.LFG(n._Vd),n.LFG(E.N))};static#a=this.\u0275mod=n.oAB({type:m});static#s=this.\u0275inj=n.cJS({imports:[w.rt,g.fxp,g.nMh,g.TXv,g.nDK,x.ez,G.N,_.u5,g.QX1,g.PQW,g.PN6,g.cc7,h.Bz.forChild(k),g.f_l]})}return m})()},21802:(y,A,r)=>{"use strict";function g(a,s,e,t){var u,c=arguments.length,p=c<3?s:null===t?t=Object.getOwnPropertyDescriptor(s,e):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)p=Reflect.decorate(a,s,e,t);else for(var f=a.length-1;f>=0;f--)(u=a[f])&&(p=(c<3?u(p):c>3?u(s,e,p):u(s,e))||p);return c>3&&p&&Object.defineProperty(s,e,p),p}r.d(A,{gn:()=>g}),"function"==typeof SuppressedError&&SuppressedError}}]);
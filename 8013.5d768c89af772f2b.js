(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8013],{9810:l=>{l.exports={snippet:'<span class="token selector">.btn-container.demo-color-picker-close</span> <span class="token punctuation">{</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 0 8px 8px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.btn-container.demo-color-picker-close > button</span> <span class="token punctuation">{</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',example:".btn-container.demo-color-picker-close {\n    margin: 0 8px 8px;\n}\n\n.btn-container.demo-color-picker-close > button {\n    width: 100%;\n}\n"}},74953:l=>{l.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-color-picker-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>\n        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span>\n        <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Select a color<span class="token punctuation">"</span></span>\n        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-secondary dropdown-toggle<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[uxMenuTriggerFor]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>colorPickerDropdown<span class="token punctuation">"</span></span>\n    <span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ux-color-picker-button-preview<span class="token punctuation">"</span></span> <span class="token attr-name">[style.background-color]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selected.rgba<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chevron-down<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>m-l-lg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        Selected: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span>{{selected.hex}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span> <span class="token entity named-entity" title="&mdash;">&amp;mdash;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span>{{selected.rgba}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-menu</span> <span class="token attr-name">#colorPickerDropdown</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>color-picker-dropdown<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-color-picker</span>\n        <span class="token attr-name">[colors]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>colors<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[(selected)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selected<span class="token punctuation">"</span></span>\n        <span class="token attr-name">(selectedChange)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onColorPickerSelectedChange()<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[columns]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>columns<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[buttonStyle]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>buttonStyle<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[buttonSize]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>buttonSize<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[showTooltips]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showTooltips<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[showInput]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showInput<span class="token punctuation">"</span></span>\n        <span class="token attr-name">(inputSubmit)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>close()<span class="token punctuation">"</span></span>\n        <span class="token attr-name">uxMenuInitialFocus</span>\n    <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-color-picker</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showInput<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-container demo-color-picker-close<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-primary<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>close()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Accept<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-menu</span><span class="token punctuation">></span></span>\n',example:'<div class="demo-color-picker-container">\n    <button\n        type="button"\n        aria-label="Select a color"\n        class="btn button-secondary dropdown-toggle"\n        [uxMenuTriggerFor]="colorPickerDropdown"\n    >\n        <span class="ux-color-picker-button-preview" [style.background-color]="selected.rgba">\n            &nbsp;\n        </span>\n        <ux-icon name="chevron-down"></ux-icon>\n    </button>\n\n    <span class="m-l-lg">\n        Selected: <code>{{selected.hex}}</code> &mdash; <code>{{selected.rgba}}</code>\n    </span>\n</div>\n\n<ux-menu #colorPickerDropdown id="color-picker-dropdown">\n    <ux-color-picker\n        [colors]="colors"\n        [(selected)]="selected"\n        (selectedChange)="onColorPickerSelectedChange()"\n        [columns]="columns"\n        [buttonStyle]="buttonStyle"\n        [buttonSize]="buttonSize"\n        [showTooltips]="showTooltips"\n        [showInput]="showInput"\n        (inputSubmit)="close()"\n        uxMenuInitialFocus\n    ></ux-color-picker>\n\n    <div *ngIf="showInput" class="btn-container demo-color-picker-close">\n        <button type="button" class="btn button-primary" (click)="close()">Accept</button>\n    </div>\n</ux-menu>\n'}},22807:l=>{l.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> ViewChild <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ColorPickerColor<span class="token punctuation">,</span> ColorService<span class="token punctuation">,</span> MenuTriggerDirective <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">selector</span><span class="token operator">:</span> <span class="token string">\'app-root\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">templateUrl</span><span class="token operator">:</span> <span class="token string">\'app.component.html\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">styleUrls</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'app.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    @<span class="token function">ViewChild</span><span class="token punctuation">(</span>MenuTriggerDirective<span class="token punctuation">)</span> menuTrigger<span class="token operator">?</span><span class="token operator">:</span> MenuTriggerDirective<span class="token punctuation">;</span>\n\n    <span class="token literal-property property">colors</span><span class="token operator">:</span> ColorPickerColor<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token literal-property property">selected</span><span class="token operator">:</span> ColorPickerColor<span class="token punctuation">;</span>\n    columns <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>\n    buttonStyle <span class="token operator">=</span> <span class="token string">\'circle\'</span><span class="token punctuation">;</span>\n    buttonSize <span class="token operator">=</span> <span class="token string">\'md\'</span><span class="token punctuation">;</span>\n    showTooltips <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    showInput <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">private</span> _colorNames <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">[</span>\n            <span class="token string">\'Primary\'</span><span class="token punctuation">,</span>\n            <span class="token string">\'Accent\'</span><span class="token punctuation">,</span>\n            <span class="token string">\'Secondary\'</span><span class="token punctuation">,</span>\n            <span class="token string">\'Alternate1\'</span><span class="token punctuation">,</span>\n            <span class="token string">\'Alternate2\'</span><span class="token punctuation">,</span>\n            <span class="token string">\'Alternate3\'</span><span class="token punctuation">,</span>\n            <span class="token string">\'Vibrant1\'</span><span class="token punctuation">,</span>\n            <span class="token string">\'Vibrant2\'</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">[</span><span class="token string">\'Grey1\'</span><span class="token punctuation">,</span> <span class="token string">\'Grey2\'</span><span class="token punctuation">,</span> <span class="token string">\'Grey3\'</span><span class="token punctuation">,</span> <span class="token string">\'Grey4\'</span><span class="token punctuation">,</span> <span class="token string">\'Grey5\'</span><span class="token punctuation">,</span> <span class="token string">\'Grey6\'</span><span class="token punctuation">,</span> <span class="token string">\'Grey7\'</span><span class="token punctuation">,</span> <span class="token string">\'Grey8\'</span><span class="token punctuation">]</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">colorService</span><span class="token operator">:</span> ColorService</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>colors <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_colorNames<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">row</span> <span class="token operator">=></span>\n            row<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">colorName</span> <span class="token operator">=></span> <span class="token keyword">new</span> <span class="token class-name">ColorPickerColor</span><span class="token punctuation">(</span>colorName<span class="token punctuation">,</span> colorService<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>colorName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>selected <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>menuTrigger<span class="token operator">?.</span><span class="token function">closeMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">onColorPickerSelectedChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>showInput<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n',example:"import { Component, ViewChild } from '@angular/core';\nimport { ColorPickerColor, ColorService, MenuTriggerDirective } from '@ux-aspects/ux-aspects';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css']\n})\nexport class AppComponent {\n\n    @ViewChild(MenuTriggerDirective) menuTrigger?: MenuTriggerDirective;\n\n    colors: ColorPickerColor[][];\n    selected: ColorPickerColor;\n    columns = 4;\n    buttonStyle = 'circle';\n    buttonSize = 'md';\n    showTooltips = false;\n    showInput = false;\n\n    private _colorNames = [\n        [\n            'Primary',\n            'Accent',\n            'Secondary',\n            'Alternate1',\n            'Alternate2',\n            'Alternate3',\n            'Vibrant1',\n            'Vibrant2'\n        ],\n        ['Grey1', 'Grey2', 'Grey3', 'Grey4', 'Grey5', 'Grey6', 'Grey7', 'Grey8']\n    ];\n\n    constructor(colorService: ColorService) {\n        this.colors = this._colorNames.map(row =>\n            row.map(colorName => new ColorPickerColor(colorName, colorService.resolve(colorName))));\n        this.selected = this.colors[0][0];\n    }\n\n    close(): void {\n        this.menuTrigger?.closeMenu();\n    }\n\n    onColorPickerSelectedChange(): void {\n        if (!this.showInput) {\n            this.close();\n        }\n    }\n}\n"}},19299:(l,m,a)=>{var r={"./app.css":9810,"./app.html":74953,"./app.ts":22807,"docs/app/pages/components/components-sections/color/color-picker/snippets/app.css":9810,"docs/app/pages/components/components-sections/color/color-picker/snippets/app.html":74953,"docs/app/pages/components/components-sections/color/color-picker/snippets/app.ts":22807};function i(o){var k=d(o);return a(k)}function d(o){if(!a.o(r,o)){var k=new Error("Cannot find module '"+o+"'");throw k.code="MODULE_NOT_FOUND",k}return r[o]}i.keys=function(){return Object.keys(r)},i.resolve=d,l.exports=i,i.id=19299},78013:(l,m,a)=>{"use strict";a.r(m),a.d(m,{ComponentsColorModule:()=>Q});var r=a(36895),i=a(84719),d=a(40239),o=a(20047),k=a(3745),g=a(73875),h=a(74427),v=a(48342),C=a(20391),b=a(34610),n=a(55062),y=a(95014),Z=a(44396),T=a(89243),f=a(56985),x=a(30642),w=a(28009),A=a(39327),U=a(75079),_=a(60169),S=a(9900),q=a(49692),P=a(36898),M=a(46633),G=a(24017),I=a(73962),N=a(33403);function z(p,c){if(1&p){const s=n.EpF();n.TgZ(0,"div",56)(1,"button",57),n.NdJ("click",function(){n.CHM(s);const e=n.oxw();return n.KtG(e.close())}),n._uU(2,"Accept"),n.qZA()()}}let u=class extends C.u{constructor(c){super(a(19299)),this.playground={files:{"app.component.html":this.snippets.raw.appHtml,"app.component.ts":this.snippets.raw.appTs,"app.component.css":this.snippets.raw.appCss},modules:[{imports:["ColorPickerModule, MenuModule"],library:"@ux-aspects/ux-aspects"}]},this.columns=4,this.buttonStyle="circle",this.buttonSize="md",this.showTooltips=!1,this.showInput=!1,this._colorNames=[["Primary","Accent","Secondary","Alternate1","Alternate2","Alternate3","Vibrant1","Vibrant2"],["Grey1","Grey2","Grey3","Grey4","Grey5","Grey6","Grey7","Grey8"]],this.colors=this._colorNames.map(s=>s.map(t=>new o.D95(t,c.resolve(t)))),this.selected=this.colors[0][0]}close(){this.menuTrigger?.closeMenu()}onColorPickerSelectedChange(){this.showInput||this.close()}};u.\u0275fac=function(c){return new(c||u)(n.Y36(o.x4Z))},u.\u0275cmp=n.Xpm({type:u,selectors:[["uxd-color-picker"]],viewQuery:function(c,s){if(1&c&&n.Gf(o.kjj,5),2&c){let t;n.iGM(t=n.CRH())&&(s.menuTrigger=t.first)}},features:[n.qOj],decls:190,vars:26,consts:[[1,"demo-color-picker-container"],["type","button","aria-label","Select a color",1,"btn","button-secondary","dropdown-toggle",3,"uxMenuTriggerFor"],[1,"ux-color-picker-button-preview"],["name","chevron-down"],[1,"m-l-lg"],["id","color-picker-dropdown"],["colorPickerDropdown",""],["uxMenuInitialFocus","",3,"colors","selected","columns","buttonStyle","buttonSize","showTooltips","showInput","selectedChange","inputSubmit"],["class","btn-container demo-color-picker-close",4,"ngIf"],[1,"uxd-customize-example"],["heading","Customize Example...",1,"accordion-chevron"],[1,"row","uxd-customize-row"],[1,"col-md-2","col-sm-3"],["for","columns"],[1,"col-md-4","col-sm-9"],["name","columns",3,"value","min","valueChange"],[1,"col-md-3","col-sm-6"],[3,"value","valueChange"],["for","buttonStyle"],["option","circle",3,"value","valueChange"],["option","square",3,"value","valueChange"],["for","buttonSize"],["option","sm",3,"value","valueChange"],["option","md",3,"value","valueChange"],["option","lg",3,"value","valueChange"],["routerLink","/components/buttons","fragment","dropdowns"],["routerLink","/components/utilities","fragment","color-service"],["tableTitle","Inputs"],["uxd-api-property","","name","colors","type","(ColorPickerColor | string)[] | (ColorPickerColor | string)[][]"],["uxd-api-property","","name","selected","type","ColorPickerColor"],["uxd-api-property","","name","columns","type","number","defaultValue","6"],["uxd-api-property","","name","buttonStyle","type","'square' | 'circle'","defaultValue","circle"],["uxd-api-property","","name","buttonSize","type","'sm' | 'md' | 'lg'","defaultValue","md"],["uxd-api-property","","name","showTooltips","type","boolean","defaultValue","false"],["uxd-api-property","","name","showInput","type","boolean","defaultValue","false"],["uxd-api-property","","name","inputMode","type","'hex' | 'rgba'","defaultValue","hex"],["uxd-api-property","","name","colorAriaLabel","type","(color: ColorPickerColor) => string"],["uxd-api-property","","name","switchModeAriaLabel","type","(mode: ColorPickerInputMode) => string"],["uxd-api-property","","name","inputAriaLabel","type","(mode: ColorPickerInputMode) => string"],["tableTitle","Outputs"],["uxd-api-property","","name","selectedChange","type","ColorPickerColor"],["uxd-api-property","","name","inputSubmit","type","void"],["uxd-api-property","","name","inputModeChange","type","'hex' | 'rgba'"],["uxd-api-property","","name","constructor","args","name: string, value: string, inputMode?: 'hex' | 'rgba'"],["uxd-api-property","","name","name","type","string"],["uxd-api-property","","name","hex","type","string"],["uxd-api-property","","name","rgba","type","string"],["uxd-api-property","","name","r","type","number"],["uxd-api-property","","name","g","type","number"],["uxd-api-property","","name","b","type","number"],["uxd-api-property","","name","a","type","number"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"],["heading","CSS"],[1,"btn-container","demo-color-picker-close"],["type","button",1,"btn","button-primary",3,"click"]],template:function(c,s){if(1&c&&(n.TgZ(0,"div",0)(1,"button",1)(2,"span",2),n._uU(3," \xa0 "),n.qZA(),n._UZ(4,"ux-icon",3),n.qZA(),n.TgZ(5,"span",4),n._uU(6," Selected: "),n.TgZ(7,"code"),n._uU(8),n.qZA(),n._uU(9," \u2014 "),n.TgZ(10,"code"),n._uU(11),n.qZA()()(),n.TgZ(12,"ux-menu",5,6)(14,"ux-color-picker",7),n.NdJ("selectedChange",function(e){return s.selected=e})("selectedChange",function(){return s.onColorPickerSelectedChange()})("inputSubmit",function(){return s.close()}),n.qZA(),n.YNc(15,z,3,0,"div",8),n.qZA(),n.TgZ(16,"div",9)(17,"ux-accordion")(18,"ux-accordion-panel",10)(19,"div",11)(20,"div",12)(21,"label",13),n._uU(22,"columns"),n.qZA()(),n.TgZ(23,"div",14)(24,"ux-number-picker",15),n.NdJ("valueChange",function(e){return s.columns=e}),n.qZA()(),n.TgZ(25,"div",16)(26,"ux-checkbox",17),n.NdJ("valueChange",function(e){return s.showInput=e}),n._uU(27,"showInput"),n.qZA()(),n.TgZ(28,"div",16)(29,"ux-checkbox",17),n.NdJ("valueChange",function(e){return s.showTooltips=e}),n._uU(30,"showTooltips"),n.qZA()()(),n.TgZ(31,"div",11)(32,"div",12)(33,"label",18),n._uU(34,"buttonStyle"),n.qZA()(),n.TgZ(35,"div",14)(36,"ux-radio-button",19),n.NdJ("valueChange",function(e){return s.buttonStyle=e}),n._uU(37,"circle"),n.qZA(),n.TgZ(38,"ux-radio-button",20),n.NdJ("valueChange",function(e){return s.buttonStyle=e}),n._uU(39,"square"),n.qZA()(),n.TgZ(40,"div",12)(41,"label",21),n._uU(42,"buttonSize"),n.qZA()(),n.TgZ(43,"div",14)(44,"ux-radio-button",22),n.NdJ("valueChange",function(e){return s.buttonSize=e}),n._uU(45,"sm"),n.qZA(),n.TgZ(46,"ux-radio-button",23),n.NdJ("valueChange",function(e){return s.buttonSize=e}),n._uU(47,"md"),n.qZA(),n.TgZ(48,"ux-radio-button",24),n.NdJ("valueChange",function(e){return s.buttonSize=e}),n._uU(49,"lg"),n.qZA()()()()()(),n._UZ(50,"hr"),n.TgZ(51,"p"),n._uU(52," A color picker can be added using the "),n.TgZ(53,"code"),n._uU(54,"ux-color-picker"),n.qZA(),n._uU(55," component. The example above shows the color picker hosted in a "),n.TgZ(56,"a",25),n._uU(57,"dropdown button"),n.qZA(),n._uU(58,"; however, it could equally be added to a modal or side panel. Colors can be picked from a pre-determined swatch, or optionally edited in hex or RGBA format with a live preview. This example constructs a swatch of UX Aspects theme colors using the "),n.TgZ(59,"a",26),n._uU(60,"color service"),n.qZA(),n._uU(61,".\n"),n.qZA(),n.TgZ(62,"p"),n._uU(63," The following properties can be used to customize and interact with "),n.TgZ(64,"code"),n._uU(65,"ux-color-picker"),n.qZA(),n._uU(66,".\n"),n.qZA(),n.TgZ(67,"uxd-api-properties",27)(68,"tr",28)(69,"p"),n._uU(70," The collection of colors to display in the color swatch. "),n.qZA(),n.TgZ(71,"p"),n._uU(72," Colors can be specified either as a string, which is the hex or RGBA value of the color; or as a "),n.TgZ(73,"code"),n._uU(74,"ColorPickerColor"),n.qZA(),n._uU(75," object, which allows a name to be associated with the color. See below for details of the "),n.TgZ(76,"code"),n._uU(77,"ColorPickerColor"),n.qZA(),n._uU(78," class. "),n.qZA(),n.TgZ(79,"p"),n._uU(80," This property is either a one-dimensional or two-dimensional array. If a two-dimensional array is provided, the colors will be split into rows, providing more control over the appearance of the swatch. "),n.qZA()(),n.TgZ(81,"tr",29),n._uU(82," The currently selected color. If this is one of the colors in the "),n.TgZ(83,"code"),n._uU(84,"colors"),n.qZA(),n._uU(85," collection, it will be visually highlighted in the swatch. It will also be shown in the input panel, if enabled (see "),n.TgZ(86,"code"),n._uU(87,"showInput"),n.qZA(),n._uU(88,"). Note that this will always be a "),n.TgZ(89,"code"),n._uU(90,"ColorPickerColor"),n.qZA(),n._uU(91," object, even if plain strings are provided to the "),n.TgZ(92,"code"),n._uU(93,"colors"),n.qZA(),n._uU(94," property. See below for details of the "),n.TgZ(95,"code"),n._uU(96,"ColorPickerColor"),n.qZA(),n._uU(97," class. "),n.qZA(),n.TgZ(98,"tr",30),n._uU(99," The number of columns to display in the color swatch. Set this to -1 if the width should be specified by a stylesheet instead, e.g. to provide a responsive layout. "),n.qZA(),n.TgZ(100,"tr",31),n._uU(101," The style of the color swatch buttons. "),n.qZA(),n.TgZ(102,"tr",32),n._uU(103," The size of the color swatch buttons. Three size variants are currently supported. "),n.qZA(),n.TgZ(104,"tr",33),n._uU(105," Whether to show tooltips above the color swatch buttons. These contain the color name if provided; otherwise the color hex/RGBA value. "),n.qZA(),n.TgZ(106,"tr",34),n._uU(107," Whether to show the hex/RGBA input panel. "),n.qZA(),n.TgZ(108,"tr",35),n._uU(109," The default input mode to display in the input panel. The user can switch modes using the toggle button. "),n.qZA(),n.TgZ(110,"tr",36),n._uU(111," Define a function that returns an aria-label for a "),n.TgZ(112,"code"),n._uU(113,"ColorPickerColor"),n.qZA(),n._uU(114,". "),n.qZA(),n.TgZ(115,"tr",37),n._uU(116," Define a function that returns an aria-label for the button that switches input modes. "),n.qZA(),n.TgZ(117,"tr",38),n._uU(118," Define a function that returns an aria-label for the input control. "),n.qZA()(),n.TgZ(119,"uxd-api-properties",39)(120,"tr",40),n._uU(121," Emitted when the user changes the selected color, either by clicking a color swatch button, or entering a valid color value into the input panel text field. "),n.qZA(),n.TgZ(122,"tr",41),n._uU(123," Emitted when the user presses enter in the input panel text field. This can be used to commit a color change and/or close a popup. "),n.qZA(),n.TgZ(124,"tr",42),n._uU(125," Emitted when the user changes the colour input mode. "),n.qZA()(),n.TgZ(126,"h4"),n._uU(127,"ColorPickerColor"),n.qZA(),n.TgZ(128,"p"),n._uU(129," This is the type used by "),n.TgZ(130,"code"),n._uU(131,"ux-color-picker"),n.qZA(),n._uU(132," to define available colors and return the selected color. This provides access to the hex and RGBA values of any color, as well as individual color components.\n"),n.qZA(),n.TgZ(133,"uxd-api-properties")(134,"tr",43)(135,"ul")(136,"li")(137,"code"),n._uU(138,"name"),n.qZA(),n._uU(139,": The human readable name of the color."),n.qZA(),n.TgZ(140,"li")(141,"code"),n._uU(142,"value"),n.qZA(),n._uU(143,": The hex or RGBA value of the color. If this cannot be parsed then an error will be thrown. "),n.qZA(),n.TgZ(144,"li")(145,"code"),n._uU(146,"inputMode"),n.qZA(),n._uU(147,": Whether "),n.TgZ(148,"code"),n._uU(149,"value"),n.qZA(),n._uU(150," is in hex or RGBA format. If this is specified, then the format of "),n.TgZ(151,"code"),n._uU(152,"value"),n.qZA(),n._uU(153," will be preserved, e.g. if short-form hex strings should not be expanded. "),n.qZA()()(),n.TgZ(154,"tr",44),n._uU(155," The human readable name of the color. "),n.qZA(),n.TgZ(156,"tr",45),n._uU(157," The hex value of the color. "),n.qZA(),n.TgZ(158,"tr",46),n._uU(159," The RGBA value of the color. "),n.qZA(),n.TgZ(160,"tr",47),n._uU(161," The red value of the color (0-255). "),n.qZA(),n.TgZ(162,"tr",48),n._uU(163," The green value of the color (0-255). "),n.qZA(),n.TgZ(164,"tr",49),n._uU(165," The blue value of the color (0-255). "),n.qZA(),n.TgZ(166,"tr",50),n._uU(167," The alpha value of the color (0.0-1.0). "),n.qZA()(),n.TgZ(168,"h4"),n._uU(169,"Classes"),n.qZA(),n.TgZ(170,"p"),n._uU(171," The following classes are provided to help style components surrounding the color picker.\n"),n.qZA(),n.TgZ(172,"ul")(173,"li")(174,"code"),n._uU(175,"ux-color-picker-button-preview"),n.qZA(),n._uU(176,": An inline color sample which can be added to the popup button."),n.qZA(),n.TgZ(177,"li")(178,"code"),n._uU(179,"ux-color-picker-dropdown"),n.qZA(),n._uU(180,": Additional styling for a dropdown container."),n.qZA()(),n.TgZ(181,"h4"),n._uU(182,"Example Code"),n.qZA(),n.TgZ(183,"ux-tabset",51)(184,"ux-tab",52),n._UZ(185,"uxd-snippet",53),n.qZA(),n.TgZ(186,"ux-tab",54),n._UZ(187,"uxd-snippet",53),n.qZA(),n.TgZ(188,"ux-tab",55),n._UZ(189,"uxd-snippet",53),n.qZA()()),2&c){const t=n.MAs(13);n.xp6(1),n.Q6J("uxMenuTriggerFor",t),n.xp6(1),n.Udp("background-color",s.selected.rgba),n.xp6(6),n.Oqu(s.selected.hex),n.xp6(3),n.Oqu(s.selected.rgba),n.xp6(3),n.Q6J("colors",s.colors)("selected",s.selected)("columns",s.columns)("buttonStyle",s.buttonStyle)("buttonSize",s.buttonSize)("showTooltips",s.showTooltips)("showInput",s.showInput),n.xp6(1),n.Q6J("ngIf",s.showInput),n.xp6(9),n.Q6J("value",s.columns)("min",-1),n.xp6(2),n.Q6J("value",s.showInput),n.xp6(3),n.Q6J("value",s.showTooltips),n.xp6(7),n.Q6J("value",s.buttonStyle),n.xp6(2),n.Q6J("value",s.buttonStyle),n.xp6(6),n.Q6J("value",s.buttonSize),n.xp6(2),n.Q6J("value",s.buttonSize),n.xp6(2),n.Q6J("value",s.buttonSize),n.xp6(135),n.Q6J("minimal",!1),n.xp6(2),n.Q6J("content",s.snippets.compiled.appHtml),n.xp6(2),n.Q6J("content",s.snippets.compiled.appTs),n.xp6(2),n.Q6J("content",s.snippets.compiled.appCss)}},dependencies:[y.Z,Z.U,T.b,f.h,r.O5,x.$,w.S,A.j,U.G,_.o,S.gB,q.M,P.k,M.D,G._,d.yS,I.A,N.i],styles:[".demo-color-picker-container[_ngcontent-%COMP%]{margin-bottom:370px}.btn-container.demo-color-picker-close[_ngcontent-%COMP%]{margin:0 8px 8px}.btn-container.demo-color-picker-close[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]{width:100%}"]}),u=(0,v.gn)([(0,b.cG)("ComponentsColorPickerComponent")],u);const J=[u],D=[{path:"**",component:g.R,data:{category:h.N.resolveCategoryData(h.I.Components,"Color")}}];let Q=(()=>{class p{constructor(s,t){t.registerResolver(s,J)}}return p.\u0275fac=function(s){return new(s||p)(n.LFG(n._Vd),n.LFG(h.N))},p.\u0275mod=n.oAB({type:p}),p.\u0275inj=n.cJS({imports:[o.fxp,o.nDK,o.oQZ,o.e4r,r.ez,k.N,i.u5,o.QX1,o.PN6,o.$9i,o.cc7,d.Bz.forChild(D),o.f_l]}),p})()}}]);
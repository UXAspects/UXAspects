(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3585],{29133:r=>{r.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container-fluid<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-12 text-center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span>\n                <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn button-primary<span class="token punctuation">"</span></span>\n                <span class="token attr-name">uxPopover</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Popover content here!<span class="token punctuation">"</span></span>\n                <span class="token attr-name">placement</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bottom<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                Launch Popover\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="container-fluid">\n    <div class="row">\n        <div class="col-md-12 text-center">\n            <button type="button"\n                class="btn btn button-primary"\n                uxPopover="Popover content here!"\n                placement="bottom">\n                Launch Popover\n            </button>\n        </div>\n    </div>\n</div>'}},23372:r=>{r.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app-root\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>\n',example:"import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html'\n})\nexport class AppComponent { }\n"}},27782:(r,d,n)=>{var l={"./app.html":29133,"./app.ts":23372,"docs/app/pages/components/components-sections/popover/popover/snippets/app.html":29133,"docs/app/pages/components/components-sections/popover/popover/snippets/app.ts":23372};function s(a){var o=i(a);return n(o)}function i(a){if(!n.o(l,a)){var o=new Error("Cannot find module '"+a+"'");throw o.code="MODULE_NOT_FOUND",o}return l[a]}s.keys=function(){return Object.keys(l)},s.resolve=i,r.exports=s,s.id=27782},33585:(r,d,n)=>{"use strict";n.r(d),n.d(d,{ComponentsPopoverModule:()=>A});var l=n(34447),s=n(20047),i=n(3745),a=n(73875),o=n(74427),m=n(48342),v=n(20391),h=n(34610),t=n(55062),g=n(30642),k=n(1834),Z=n(39327),f=n(75079),y=n(12856),T=n(73962),U=n(33403);let p=class extends v.u{constructor(){super(n(27782)),this.playground={files:{"app.component.html":this.snippets.raw.appHtml,"app.component.ts":this.snippets.raw.appTs},modules:[{imports:["PopoverModule"],library:"@ux-aspects/ux-aspects"}]}}};p.\u0275fac=function(c){return new(c||p)},p.\u0275cmp=t.Xpm({type:p,selectors:[["uxd-components-popover"]],features:[t.qOj],decls:108,vars:2,consts:[[1,"container-fluid"],[1,"row"],[1,"col-md-12","text-center"],["type","button","uxPopover","Popover content here!","placement","bottom",1,"btn","btn","button-primary"],["tableTitle","Inputs"],["uxd-api-property","","name","uxPopover","type","string | TemplateRef"],["uxd-api-property","","name","popoverDisabled","type","boolean"],["uxd-api-property","","name","popoverTitle","type","string"],["uxd-api-property","","name","popoverClass","type","string"],["uxd-api-property","","name","popoverRole","defaultValue","popover","type","string"],["uxd-api-property","","name","popoverContext","type","object"],["uxd-api-property","","name","popoverDelay","type","number"],["uxd-api-property","","name","isOpen","type","boolean","defaultValue","false"],["uxd-api-property","","name","placement","type","'top' | 'right' | 'bottom' | 'left'","defaultValue","top"],["uxd-api-property","","name","fallbackPlacement","type","'top' | 'right' | 'bottom' | 'left'"],["uxd-api-property","","name","alignment","type","string","defaultValue","center"],["uxd-api-property","","name","showTriggers","type","string[]","defaultValue","['click']"],["uxd-api-property","","name","hideTriggers","type","string[]","defaultValue","['click', 'escape', 'clickoutside']"],["tableTitle","Outputs"],["uxd-api-property","","name","shown","type","void"],["uxd-api-property","","name","hidden","type","void"],["uxd-api-property","","name","isOpenChange","type","boolean"],["tableTitle","Methods"],["uxd-api-property","","name","show"],["uxd-api-property","","name","hide"],["uxd-api-property","","name","toggle"],[3,"minimal"],["heading","HTML"],[3,"content"]],template:function(c,u){1&c&&(t.TgZ(0,"div",0)(1,"div",1)(2,"div",2)(3,"button",3),t._uU(4," Launch Popover "),t.qZA()()()(),t._UZ(5,"hr"),t.TgZ(6,"p"),t._uU(7," To add a popover to an element add the "),t.TgZ(8,"code"),t._uU(9,"uxPopover"),t.qZA(),t._uU(10," attribute with the required text. The popover is placed at the "),t.TgZ(11,"code"),t._uU(12,"top"),t.qZA(),t._uU(13," by default.\n"),t.qZA(),t.TgZ(14,"p"),t._uU(15,"The following attributes can be used to configure the "),t.TgZ(16,"code"),t._uU(17,"uxPopover"),t.qZA(),t._uU(18," directive:"),t.qZA(),t.TgZ(19,"uxd-api-properties",4)(20,"tr",5),t._uU(21," If a string is specified, the text will be displayed as the popover content. If a TemplateRef is provided the content of the template will be inserted into the popover. "),t.qZA(),t.TgZ(22,"tr",6),t._uU(23," If set to "),t.TgZ(24,"code"),t._uU(25,"true"),t.qZA(),t._uU(26," the popover will not be shown by any of it's triggers. "),t.qZA(),t.TgZ(27,"tr",7),t._uU(28," If set, the popover will display a title above as the popover content. "),t.qZA(),t.TgZ(29,"tr",8),t._uU(30," If set, the provided class will be added to the popover. This can be used to change the appearance of the popover. "),t.qZA(),t.TgZ(31,"tr",9),t._uU(32," If set, this will alter the role of the popover. "),t.qZA(),t.TgZ(33,"tr",10),t._uU(34," If a TemplateRef is used as the content this can be used to provide the template with data. "),t.qZA(),t.TgZ(35,"tr",11),t._uU(36," If specified, the popover will wait the specified number of milliseconds before showing. "),t.qZA(),t.TgZ(37,"tr",12),t._uU(38," If set to "),t.TgZ(39,"code"),t._uU(40,"true"),t.qZA(),t._uU(41," this will programmatically show the popover. "),t.qZA(),t.TgZ(42,"tr",13),t._uU(43," Defines which direction the popover should appear relative to the trigger element. "),t.qZA(),t.TgZ(44,"tr",14),t._uU(45," Defines which direction the popover should appear relative to the trigger element if the value of the "),t.TgZ(46,"code"),t._uU(47,"placement"),t.qZA(),t._uU(48," input cannot be used. The fallback placement will be in the opposite direction of the "),t.TgZ(49,"code"),t._uU(50,"placement"),t.qZA(),t._uU(51," input by default. "),t.qZA(),t.TgZ(52,"tr",15),t._uU(53," Defines the position of the arrow relative to the popover. The possible values are "),t.TgZ(54,"code"),t._uU(55,"start"),t.qZA(),t._uU(56,", "),t.TgZ(57,"code"),t._uU(58,"center"),t.qZA(),t._uU(59," and "),t.TgZ(60,"code"),t._uU(61,"end"),t.qZA(),t._uU(62,". "),t.qZA(),t.TgZ(63,"tr",16),t._uU(64," Specifies which events will cause the popover to appear. To manually control when the popover appears set this to an empty array. Possible events are "),t.TgZ(65,"code"),t._uU(66,"click"),t.qZA(),t._uU(67,", "),t.TgZ(68,"code"),t._uU(69,"mouseenter"),t.qZA(),t._uU(70," and "),t.TgZ(71,"code"),t._uU(72,"focus"),t.qZA(),t._uU(73,". "),t.qZA(),t.TgZ(74,"tr",17),t._uU(75," Specifies which events will cause the popover to hide. To manually control when the popover hides set this to an empty array. Possible events are "),t.TgZ(76,"code"),t._uU(77,"click"),t.qZA(),t._uU(78,", "),t.TgZ(79,"code"),t._uU(80,"mouseleave"),t.qZA(),t._uU(81,", "),t.TgZ(82,"code"),t._uU(83,"blur"),t.qZA(),t._uU(84,", "),t.TgZ(85,"code"),t._uU(86,"escape"),t.qZA(),t._uU(87," and "),t.TgZ(88,"code"),t._uU(89,"clickoutside"),t.qZA(),t._uU(90,". "),t.qZA()(),t.TgZ(91,"uxd-api-properties",18)(92,"tr",19),t._uU(93," This event will be triggered when the popover is shown. "),t.qZA(),t.TgZ(94,"tr",20),t._uU(95," This event will be triggered when the popover is hidden. "),t.qZA(),t.TgZ(96,"tr",21),t._uU(97," This event will be triggered when the popover is shown or hidden and will be provided will a boolean representing the visibility of the popover. "),t.qZA()(),t.TgZ(98,"uxd-api-properties",22)(99,"tr",23),t._uU(100," Open the popover. "),t.qZA(),t.TgZ(101,"tr",24),t._uU(102," Hide the popover. "),t.qZA(),t.TgZ(103,"tr",25),t._uU(104," Toggle the visibility of the popover. "),t.qZA()(),t.TgZ(105,"ux-tabset",26)(106,"ux-tab",27),t._UZ(107,"uxd-snippet",28),t.qZA()()),2&c&&(t.xp6(105),t.Q6J("minimal",!1),t.xp6(2),t.Q6J("content",u.snippets.compiled.appHtml))},dependencies:[g.$,k.S,Z.j,f.G,y.k,T.A,U.i],encapsulation:2,changeDetection:0}),p=(0,m.__decorate)([(0,h.cG)("ComponentsPopoverComponent")],p);const b=[p],x=[{path:"**",component:a.R,data:{category:o.N.resolveCategoryData(o.I.Components,"Popover")}}];let A=(()=>{class e{constructor(u,w){w.registerResolver(u,b)}}return e.\u0275fac=function(u){return new(u||e)(t.LFG(t._Vd),t.LFG(o.N))},e.\u0275mod=t.oAB({type:e}),e.\u0275inj=t.cJS({imports:[i.N,s.UUf,l.Bz.forChild(x),s.f_l]}),e})()}}]);
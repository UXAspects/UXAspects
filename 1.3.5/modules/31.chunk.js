webpackJsonp([31],{1624:function(n,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s=function(){function n(n){var t=this;this.snippets={compiled:{},raw:{}},n.keys().forEach(function(a){var s=a.replace("./","").replace(/\W+(\w)/g,function(n){return n[1].toUpperCase()}),o=n(a);o.snippet&&(t.snippets.compiled[s]=o.snippet),o.example&&(t.snippets.raw[s]=o.example)})}return n}();t.BaseDocumentationSection=s},1634:function(n,t,a){"use strict";!function(n){for(var a in n)t.hasOwnProperty(a)||(t[a]=n[a])}(a(1640))},1640:function(n,t,a){"use strict";function s(n,t){return"rgba("+n.concat(t).join(",")+")"}function o(n,t){return Math.floor(Math.random()*(t-n+1))+n}function e(n){return{backgroundColor:s(n,.4),borderColor:s(n,1),pointBackgroundColor:s(n,1),pointBorderColor:"#fff",pointHoverBackgroundColor:"#fff",pointHoverBorderColor:s(n,.8)}}function p(n){return{backgroundColor:s(n,.6),borderColor:s(n,1),hoverBackgroundColor:s(n,.8),hoverBorderColor:s(n,1)}}function c(n){return{backgroundColor:n.map(function(n){return s(n,.6)}),borderColor:n.map(function(){return"#fff"}),pointBackgroundColor:n.map(function(n){return s(n,1)}),pointBorderColor:n.map(function(){return"#fff"}),pointHoverBackgroundColor:n.map(function(n){return s(n,1)}),pointHoverBorderColor:n.map(function(n){return s(n,1)})}}function l(n){return{backgroundColor:n.map(function(n){return s(n,.6)}),borderColor:n.map(function(n){return s(n,1)}),hoverBackgroundColor:n.map(function(n){return s(n,.8)}),hoverBorderColor:n.map(function(n){return s(n,1)})}}function u(){return[o(0,255),o(0,255),o(0,255)]}function r(n){return f.defaultColors[n]||u()}function i(n){for(var t=new Array(n),a=0;a<n;a++)t[a]=f.defaultColors[a]||u();return t}function d(n,t,a){return"pie"===n||"doughnut"===n?c(i(a)):"polarArea"===n?l(i(a)):"line"===n||"radar"===n?e(r(t)):"bar"===n||"horizontalBar"===n?p(r(t)):r(t)}var k=this&&this.__decorate||function(n,t,a,s){var o,e=arguments.length,p=e<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,a):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)p=Reflect.decorate(n,t,a,s);else for(var c=n.length-1;c>=0;c--)(o=n[c])&&(p=(e<3?o(p):e>3?o(t,a,p):o(t,a))||p);return e>3&&p&&Object.defineProperty(t,a,p),p},h=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)},g=a(0),b=a(1643),f=function(){function n(n){this.labels=[],this.options={},this.chartClick=new g.EventEmitter,this.chartHover=new g.EventEmitter,this.initFlag=!1,this.element=n}return n.prototype.ngOnInit=function(){this.ctx=this.element.nativeElement.getContext("2d"),this.cvs=this.element.nativeElement,this.initFlag=!0,(this.data||this.datasets)&&this.refresh()},n.prototype.ngOnChanges=function(n){this.initFlag&&(n.hasOwnProperty("data")||n.hasOwnProperty("datasets")?(n.data?this.updateChartData(n.data.currentValue):this.updateChartData(n.datasets.currentValue),this.chart.update()):this.refresh())},n.prototype.ngOnDestroy=function(){this.chart&&(this.chart.destroy(),this.chart=void 0)},n.prototype.getChartBuilder=function(n){var t=this,a=this.getDatasets(),s=Object.assign({},this.options);!1===this.legend&&(s.legend={display:!1}),s.hover=s.hover||{},s.hover.onHover||(s.hover.onHover=function(n){n&&!n.length||t.chartHover.emit({active:n})}),s.onClick||(s.onClick=function(n,a){t.chartClick.emit({event:n,active:a})});var o={type:this.chartType,data:{labels:this.labels,datasets:a},options:s};return new b.Chart(n,o)},n.prototype.updateChartData=function(n){Array.isArray(n[0].data)?this.chart.data.datasets.forEach(function(t,a){t.data=n[a].data,n[a].label&&(t.label=n[a].label)}):this.chart.data.datasets[0].data=n},n.prototype.getDatasets=function(){var n=this,t=void 0;if((!this.datasets||!this.datasets.length&&this.data&&this.data.length)&&(t=Array.isArray(this.data[0])?this.data.map(function(t,a){return{data:t,label:n.labels[a]||"Label "+a}}):[{data:this.data,label:"Label 0"}]),(this.datasets&&this.datasets.length||t&&t.length)&&(t=(this.datasets||t).map(function(t,a){var s=Object.assign({},t);return n.colors&&n.colors.length?Object.assign(s,n.colors[a]):Object.assign(s,d(n.chartType,a,s.data.length)),s})),!t)throw new Error("ng-charts configuration error,\n      data or datasets field are required to render char "+this.chartType);return t},n.prototype.refresh=function(){this.ngOnDestroy(),this.chart=this.getChartBuilder(this.ctx)},n}();f.defaultColors=[[255,99,132],[54,162,235],[255,206,86],[231,233,237],[75,192,192],[151,187,205],[220,220,220],[247,70,74],[70,191,189],[253,180,92],[148,159,177],[77,83,96]],k([g.Input(),h("design:type",Array)],f.prototype,"data",void 0),k([g.Input(),h("design:type",Array)],f.prototype,"datasets",void 0),k([g.Input(),h("design:type",Array)],f.prototype,"labels",void 0),k([g.Input(),h("design:type",Object)],f.prototype,"options",void 0),k([g.Input(),h("design:type",String)],f.prototype,"chartType",void 0),k([g.Input(),h("design:type",Array)],f.prototype,"colors",void 0),k([g.Input(),h("design:type",Boolean)],f.prototype,"legend",void 0),k([g.Output(),h("design:type",g.EventEmitter)],f.prototype,"chartClick",void 0),k([g.Output(),h("design:type",g.EventEmitter)],f.prototype,"chartHover",void 0),f=k([g.Directive({selector:"canvas[baseChart]",exportAs:"base-chart"}),h("design:paramtypes",[g.ElementRef])],f),t.BaseChartDirective=f;var m=function(){function n(){}return n}();m=k([g.NgModule({declarations:[f],exports:[f],imports:[]})],m),t.ChartsModule=m},3377:function(n,t,a){"use strict";var s=this&&this.__decorate||function(n,t,a,s){var o,e=arguments.length,p=e<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,a):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)p=Reflect.decorate(n,t,a,s);else for(var c=n.length-1;c>=0;c--)(o=n[c])&&(p=(e<3?o(p):e>3?o(t,a,p):o(t,a))||p);return e>3&&p&&Object.defineProperty(t,a,p),p},o=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)};Object.defineProperty(t,"__esModule",{value:!0});var e=a(0),p=a(23),c=a(172),l=a(325),u=a(324),r=a(1634),i=a(3378),d=a(3388),k=a(323),h=a(322),g=a(3394),b=[i.ChartsDonutChartNg1Component,d.ChartsNestedDonutChartNg1Component,g.ChartsDonutChartComponent],f=[{path:"**",component:k.DocumentationCategoryComponent,data:{category:c.ResolverService.resolveCategoryData(c.DocumentationPage.Charts,"Donut Charts")}}],m=function(){function n(n,t){t.registerResolver(n)}return n}();m=s([e.NgModule({imports:[h.DocumentationComponentsModule,u.TabsModule,l.WrappersModule,r.ChartsModule,p.RouterModule.forChild(f)],exports:b,declarations:b,entryComponents:b,providers:[]}),o("design:paramtypes",[e.ComponentFactoryResolver,c.ResolverService])],m),t.ChartsDonutChartsModule=m},3378:function(n,t,a){"use strict";var s=this&&this.__extends||function(){var n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var a in t)t.hasOwnProperty(a)&&(n[a]=t[a])};return function(t,a){function s(){this.constructor=t}n(t,a),t.prototype=null===a?Object.create(a):(s.prototype=a.prototype,new s)}}(),o=this&&this.__decorate||function(n,t,a,s){var o,e=arguments.length,p=e<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,a):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)p=Reflect.decorate(n,t,a,s);else for(var c=n.length-1;c>=0;c--)(o=n[c])&&(p=(e<3?o(p):e>3?o(t,a,p):o(t,a))||p);return e>3&&p&&Object.defineProperty(t,a,p),p},e=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)};Object.defineProperty(t,"__esModule",{value:!0});var p=a(0),c=a(101),l=a(321),u=a(1624),r=function(n){function t(t){var s=n.call(this,a(3379))||this;s.colorService=t,s.codepen={html:s.snippets.raw.chartHtml,htmlAttributes:{"ng-controller":"DonutChartCtrl as dc"},js:[s.snippets.raw.chartJs]};var o={chartColor1:t.getColor("chart1").toRgb(),chartColor2:t.getColor("chart2").toRgb(),chartColor3:t.getColor("chart3").toRgb(),chartColor4:t.getColor("chart4").toRgb(),chartColor5:t.getColor("chart5").toRgb(),chartHover1:t.getColor("chart1").setAlpha(.2).toRgba(),chartHover2:t.getColor("chart2").setAlpha(.3).toRgba(),chartHover3:t.getColor("chart3").setAlpha(.3).toRgba(),chartHover4:t.getColor("chart4").setAlpha(.3).toRgba(),chartHover5:t.getColor("chart5").setAlpha(.3).toRgba(),gridColor:t.getColor("grey4").toHex(),labelColor:t.getColor("grey2").toHex()};return s.data=[{label:"Sales 1",data:25,color:[o.chartColor1],highlightColor:[o.chartHover1]},{label:"Sales 2",data:15,color:[o.chartColor2],highlightColor:[o.chartHover2]},{label:"Sales 3",data:18,color:[o.chartColor3],highlightColor:[o.chartHover3]},{label:"Sales 4",data:20,color:[o.chartColor4],highlightColor:[o.chartHover4]},{label:"Sales 5",data:10,color:[o.chartColor5],highlightColor:[o.chartHover5]}],s.options={series:{pie:{show:!0,innerRadius:.7,centerLabel:{show:!0,color:o.gridColor,text:"65%",font:"Source Sans Pro",fontSize:18,paddingX:4,paddingY:0,textBaseline:"bottom"},subLabel:{show:!0,color:o.chartColor1,text:"Sales",font:"Source Sans Pro",fontSize:22,paddingX:1,paddingY:10,textBaseline:"middle"},donutLabel:{show:!0,color:o.labelColor,text:"Proprietary",font:"Source Sans Pro",fontSize:20},stroke:{width:0}}},grid:{hoverable:!0},tooltip:{show:!0,shifts:{x:0,y:-30},content:"%p.0%, %s"},legend:{show:!0,backgroundColor:"transparent",labelFormatter:function(n){return'<span class="legend-styling">'+n+"</span>"},labelBoxBorderColor:"transparent"}},s}return s(t,n),t.prototype.onPlotClick=function(){},t.prototype.onPlotHover=function(){},t}(u.BaseDocumentationSection);r=o([p.Component({selector:"uxd-charts-donut-chart-ng1",template:a(3387),changeDetection:p.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ChartsDonutChartNg1Component"),e("design:paramtypes",[c.ColorService])],r),t.ChartsDonutChartNg1Component=r},3379:function(n,t,a){function s(n){return a(o(n))}function o(n){var t=e[n];if(!(t+1))throw new Error("Cannot find module '"+n+"'.");return t}var e={"./accessibility.html":3380,"./chart.html":3381,"./chart.js":3382,"./labels.html":3383,"./labels.js":3384,"./legend.css":3385,"./legend.js":3386};s.keys=function(){return Object.keys(e)},s.resolve=o,n.exports=s,s.id=3379},3380:function(n,t){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sr-only<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">ng-repeat</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item in dc.donutChart.data<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{item.label}},{{item.data}},<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>',example:'<span tabindex="2" class="sr-only">\n  <span ng-repeat="item in dc.donutChart.data">{{item.label}},{{item.data}},</span>\n</span>'}},3381:function(n,t){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flot-chart<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>flot</span> <span class="token attr-name">dataset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dc.donutChart.data<span class="token punctuation">"</span></span> <span class="token attr-name">options</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dc.donutChart.options<span class="token punctuation">"</span></span> <span class="token attr-name">on-plot-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dc.donutChart.onPlotClick(event,pos,item)<span class="token punctuation">"</span></span>\n        <span class="token attr-name">on-hover-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dc.donutChart.onPlotHover(event,pos,item)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>flot</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="flot-chart">\n    <flot dataset="dc.donutChart.data" options="dc.donutChart.options" on-plot-click="dc.donutChart.onPlotClick(event,pos,item)"\n        on-hover-click="dc.donutChart.onPlotHover(event,pos,item)">\n    </flot>\n</div>'}},3382:function(n,t){n.exports={snippet:'angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">\'app\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token string">\'DonutChartCtrl\'</span><span class="token punctuation">,</span> DonutChartCtrl<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nDonutChartCtrl<span class="token punctuation">.</span>$inject <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'$colorService\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">DonutChartCtrl</span><span class="token punctuation">(</span>$colorService<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">var</span> dc <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">var</span> flotChartColors <span class="token operator">=</span> <span class="token punctuation">{</span>\n        chartColor1<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        chartColor2<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart2\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        chartColor3<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart3\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        chartColor4<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart4\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        chartColor5<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart5\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        chartHover1<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        chartHover2<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart2\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        chartHover3<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart3\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        chartHover4<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart4\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        chartHover5<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart5\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        gridColor<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey4\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        labelColor<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey2\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    dc<span class="token punctuation">.</span>donutChart <span class="token operator">=</span> <span class="token punctuation">{</span>\n        data<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n            label<span class="token punctuation">:</span> <span class="token string">"Sales 1"</span><span class="token punctuation">,</span>\n            data<span class="token punctuation">:</span> <span class="token number">25</span><span class="token punctuation">,</span>\n            color<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>chartColor1<span class="token punctuation">]</span><span class="token punctuation">,</span>\n            highlightColor<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>chartHover1<span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n            label<span class="token punctuation">:</span> <span class="token string">"Sales 2"</span><span class="token punctuation">,</span>\n            data<span class="token punctuation">:</span> <span class="token number">15</span><span class="token punctuation">,</span>\n            color<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>chartColor2<span class="token punctuation">]</span><span class="token punctuation">,</span>\n            highlightColor<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>chartHover2<span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n            label<span class="token punctuation">:</span> <span class="token string">"Sales 3"</span><span class="token punctuation">,</span>\n            data<span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span>\n            color<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>chartColor3<span class="token punctuation">]</span><span class="token punctuation">,</span>\n            highlightColor<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>chartHover3<span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n            label<span class="token punctuation">:</span> <span class="token string">"Sales 4"</span><span class="token punctuation">,</span>\n            data<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n            color<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>chartColor4<span class="token punctuation">]</span><span class="token punctuation">,</span>\n            highlightColor<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>chartHover4<span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n            label<span class="token punctuation">:</span> <span class="token string">"Sales 5"</span><span class="token punctuation">,</span>\n            data<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n            color<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>chartColor5<span class="token punctuation">]</span><span class="token punctuation">,</span>\n            highlightColor<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>chartHover5<span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            series<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                pie<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                    show<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                    innerRadius<span class="token punctuation">:</span> <span class="token number">0.7</span><span class="token punctuation">,</span>\n                    centerLabel<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                        show<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                        color<span class="token punctuation">:</span> flotChartColors<span class="token punctuation">.</span>gridColor<span class="token punctuation">,</span>\n                        text<span class="token punctuation">:</span> <span class="token string">"65%"</span><span class="token punctuation">,</span>\n                        font<span class="token punctuation">:</span> <span class="token string">"Source Sans Pro"</span><span class="token punctuation">,</span>\n                        fontSize<span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span>\n                        paddingX<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n                        paddingY<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                        textBaseline<span class="token punctuation">:</span> <span class="token string">\'bottom\'</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    subLabel<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                        show<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                        color<span class="token punctuation">:</span> flotChartColors<span class="token punctuation">.</span>chartColor1<span class="token punctuation">,</span>\n                        text<span class="token punctuation">:</span> <span class="token string">"Sales"</span><span class="token punctuation">,</span>\n                        font<span class="token punctuation">:</span> <span class="token string">"Source Sans Pro"</span><span class="token punctuation">,</span>\n                        fontSize<span class="token punctuation">:</span> <span class="token number">22</span><span class="token punctuation">,</span>\n                        paddingX<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n                        paddingY<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n                        textBaseline<span class="token punctuation">:</span> <span class="token string">\'middle\'</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    donutLabel<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                        show<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                        color<span class="token punctuation">:</span> flotChartColors<span class="token punctuation">.</span>labelColor<span class="token punctuation">,</span>\n                        text<span class="token punctuation">:</span> <span class="token string">"Proprietary"</span><span class="token punctuation">,</span>\n                        font<span class="token punctuation">:</span> <span class="token string">"Source Sans Pro"</span><span class="token punctuation">,</span>\n                        fontSize<span class="token punctuation">:</span> <span class="token number">20</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    stroke<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                        width<span class="token punctuation">:</span> <span class="token number">0</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            grid<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                hoverable<span class="token punctuation">:</span> <span class="token boolean">true</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            tooltip<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                show<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                shifts<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                    x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                    y<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">30</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                content<span class="token punctuation">:</span> <span class="token string">"%p.0%, %s"</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            legend<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                show<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                backgroundColor<span class="token punctuation">:</span> <span class="token string">"transparent"</span><span class="token punctuation">,</span>\n                labelFormatter<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>label<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">return</span> <span class="token string">\'&lt;span class="legend-styling">\'</span> <span class="token operator">+</span> label <span class="token operator">+</span> <span class="token string">\'&lt;/span>\'</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                labelBoxBorderColor<span class="token punctuation">:</span> <span class="token string">"transparent"</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        onPlotClick<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment" spellcheck="true">//Code to be executed when plot is clicked.</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        onPlotHover<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment" spellcheck="true">//Code to be executed when plot area is hovered.</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        donutLabels<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            centerLabel<span class="token punctuation">:</span> <span class="token string">\'SALES\'</span><span class="token punctuation">,</span>\n            subLabel<span class="token punctuation">:</span> <span class="token string">\'5%\'</span><span class="token punctuation">,</span>\n            donutLabel<span class="token punctuation">:</span> <span class="token string">\'PROPRIETARY\'</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token punctuation">}</span>',example:"angular.module('app').controller('DonutChartCtrl', DonutChartCtrl);\n\nDonutChartCtrl.$inject = ['$colorService'];\n\nfunction DonutChartCtrl($colorService) {\n\n    var dc = this;\n\n    var flotChartColors = {\n        chartColor1: $colorService.getColor('chart1').toRgb(),\n        chartColor2: $colorService.getColor('chart2').toRgb(),\n        chartColor3: $colorService.getColor('chart3').toRgb(),\n        chartColor4: $colorService.getColor('chart4').toRgb(),\n        chartColor5: $colorService.getColor('chart5').toRgb(),\n        chartHover1: $colorService.getColor('chart1').setAlpha(0.2).toRgba(),\n        chartHover2: $colorService.getColor('chart2').setAlpha(0.3).toRgba(),\n        chartHover3: $colorService.getColor('chart3').setAlpha(0.3).toRgba(),\n        chartHover4: $colorService.getColor('chart4').setAlpha(0.3).toRgba(),\n        chartHover5: $colorService.getColor('chart5').setAlpha(0.3).toRgba(),\n        gridColor: $colorService.getColor('grey4').toHex(),\n        labelColor: $colorService.getColor('grey2').toHex()\n    };\n\n    dc.donutChart = {\n        data: [{\n            label: \"Sales 1\",\n            data: 25,\n            color: [flotChartColors.chartColor1],\n            highlightColor: [flotChartColors.chartHover1]\n        }, {\n            label: \"Sales 2\",\n            data: 15,\n            color: [flotChartColors.chartColor2],\n            highlightColor: [flotChartColors.chartHover2]\n        }, {\n            label: \"Sales 3\",\n            data: 18,\n            color: [flotChartColors.chartColor3],\n            highlightColor: [flotChartColors.chartHover3]\n        }, {\n            label: \"Sales 4\",\n            data: 20,\n            color: [flotChartColors.chartColor4],\n            highlightColor: [flotChartColors.chartHover4]\n        }, {\n            label: \"Sales 5\",\n            data: 10,\n            color: [flotChartColors.chartColor5],\n            highlightColor: [flotChartColors.chartHover5]\n        }],\n        options: {\n            series: {\n                pie: {\n                    show: true,\n                    innerRadius: 0.7,\n                    centerLabel: {\n                        show: true,\n                        color: flotChartColors.gridColor,\n                        text: \"65%\",\n                        font: \"Source Sans Pro\",\n                        fontSize: 18,\n                        paddingX: 4,\n                        paddingY: 0,\n                        textBaseline: 'bottom'\n                    },\n                    subLabel: {\n                        show: true,\n                        color: flotChartColors.chartColor1,\n                        text: \"Sales\",\n                        font: \"Source Sans Pro\",\n                        fontSize: 22,\n                        paddingX: 1,\n                        paddingY: 10,\n                        textBaseline: 'middle'\n                    },\n                    donutLabel: {\n                        show: true,\n                        color: flotChartColors.labelColor,\n                        text: \"Proprietary\",\n                        font: \"Source Sans Pro\",\n                        fontSize: 20\n                    },\n                    stroke: {\n                        width: 0\n                    }\n                }\n            },\n            grid: {\n                hoverable: true\n            },\n            tooltip: {\n                show: true,\n                shifts: {\n                    x: 0,\n                    y: -30\n                },\n                content: \"%p.0%, %s\"\n            },\n            legend: {\n                show: true,\n                backgroundColor: \"transparent\",\n                labelFormatter: function (label) {\n                    return '<span class=\"legend-styling\">' + label + '</span>';\n                },\n                labelBoxBorderColor: \"transparent\"\n            }\n        },\n        onPlotClick: function () {\n            //Code to be executed when plot is clicked.\n        },\n        onPlotHover: function () {\n            //Code to be executed when plot area is hovered.\n        },\n        donutLabels: {\n            centerLabel: 'SALES',\n            subLabel: '5%',\n            donutLabel: 'PROPRIETARY'\n        }\n    };\n\n}"}},3383:function(n,t){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flot-chart<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>flot</span> <span class="token attr-name">dataset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dc.donutChart.data<span class="token punctuation">"</span></span> <span class="token attr-name">options</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dc.donutChart.options<span class="token punctuation">"</span></span> <span class="token attr-name">on-plot-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dc.donutChart.onPlotClick(event,pos,item)<span class="token punctuation">"</span></span>\n        <span class="token attr-name">on-hover-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dc.donutChart.onPlotHover(event,pos,item)<span class="token punctuation">"</span></span> <span class="token attr-name">donut-labels</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dc.donutChart.donutLabels<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>flot</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="flot-chart">\n    <flot dataset="dc.donutChart.data" options="dc.donutChart.options" on-plot-click="dc.donutChart.onPlotClick(event,pos,item)"\n        on-hover-click="dc.donutChart.onPlotHover(event,pos,item)" donut-labels="dc.donutChart.donutLabels">\n    </flot>\n</div>'}},3384:function(n,t){n.exports={snippet:'donutLabels<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    centerLabel<span class="token punctuation">:</span> <span class="token string">\'SALES\'</span><span class="token punctuation">,</span>\n    subLabel<span class="token punctuation">:</span> <span class="token string">\'5%\'</span><span class="token punctuation">,</span>\n    donutLabel<span class="token punctuation">:</span> <span class="token string">\'Proprietary\'</span>\n<span class="token punctuation">}</span>',example:"donutLabels: {\n    centerLabel: 'SALES',\n    subLabel: '5%',\n    donutLabel: 'Proprietary'\n}"}},3385:function(n,t){n.exports={snippet:'<span class="token selector">.legend-styling</span> <span class="token punctuation">{</span>\n    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"Source Sans Pro"</span><span class="token punctuation">;</span>\n    <span class="token property">padding-left</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #999<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:'.legend-styling {\n    font-family: "Source Sans Pro";\n    padding-left: 4px;\n    color: #999;\n}'}},3386:function(n,t){n.exports={snippet:'legend<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n  show<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  backgroundColor<span class="token punctuation">:</span> <span class="token string">"transparent"</span><span class="token punctuation">,</span>\n  labelFormatter<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>label<span class="token punctuation">,</span> series<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> vm<span class="token punctuation">.</span>donutChart<span class="token punctuation">.</span>data<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      total <span class="token operator">+=</span> vm<span class="token punctuation">.</span>donutChart<span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">var</span> percent <span class="token operator">=</span> <span class="token punctuation">(</span>series<span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">/</span> total<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>percent <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> label <span class="token operator">+=</span> <span class="token string">\'&lt;span> (&lt;2%)&lt;/span>\'</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span>  <span class="token string">\'&lt;span class="legend-styling">\'</span> <span class="token operator">+</span> label <span class="token operator">+</span> <span class="token string">\'&lt;/span>\'</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  labelBoxBorderColor<span class="token punctuation">:</span> <span class="token string">"transparent"</span>\n<span class="token punctuation">}</span>',example:"legend: {\n  show: true,\n  backgroundColor: \"transparent\",\n  labelFormatter: function(label, series) {\n    var total = 0;\n    for (var i = 0; i < vm.donutChart.data.length; i++) {\n      total += vm.donutChart.data[0].data;\n    }\n    var percent = (series.data[0][1] / total) * 100;\n    if (percent < 2) label += '<span> (<2%)</span>';\n\n    return  '<span class=\"legend-styling\">' + label + '</span>';\n  },\n  labelBoxBorderColor: \"transparent\"\n}"}},3387:function(n,t){n.exports='<div class="flot-chart">\n    <ux-flot-ng1 [dataset]="data" [options]="options" (on-plot-click)="onPlotClick(event, pos, item)" (on-hover-click)="onPlotHover(event, pos, item)">\n    </ux-flot-ng1>\n</div>\n\n<hr>\n\n<div class="demo-attributes table-responsive">\n    <table class="table">\n        <tbody>\n            <tr>\n                <th>Property</th>\n                <th>Type</th>\n                <th>Description</th>\n                <th>Optional</th>\n            </tr>\n            <tr>\n                <td class="attribute">label</td>\n                <td>string</td>\n                <td>Label name specified in the legend.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">data</td>\n                <td>number or array</td>\n                <td>A number in the donut chart defining the area of each donut section.</td>\n                <td>false</td>\n            </tr>\n            <tr>\n                <td class="attribute">color</td>\n                <td>color</td>\n                <td>Defines the color of each donut section.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">highlightColor</td>\n                <td>color</td>\n                <td>Default color of the translucent overlay used to highlight on mouse hover.</td>\n                <td>true</td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<p>Donut Charts are defined by the <code>flot</code> directive. The dataset and options attribute define the donut chart data\n    and options respectively. Dataset and Options are defined within the DonutChartCtrl.</p>\n\n<tabset>\n    <tab heading="HTML">\n        <uxd-snippet language="html" [content]="snippets.compiled.chartHtml"></uxd-snippet>\n    </tab>\n    \n    <tab heading="Javascript">\n        <uxd-snippet language="javascript" [content]="snippets.compiled.chartJs"></uxd-snippet>\n    </tab>\n</tabset>\n\n<div class="demo-attributes table-responsive">\n    <table class="table">\n        <tbody>\n            <tr>\n                <th>Property</th>\n                <th>Type</th>\n                <th>Description</th>\n                <th>Optional</th>\n            </tr>\n            <tr>\n                <td class="attribute">series</td>\n                <td>string</td>\n                <td>Defines the chart type and its layout. Values include \'lines\', \'bar\' and \'points\', e.g. if data represents\n                    a donut chart, then the value is set to \'pie\'.</td>\n                <td>false</td>\n            </tr>\n            <tr>\n                <td class="attribute">grid</td>\n                <td>array</td>\n                <td>Helps configure the grid options.</td>\n                <td>true</td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<p>Chart layout parameters are explained below. These are defined in <code>series</code>.</p>\n\n<div class="demo-attributes table-responsive">\n    <table class="table">\n        <tbody>\n            <tr>\n                <th>Property</th>\n                <th>Type</th>\n                <th>Description</th>\n                <th>Optional</th>\n            </tr>\n            <tr>\n                <td class="attribute">show</td>\n                <td>boolean</td>\n                <td>If set to true displays the chart.</td>\n                <td>false</td>\n            </tr>\n            <tr>\n                <td class="attribute">innerRadius</td>\n                <td>number</td>\n                <td>Sets the radius of the donut hole. If value is between 0 and 1 (inclusive) then it will use that as a percentage\n                    of the radius, otherwise it will use the value as a direct pixel length.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">centerLabel</td>\n                <td>array</td>\n                <td>Defines how a label should be shown in the center of the donut.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">subLabel</td>\n                <td>array</td>\n                <td>Defines how a label should be shown in the center of the donut beneath the center label.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">donutLabel</td>\n                <td>array</td>\n                <td>Defines how a label should be shown beneath the donut.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">width</td>\n                <td>number</td>\n                <td>Defined inside stroke object, pixel width of the border of each slice.</td>\n                <td>true</td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<p>The following attributes should be defined within <code>centerLabel</code>.</p>\n\n<div class="demo-attributes table-responsive">\n    <table class="table">\n        <tbody>\n            <tr>\n                <th>Property</th>\n                <th>Type</th>\n                <th>Description</th>\n                <th>Optional</th>\n            </tr>\n            <tr>\n                <td class="attribute">show</td>\n                <td>boolean</td>\n                <td>Whether or not the chart should show a center label.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">color</td>\n                <td>string</td>\n                <td>Specifies the color to be used for the center label.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">text</td>\n                <td>string</td>\n                <td>The text to display in the center label.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">font</td>\n                <td>string</td>\n                <td>The name of the font family to be used by the label.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">fontSize</td>\n                <td>number</td>\n                <td>The desired font size of the label. The size may be reduced automatically to fit the label inside the donut.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">paddingX</td>\n                <td>number</td>\n                <td>Defines the horizontal padding required to center the position.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">paddingY</td>\n                <td>number</td>\n                <td>Defines the vertical padding required to center the position.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">textBaseline</td>\n                <td>HTML</td>\n                <td>Canvas textBaseline property, defines the position of the label.</td>\n                <td>true</td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<p>The following attributes should be defined within <code>subLabel</code>.</p>\n\n<div class="demo-attributes table-responsive">\n    <table class="table">\n        <tbody>\n            <tr>\n                <th>Property</th>\n                <th>Type</th>\n                <th>Description</th>\n                <th>Optional</th>\n            </tr>\n            <tr>\n                <td class="attribute">show</td>\n                <td>boolean</td>\n                <td>Whether or not the chart should show a sub label.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">color</td>\n                <td>string</td>\n                <td>Specifies the color to be used for the sub label.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">text</td>\n                <td>string</td>\n                <td>The text to display in the sub label.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">font</td>\n                <td>string</td>\n                <td>The name of the font family to be used by the label.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">fontSize</td>\n                <td>number</td>\n                <td>The desired font size of the label. The size may be reduced automatically to fit the label inside the donut.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">paddingX</td>\n                <td>number</td>\n                <td>Defines the horizontal padding required to center the position.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">paddingY</td>\n                <td>number</td>\n                <td>Defines the vertical padding required to center the position.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">textBaseline</td>\n                <td>HTML</td>\n                <td>Canvas textBaseline property, defines the position of the label.</td>\n                <td>true</td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<p>The following attributes should be defined within <code>donutLabel</code>.</p>\n\n<div class="demo-attributes table-responsive">\n    <table class="table">\n        <tbody>\n            <tr>\n                <th>Property</th>\n                <th>Type</th>\n                <th>Description</th>\n                <th>Optional</th>\n            </tr>\n            <tr>\n                <td class="attribute">show</td>\n                <td>boolean</td>\n                <td>Whether or not the chart should show a donut label.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">color</td>\n                <td>string</td>\n                <td>Specifies the color to be used for the donut label.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">text</td>\n                <td>string</td>\n                <td>The text to display in the donut label.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">font</td>\n                <td>string</td>\n                <td>The name of the font family to be used by the label.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">fontSize</td>\n                <td>number</td>\n                <td>The desired font size of the label. The size may be reduced automatically to fit the label inside the donut.</td>\n                <td>true</td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<p>Grid options are explained below.</p>\n\n<div class="demo-attributes table-responsive">\n    <table class="table">\n        <tbody>\n            <tr>\n                <th>Property</th>\n                <th>Type</th>\n                <th>Description</th>\n                <th>Optional</th>\n            </tr>\n            <tr>\n                <td class="attribute">hoverable</td>\n                <td>boolean</td>\n                <td>If set to true enables interactivity in the grid.</td>\n                <td>true</td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<blockquote>\n    <p><strong>Note</strong>: Refer to the <a routerLink="/charts/flot-options">Flot Options</a> page for details of chart options.</p>\n</blockquote>\n\n<p>To convey chart information to users with assistive technologies, you can include a text version of the data. Use the <code>sr-only</code>    class to make the text hidden but visible to screen readers, and give the container a <code>tabindex</code> attribute\n    so it can be reached with the keyboard, and place it near the chart.</p>\n\n<uxd-snippet [content]="snippets.compiled.accessibilityHtml"></uxd-snippet>\n\n<h4 id="dynamic-chart-labels">Dynamic Chart Labels</h4>\n\n<p>If the text displayed in the chart labels needs to be changed dynamically, add the <code>donut-labels</code> attribute to\n    the <code>flot</code> directive and add the following to the controller. Now if any of the values in this object change\n    the labels will automatically update to reflect the new values.</p>\n\n<tabset>\n    <tab heading="HTML">\n        <uxd-snippet language="html" [content]="snippets.compiled.labelsHtml"></uxd-snippet>\n    </tab>\n    \n    <tab heading="Javascript">\n        <uxd-snippet language="javascript" [content]="snippets.compiled.labelsJs"></uxd-snippet>\n    </tab>\n</tabset>\n\n<h4 id="custom-legend-styling">Custom Legend Styling</h4>\n\n<p>If you wish to apply your own styling to the legend (e.g labels), this can be done by specifying properties in the <code>legend</code>    object, which is contained within the Chart Options. For example, <code>labelFormatter</code>. This is a function that\n    allows you to format the labels as required. In the example below, any series that is very small (&lt;2%) will have its\n    label in the legend updated. This is useful when a series is too small visually to be seen on the chart so that the user\n    understands why it is not visible.</p>\n\n<tabset>\n\n    <tab heading="Javascript">\n        <uxd-snippet language="javascript" [content]="snippets.compiled.legendJs"></uxd-snippet>\n    </tab>\n\n    <tab heading="CSS">\n        <uxd-snippet language="css" [content]="snippets.compiled.legendCss"></uxd-snippet>\n    </tab>\n\n</tabset>\n\n<blockquote>\n    <p><strong>Note</strong>: To upgrade this component to use in an Angular 4 application use: <code>upgradeAdapter.upgradeNg1Component(\'uxFlotNg1\')</code></p>\n</blockquote>'},3388:function(n,t,a){"use strict";var s=this&&this.__extends||function(){var n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var a in t)t.hasOwnProperty(a)&&(n[a]=t[a])};return function(t,a){function s(){this.constructor=t}n(t,a),t.prototype=null===a?Object.create(a):(s.prototype=a.prototype,new s)}}(),o=this&&this.__decorate||function(n,t,a,s){var o,e=arguments.length,p=e<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,a):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)p=Reflect.decorate(n,t,a,s);else for(var c=n.length-1;c>=0;c--)(o=n[c])&&(p=(e<3?o(p):e>3?o(t,a,p):o(t,a))||p);return e>3&&p&&Object.defineProperty(t,a,p),p},e=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)};Object.defineProperty(t,"__esModule",{value:!0});var p=a(0),c=a(321),l=a(101),u=a(1624),r=function(n){function t(t){var s=n.call(this,a(3389))||this;return s.codepen={html:s.snippets.raw.chartHtml,js:[s.snippets.raw.chartJs],css:[s.snippets.raw.chartCss],htmlAttributes:{"ng-controller":"NestedDonutChartCtrl as dc"}},s.data=[{label:"documents",color:t.getColor("chart1").toHex(),value:23456},{label:"reviewed",color:t.getColor("chart2").toHex(),value:19876},{label:"produced",color:t.getColor("chart3").toHex(),value:11123}],s.options={size:100,donutWidth:4,donutSpacing:4,hoverAnimation:!0,onHover:function(){},onClick:function(){},tooltip:{show:!0,content:function(n){return'<div style="display: inline-block; width: 10px; height: 10px; margin-right: 2px; background-color: '+n.color+'"></div> <b>'+n.value+"</b> "+n.label},shifts:{x:0,y:0}}},s}return s(t,n),t}(u.BaseDocumentationSection);r=o([p.Component({selector:"uxd-charts-nested-donut-chart",template:a(3393),changeDetection:p.ChangeDetectionStrategy.OnPush}),c.DocumentationSectionComponent("ChartsNestedDonutChartNg1Component"),e("design:paramtypes",[l.ColorService])],r),t.ChartsNestedDonutChartNg1Component=r},3389:function(n,t,a){function s(n){return a(o(n))}function o(n){var t=e[n];if(!(t+1))throw new Error("Cannot find module '"+n+"'.");return t}var e={"./chart.css":3390,"./chart.html":3391,"./chart.js":3392};s.keys=function(){return Object.keys(e)},s.resolve=o,n.exports=s,s.id=3389},3390:function(n,t){n.exports={snippet:'<span class="token selector">.nested-donut-example</span> <span class="token punctuation">{</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n    <span class="token property">margin-top</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.nested-donut-example:before</span> <span class="token punctuation">{</span>\n    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">\' \'</span><span class="token punctuation">;</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>\n    <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.nested-donut-example .nested-donut-text</span> <span class="token punctuation">{</span>\n    <span class="token property">margin-right</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>\n    <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.nested-donut-example .nested-donut-container</span> <span class="token punctuation">{</span>\n    <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.nested-donut-text p</span> <span class="token punctuation">{</span>\n    <span class="token property">font</span><span class="token punctuation">:</span> 18px <span class="token string">"Source Sans Pro"</span><span class="token punctuation">;</span>\n    <span class="token property">font-weight</span><span class="token punctuation">:</span> 600<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.nested-donut-text p.documents</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #00a7a2<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.nested-donut-text p.reviewed</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #7b63a3<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.nested-donut-text p.produced</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #3baa43<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.nested-donut-text p span + span</span> <span class="token punctuation">{</span>\n    <span class="token property">font</span><span class="token punctuation">:</span> 14px <span class="token string">"Source Sans Pro"</span><span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #999<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:'.nested-donut-example {\n    width: 100%;\n    margin-top: 15px;\n}\n\n.nested-donut-example:before {\n    content: \' \';\n    display: inline-block;\n    vertical-align: middle;\n    height: 100%;\n}\n\n.nested-donut-example .nested-donut-text {\n    margin-right: 50px;\n    display: inline-block;\n    vertical-align: middle;\n}\n\n.nested-donut-example .nested-donut-container {\n    vertical-align: middle;\n}\n\n.nested-donut-text p {\n    font: 18px "Source Sans Pro";\n    font-weight: 600;\n}\n\n.nested-donut-text p.documents {\n    color: #00a7a2;\n}\n\n.nested-donut-text p.reviewed {\n    color: #7b63a3;\n}\n\n.nested-donut-text p.produced {\n    color: #3baa43;\n}\n\n.nested-donut-text p span + span {\n    font: 14px "Source Sans Pro";\n    color: #999;\n}'}},3391:function(n,t){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container-fluid<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-md-12 m-t-md<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>nested-donut-example<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>nested-donut-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>documents<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>23,456<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span> documents<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>reviewed<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>19,876<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span> reviewed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>produced<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>11,123<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span> produced<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nested-donut</span> <span class="token attr-name">dataset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dc.nestedDonutData<span class="token punctuation">"</span></span> <span class="token attr-name">options</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dc.nestedDonutOptions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nested-donut</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="container-fluid">\n    <div class="row">\n        <div class="col-md-12 m-t-md">\n            <div class="nested-donut-example">\n                <div class="nested-donut-text">\n                    <div>\n                        <p class="documents"><span>23,456</span><span> documents</span></p>\n                        <p class="reviewed"><span>19,876</span><span> reviewed</span></p>\n                        <p class="produced"><span>11,123</span><span> produced</span></p>\n                    </div>\n                </div>\n                <nested-donut dataset="dc.nestedDonutData" options="dc.nestedDonutOptions"></nested-donut>\n            </div>\n        </div>\n    </div>\n</div>'}},3392:function(n,t){n.exports={snippet:'angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">\'app\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token string">\'NestedDonutChartCtrl\'</span><span class="token punctuation">,</span> NestedDonutChartCtrl<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nNestedDonutChartCtrl<span class="token punctuation">.</span>$<span class="token keyword">import</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'$colorService\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">NestedDonutChartCtrl</span><span class="token punctuation">(</span>$colorService<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">var</span> dc <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n\n    <span class="token comment" spellcheck="true">// nested donut chart</span>\n    dc<span class="token punctuation">.</span>nestedDonutData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n      label<span class="token punctuation">:</span> <span class="token string">\'documents\'</span><span class="token punctuation">,</span>\n      color<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      value<span class="token punctuation">:</span> <span class="token number">23456</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      label<span class="token punctuation">:</span> <span class="token string">\'reviewed\'</span><span class="token punctuation">,</span>\n      color<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart2\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      value<span class="token punctuation">:</span> <span class="token number">19876</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      label<span class="token punctuation">:</span> <span class="token string">\'produced\'</span><span class="token punctuation">,</span>\n      color<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart3\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      value<span class="token punctuation">:</span> <span class="token number">11123</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    dc<span class="token punctuation">.</span>nestedDonutOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\n        size<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n        donutWidth<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n        donutSpacing<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n        hoverAnimation<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        onHover<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment" spellcheck="true">// perform any actions here on hover</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      onClick<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment" spellcheck="true">// perform any actions here on hover        </span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      tooltip<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        show<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        content<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token string">\'&lt;div style="display: inline-block; width: 10px; height: 10px; margin-right: 2px; background-color: \'</span> <span class="token operator">+</span> data<span class="token punctuation">.</span>color <span class="token operator">+</span> <span class="token string">\'">&lt;/div> &lt;b>\'</span> <span class="token operator">+</span> data<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token string">\'&lt;/b> \'</span> <span class="token operator">+</span> data<span class="token punctuation">.</span>label<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        shifts<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n            y<span class="token punctuation">:</span> <span class="token number">0</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token punctuation">}</span>',example:"angular.module('app').controller('NestedDonutChartCtrl', NestedDonutChartCtrl);\n\nNestedDonutChartCtrl.$import = ['$colorService'];\n\nfunction NestedDonutChartCtrl($colorService) {\n\n    var dc = this;\n\n    // nested donut chart\n    dc.nestedDonutData = [{\n      label: 'documents',\n      color: $colorService.getColor('chart1').toHex(),\n      value: 23456\n    }, {\n      label: 'reviewed',\n      color: $colorService.getColor('chart2').toHex(),\n      value: 19876\n    }, {\n      label: 'produced',\n      color: $colorService.getColor('chart3').toHex(),\n      value: 11123\n    }];\n\n    dc.nestedDonutOptions = {\n        size: 100,\n        donutWidth: 4,\n        donutSpacing: 4,\n        hoverAnimation: true,\n        onHover: function(data) {\n        // perform any actions here on hover\n      },\n      onClick: function(data) {\n        // perform any actions here on hover        \n      },\n      tooltip: {\n        show: true,\n        content: function(data) {\n            return '<div style=\"display: inline-block; width: 10px; height: 10px; margin-right: 2px; background-color: ' + data.color + '\"></div> <b>' + data.value + '</b> ' + data.label;\n        },\n        shifts: {\n            x: 0,\n            y: 0\n        }\n      }\n    };\n\n}"}},3393:function(n,t){n.exports='<div class="nested-donut-example">\n    <div class="nested-donut-text">\n        <div>\n            <p class="documents"><span>23,456</span><span> documents</span></p>\n            <p class="reviewed"><span>19,876</span><span> reviewed</span></p>\n            <p class="produced"><span>11,123</span><span> produced</span></p>\n        </div>\n    </div>\n    <ux-nested-donut-ng1 [dataset]="data" [options]="options"></ux-nested-donut-ng1>\n</div>\n<hr>\n\n<p>The available options are:</p>\n\n<div class="demo-attributes table-responsive">\n    <table class="table">\n        <tbody>\n            <tr>\n                <th>Property</th>\n                <th>Type</th>\n                <th>Description</th>\n                <th>Optional</th>\n            </tr>\n            <tr>\n                <td class="attribute">size</td>\n                <td>number</td>\n                <td>Defines the diameter of the chart. (default: 150). This will also accept a percentage value in the form of\n                    a string, e.g. "50%".</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">donutWidth</td>\n                <td>number</td>\n                <td>Defines the width of each ring. (default: 4)</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">donutSpacing</td>\n                <td>number</td>\n                <td>Defines the spacing between each ring. (default: 4)</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">hoverAnimation</td>\n                <td>boolean</td>\n                <td>Defines whether or not ring should show a hover effect when the mouse is over it (default: true)</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">onHover</td>\n                <td>function</td>\n                <td>Defines a function to be called when a ring is hovered. The function should accept one argument that will\n                    contain the data corresponding to the hovered ring.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">onClick</td>\n                <td>function</td>\n                <td>Defines a function to be called when a ring is clicked. The function should accept one argument that will\n                    contain the data corresponding to the clicked ring.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">centerLabel</td>\n                <td>object</td>\n                <td>Defines the content and appearance of a center label if one is defined.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">tooltip</td>\n                <td>object</td>\n                <td>Defines tooltip options.</td>\n                <td>true</td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<p>The following attributes should be defined within <code>centerLabel.</code></p>\n\n<div class="demo-attributes table-responsive">\n    <table class="table">\n        <tbody>\n            <tr>\n                <th>Property</th>\n                <th>Type</th>\n                <th>Description</th>\n                <th>Optional</th>\n            </tr>\n            <tr>\n                <td class="attribute">show</td>\n                <td>boolean</td>\n                <td>Whether or not the chart should show a center label.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">text</td>\n                <td>string</td>\n                <td>Defines the content of the center label.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">color</td>\n                <td>color</td>\n                <td>Defines the color of the center label text.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">font</td>\n                <td>string</td>\n                <td>Defines the font family of the center label.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">fontSize</td>\n                <td>number</td>\n                <td>Defines the font size of the center label. Take into account the size of the chart when considering a font\n                    size to ensure text is suitably displayed within the chart.</td>\n                <td>true</td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<p>The following attributes should be defined within <code>tooltip.</code></p>\n\n<div class="demo-attributes table-responsive">\n    <table class="table">\n        <tbody>\n            <tr>\n                <th>Property</th>\n                <th>Type</th>\n                <th>Description</th>\n                <th>Optional</th>\n            </tr>\n            <tr>\n                <td class="attribute">show</td>\n                <td>boolean</td>\n                <td>Defines whether a tooltip should show when a ring is hovered (default: true)</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">content</td>\n                <td>function</td>\n                <td>Defines the content of the tooltip. The function should accept one argument which will contain the data corresponding\n                    to the ring that was hovered. The function should return a HTML string.</td>\n                <td>false</td>\n            </tr>\n            <tr>\n                <td class="attribute">shifts</td>\n                <td>object</td>\n                <td>Defines how the tooltip should be offset from the mouse position.</td>\n                <td>true</td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<p>The following attributes should be defined within <code>shifts.</code></p>\n\n<div class="demo-attributes table-responsive">\n    <table class="table">\n        <tbody>\n            <tr>\n                <th>Property</th>\n                <th>Type</th>\n                <th>Description</th>\n                <th>Optional</th>\n            </tr>\n            <tr>\n                <td class="attribute">x</td>\n                <td>number</td>\n                <td>Defines how many pixels left or right the tooltip should be positioned from the mouse position (default:\n                    0)</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">y</td>\n                <td>number</td>\n                <td>Defines how many pixels up or down the tooltip should be positioned from the mouse position (default: 0)</td>\n                <td>true</td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<p>Nested Donut Charts are defined by the <code>nested-donut</code> directive. The dataset and options\n    attributes define the nested donut chart data and options respectively. Dataset and Options are defined within the NestedDonutChartCtrl.</p>\n\n<blockquote>\n    <p><strong>Note</strong>: Refer to the <a routerLink="/charts/flot-options">Flot Options</a> page for details of chart options.</p>\n</blockquote>\n\n<tabset>\n    <tab heading="HTML">\n        <uxd-snippet language="html" [content]="snippets.compiled.chartHtml"></uxd-snippet>\n    </tab>\n\n    <tab heading="Javascript">\n        <uxd-snippet language="javascript" [content]="snippets.compiled.chartJs"></uxd-snippet>\n    </tab>\n\n    <tab heading="CSS">\n        <uxd-snippet language="css" [content]="snippets.compiled.chartCss"></uxd-snippet>\n    </tab>\n</tabset>\n\n<blockquote>\n    <p><strong>Note</strong>: To upgrade this component to use in an Angular 4 application use: <code>upgradeAdapter.upgradeNg1Component(\'uxNestedDonutNg1\')</code></p>\n</blockquote>'},3394:function(n,t,a){"use strict";var s=this&&this.__extends||function(){var n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var a in t)t.hasOwnProperty(a)&&(n[a]=t[a])};return function(t,a){function s(){this.constructor=t}n(t,a),t.prototype=null===a?Object.create(a):(s.prototype=a.prototype,new s)}}(),o=this&&this.__decorate||function(n,t,a,s){var o,e=arguments.length,p=e<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,a):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)p=Reflect.decorate(n,t,a,s);else for(var c=n.length-1;c>=0;c--)(o=n[c])&&(p=(e<3?o(p):e>3?o(t,a,p):o(t,a))||p);return e>3&&p&&Object.defineProperty(t,a,p),p},e=this&&this.__metadata||function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)};Object.defineProperty(t,"__esModule",{value:!0});var p=a(0),c=a(321),l=a(101),u=a(1624),r=function(n){function t(t){var s=n.call(this,a(3395))||this;s.plunk={files:{"app.component.ts":s.snippets.raw.appTs,"app.component.html":s.snippets.raw.appHtml,"app.component.css":s.snippets.raw.appCss},modules:[{library:"chart.js"},{imports:["ChartsModule"],library:"ng2-charts"},{imports:["ColorServiceModule"],library:"ux-aspects"}],mappings:[{alias:"chart.js",source:"https://unpkg.com/chart.js@2.5.0/dist/Chart.min.js"},{alias:"ng2-charts",source:"https://unpkg.com/ng2-charts@1.5.0/bundles/ng2-charts.umd.min.js"}]},s.donutChartData=[{data:[25,15,18,20,10],borderWidth:0}],s.donutChartLabels=["Sales 1","Sales 2","Sales 3","Sales 4","Sales 5"],s.donutChartLegend=!0;var o=t.getColor("grey2").toHex();return s.donutChartOptions={maintainAspectRatio:!1,responsive:!0,cutoutPercentage:70,legend:{position:"right",labels:{boxWidth:12}},tooltips:{callbacks:{title:function(n){},label:function(n,t){var a=t.datasets[0],s=a.data.reduce(function(n,t){return n+t}),o=a.data[n.index];return Math.round(o/s*100)+"%, Sales "+(n.index+1)}},backgroundColor:o,cornerRadius:0,displayColors:!1}},s.donutChartColors=[{backgroundColor:[t.getColor("chart1").toRgb(),t.getColor("chart2").toRgb(),t.getColor("chart3").toRgb(),t.getColor("chart4").toRgb(),t.getColor("chart5").toRgb()],hoverBackgroundColor:[t.getColor("chart1").setAlpha(.3).toRgba(),t.getColor("chart2").setAlpha(.3).toRgba(),t.getColor("chart3").setAlpha(.3).toRgba(),t.getColor("chart4").setAlpha(.3).toRgba(),t.getColor("chart5").setAlpha(.3).toRgba()]}],s}return s(t,n),t}(u.BaseDocumentationSection);r=o([p.Component({selector:"uxd-charts-donut-chart",template:a(3399)}),c.DocumentationSectionComponent("ChartsDonutChartComponent"),e("design:paramtypes",[l.ColorService])],r),t.ChartsDonutChartComponent=r},3395:function(n,t,a){function s(n){return a(o(n))}function o(n){var t=e[n];if(!(t+1))throw new Error("Cannot find module '"+n+"'.");return t}var e={"./app.css":3396,"./app.html":3397,"./app.ts":3398};s.keys=function(){return Object.keys(e)},s.resolve=o,n.exports=s,s.id=3395},3396:function(n,t){n.exports={snippet:'<span class="token selector">.demo-chart-container</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:".demo-chart-container {\n    display: block;\n    position: relative;\n    height: 200px;\n}"}},3397:function(n,t){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>demo-chart-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">baseChart</span> \n            <span class="token attr-name">[datasets]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>donutChartData<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[labels]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>donutChartLabels<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>donutChartOptions<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[legend]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>donutChartLegend<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[colors]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>donutChartColors<span class="token punctuation">"</span></span>\n            <span class="token attr-name">chartType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>doughnut<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="demo-chart-container">\n\n    <canvas baseChart \n            [datasets]="donutChartData"\n            [labels]="donutChartLabels"\n            [options]="donutChartOptions"\n            [legend]="donutChartLegend"\n            [colors]="donutChartColors"\n            chartType="doughnut">\n    </canvas>\n\n</div>'}},3398:function(n,t){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ColorService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ux-aspects\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token punctuation">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token punctuation">:</span> <span class="token string">\'./src/app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'./src/app.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    <span class="token comment" spellcheck="true">// configure the directive data</span>\n    donutChartData<span class="token punctuation">:</span> Chart<span class="token punctuation">.</span>ChartData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n        data<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        borderWidth<span class="token punctuation">:</span> <span class="token number">0</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    donutChartLabels<span class="token punctuation">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'Sales 1\'</span><span class="token punctuation">,</span> <span class="token string">\'Sales 2\'</span><span class="token punctuation">,</span> <span class="token string">\'Sales 3\'</span><span class="token punctuation">,</span> <span class="token string">\'Sales 4\'</span><span class="token punctuation">,</span> <span class="token string">\'Sales 5\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    donutChartOptions<span class="token punctuation">:</span> Chart<span class="token punctuation">.</span>ChartOptions<span class="token punctuation">;</span>\n    donutChartLegend<span class="token punctuation">:</span> boolean <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    donutChartColors<span class="token punctuation">:</span> any<span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span>colorService<span class="token punctuation">:</span> ColorService<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">let</span> tooltipBackgroundColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey2\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>donutChartOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\n            maintainAspectRatio<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            responsive<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            cutoutPercentage<span class="token punctuation">:</span> <span class="token number">70</span><span class="token punctuation">,</span>\n            legend<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                position<span class="token punctuation">:</span> <span class="token string">\'right\'</span><span class="token punctuation">,</span>\n                labels<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                    boxWidth<span class="token punctuation">:</span> <span class="token number">12</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            tooltips<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                callbacks<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                    title<span class="token punctuation">:</span> <span class="token punctuation">(</span>item<span class="token punctuation">:</span> Chart<span class="token punctuation">.</span>ChartTooltipItem<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                        <span class="token keyword">return</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    label<span class="token punctuation">:</span> <span class="token punctuation">(</span>item<span class="token punctuation">:</span> Chart<span class="token punctuation">.</span>ChartTooltipItem<span class="token punctuation">,</span> data<span class="token punctuation">:</span> any<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\n                        <span class="token comment" spellcheck="true">// get the dataset (we only have one)</span>\n                        <span class="token keyword">let</span> dataset <span class="token operator">=</span> data<span class="token punctuation">.</span>datasets<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n                        <span class="token comment" spellcheck="true">// calculate the total of all segment values</span>\n                        <span class="token keyword">let</span> total <span class="token operator">=</span> dataset<span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>previousValue<span class="token punctuation">:</span> any<span class="token punctuation">,</span> currentValue<span class="token punctuation">:</span> any<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                            <span class="token keyword">return</span> previousValue <span class="token operator">+</span> currentValue<span class="token punctuation">;</span>\n                        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n                        <span class="token comment" spellcheck="true">// get the value of the current segment</span>\n                        <span class="token keyword">let</span> segmentValue <span class="token operator">=</span> dataset<span class="token punctuation">.</span>data<span class="token punctuation">[</span>item<span class="token punctuation">.</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n                        <span class="token comment" spellcheck="true">// calculate the percentage of the current segment compared to the total</span>\n                        <span class="token keyword">let</span> precentage <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>segmentValue <span class="token operator">/</span> total<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n                        <span class="token keyword">return</span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> precentage <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">%, Sales </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> item<span class="token punctuation">.</span>index <span class="token operator">+</span> <span class="token number">1</span> <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                backgroundColor<span class="token punctuation">:</span> tooltipBackgroundColor<span class="token punctuation">,</span>\n                cornerRadius<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                displayColors<span class="token punctuation">:</span> <span class="token boolean">false</span>\n            <span class="token punctuation">}</span> <span class="token keyword">as</span> any\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>donutChartColors <span class="token operator">=</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>\n                backgroundColor<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n                    colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart2\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart3\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart4\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart5\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgb</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                <span class="token punctuation">]</span><span class="token punctuation">,</span>\n                hoverBackgroundColor<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n                    colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart2\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart3\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart4\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart5\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                <span class="token punctuation">]</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>',example:"import { Component } from '@angular/core';\nimport { ColorService } from 'ux-aspects';\n\n@Component({\n    selector: 'app',\n    templateUrl: './src/app.component.html',\n    styleUrls: ['./src/app.component.css']\n})\nexport class AppComponent {\n\n    // configure the directive data\n    donutChartData: Chart.ChartData = [{\n        data: [25, 15, 18, 20, 10],\n        borderWidth: 0\n    }];\n\n    donutChartLabels: string[] = ['Sales 1', 'Sales 2', 'Sales 3', 'Sales 4', 'Sales 5'];\n    donutChartOptions: Chart.ChartOptions;\n    donutChartLegend: boolean = true;\n    donutChartColors: any;\n\n    constructor(colorService: ColorService) {\n\n        let tooltipBackgroundColor = colorService.getColor('grey2').toHex();\n\n        this.donutChartOptions = {\n            maintainAspectRatio: false,\n            responsive: true,\n            cutoutPercentage: 70,\n            legend: {\n                position: 'right',\n                labels: {\n                    boxWidth: 12\n                }\n            },\n            tooltips: {\n                callbacks: {\n                    title: (item: Chart.ChartTooltipItem[]) => {\n                        return;\n                    },\n                    label: (item: Chart.ChartTooltipItem, data: any) => {\n\n                        // get the dataset (we only have one)\n                        let dataset = data.datasets[0];\n\n                        // calculate the total of all segment values\n                        let total = dataset.data.reduce((previousValue: any, currentValue: any) => {\n                            return previousValue + currentValue;\n                        });\n\n                        // get the value of the current segment\n                        let segmentValue = dataset.data[item.index];\n\n                        // calculate the percentage of the current segment compared to the total\n                        let precentage = Math.round(((segmentValue / total) * 100));\n\n                        return `${ precentage }%, Sales ${ item.index + 1 }`;\n                    }\n                },\n                backgroundColor: tooltipBackgroundColor,\n                cornerRadius: 0,\n                displayColors: false\n            } as any\n        };\n\n        this.donutChartColors = [\n            {\n                backgroundColor: [\n                    colorService.getColor('chart1').toRgb(),\n                    colorService.getColor('chart2').toRgb(),\n                    colorService.getColor('chart3').toRgb(),\n                    colorService.getColor('chart4').toRgb(),\n                    colorService.getColor('chart5').toRgb()\n                ],\n                hoverBackgroundColor: [\n                    colorService.getColor('chart1').setAlpha(0.3).toRgba(),\n                    colorService.getColor('chart2').setAlpha(0.3).toRgba(),\n                    colorService.getColor('chart3').setAlpha(0.3).toRgba(),\n                    colorService.getColor('chart4').setAlpha(0.3).toRgba(),\n                    colorService.getColor('chart5').setAlpha(0.3).toRgba()\n                ]\n            }\n        ];\n    }\n\n}"}},3399:function(n,t){n.exports='<div class="demo-chart-container">\n\n    <canvas baseChart \n            [datasets]="donutChartData"\n            [labels]="donutChartLabels"\n            [options]="donutChartOptions"\n            [legend]="donutChartLegend"\n            [colors]="donutChartColors"\n            chartType="doughnut">\n    </canvas>\n\n</div>\n\n<hr>\n\n<p>\n    Donut Charts can be added using the <code>ng2-charts</code> library. \n    The <code>chart.js</code> library needs to be imported and the <code>ChartsModule</code> needs to be added to the appropriate NgModule.\n</p>\n\n<br>\n\n<p>The <code>baseChart</code> directive should be added to a <code>canvas</code> element and the following attributes can be used to customize the chart behavior and appearance:</p>\n\n\n<table class="table">\n\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n\n    <tbody>\n\n        <tr>\n            <td><b>@Input</b> datasets</td>\n            <td><b>object[]</b></td>\n            <td>Contains the data and properties for each data set to be displayed in the chart.</td>\n        </tr>\n\n        <tr>\n            <td><b>@Input</b> chartType</td>\n            <td><b>string</b></td>\n            <td>Indicates the type of the chart. Possible options are: <code>line</code>, <code>bar</code>, <code>radar</code>, <code>pie</code>, <code>polarArea</code>, <code>doughnut</code></td>\n        </tr>\n\n        <tr>\n            <td><b>@Input</b> options</td>\n            <td><b>ChartOptions</b></td>\n            <td>Configures the appearance and behavior of all aspects of the chart.</td>\n        </tr>\n\n        <tr>\n            <td><b>@Input</b> colors</td>\n            <td><b>object[]</b></td>\n            <td>Configure the color values to be used within the chart.</td>\n        </tr>\n\n        <tr>\n            <td><b>@Input</b> legend</td>\n            <td><b>boolean</b></td>\n            <td>Determines whether or not the legend should be displayed.</td>\n        </tr>\n\n        <tr>\n            <td><b>@Output</b> chartClick</td>\n            <td></td>\n            <td>Fires when click on a chart has occurred, returns information regarding active points and labels</td>\n        </tr>\n\n        <tr>\n            <td><b>@Output</b> chartHover</td>\n            <td></td>\n            <td>Fires when mousemove (hover) on a chart has occurred, returns information regarding active points and labels.</td>\n        </tr>\n\n    </tbody>\n</table>\n\n<p>Complete documentation on the directive and chart options can be found at the documentation links below.</p>\n\n<p>The following code can be used to create the example above: </p>\n\n<tabset>\n\n    <tab heading="HTML">\n        <uxd-snippet language="html" [content]="snippets.compiled.appHtml"></uxd-snippet>\n    </tab>\n    \n    <tab heading="TypeScript">\n        <uxd-snippet language="javascript" [content]="snippets.compiled.appTs"></uxd-snippet>\n    </tab>\n    \n    <tab heading="CSS">\n        <uxd-snippet language="css" [content]="snippets.compiled.appCss"></uxd-snippet>\n    </tab>\n\n</tabset>\n\n<br>\n\n<blockquote>\n\n    <p class="m-b-nil">\n        <b>Dependencies: </b>\n        <a class="hyperlink" href="https://www.npmjs.com/package/ng2-charts">ng2-charts</a>, \n        <a class="hyperlink" href="https://www.npmjs.com/package/chart.js">chart.js</a>\n    </p>\n\n    <p class="m-b-nil">\n        <b>Type Definitions: </b>\n        <a class="hyperlink" href="https://www.npmjs.com/package/@types/chart.js">@types/chart.js</a>\n    </p>\n\n    <p class="m-b-nil">\n        <b>Modules: </b>\n        <span>ChartsModule</span>\n    </p>\n\n\n    <p class="m-b-nil">\n        <b>Documentation: </b>\n        <a class="hyperlink" href="http://valor-software.com/ng2-charts/">Angular Directive Documentation</a>, \n        <a class="hyperlink" href="http://www.chartjs.org/docs/">Chart Library Documentation</a>\n    </p>\n</blockquote>'}});
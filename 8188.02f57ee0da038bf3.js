(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8188],{33204:T=>{T.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-accordion</span> <span class="token attr-name">[collapseOthers]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-accordion-panel</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>accordion-chevron<span class="token punctuation">"</span></span> <span class="token attr-name">heading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Tree Grid with Preloaded Data<span class="token punctuation">"</span></span> <span class="token attr-name">[expanded]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treegrid<span class="token punctuation">"</span></span>\n            <span class="token attr-name">aria-multiselectable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>\n            <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table table-hover<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[uxTreeGrid]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>items<span class="token punctuation">"</span></span>\n            <span class="token attr-name">(rowsChange)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rows = $event<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treegrid-header table-header-dark<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-checkbox</span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Select all rows<span class="token punctuation">"</span></span> <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectAll<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-checkbox</span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treegrid-header-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Date<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span> <span class="token attr-name">[uxSelection]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selected<span class="token punctuation">"</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>simple<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let row of rows<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[attr.aria-expanded]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row.expanded<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[attr.aria-level]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row.state.level + 1<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[attr.aria-setsize]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row.state.setSize<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[attr.aria-posinset]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row.state.positionInSet<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clickable<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[uxTreeGridRow]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[canExpand]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row.type === \'folder\'<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[(expanded)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row.expanded<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">#treeGridRow</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uxTreeGridRow<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[uxSelectionItem]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[selected]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>isSelected(row)<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">(selectedChange)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$event ? select(row) : deselect(row)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">uxTreeGridIndent</span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treegrid-expander<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row.children &amp;&amp; row.children.length > 0<span class="token punctuation">"</span></span>\n                                <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>\n                                <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span>\n                                <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span>\n                                <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treeGridRow.toggle(); $event.stopPropagation()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>!treeGridRow.loading<span class="token punctuation">"</span></span>\n                                         <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chevron-right<span class="token punctuation">"</span></span>\n                                         <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treegrid-expander-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n\n                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treeGridRow.loading<span class="token punctuation">"</span></span>\n                                      <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>spinner spinner-accent spinner-bounce-middle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-checkbox</span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Toggle row selection<span class="token punctuation">"</span></span>\n                            <span class="token attr-name">[value]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>isSelected(row)<span class="token punctuation">"</span></span>\n                            <span class="token attr-name">(valueChange)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$event ? select(row) : deselect(row)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-checkbox</span><span class="token punctuation">></span></span>\n\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treegrid-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">[name]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getIcon(row)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>{{ row.title }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>{{ row.date | date }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>m-t-md<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            Selected items:\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let item of selected; let last = last<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                {{ item.title + (last ? \'.\' : \', \') }}\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selected?.length === 0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>none<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-accordion-panel</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-accordion-panel</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>accordion-chevron<span class="token punctuation">"</span></span> <span class="token attr-name">heading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Tree Grid with Asynchronous Loading<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-secondary<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>setExpanded(asyncItems, true)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chevron-down<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span> Expand All\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-secondary<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>setExpanded(asyncItems, false)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chevron-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span> Contract All\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-secondary<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clearChildren()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>close<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span> Clear Cached Data\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treegrid<span class="token punctuation">"</span></span>\n            <span class="token attr-name">aria-multiselectable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>\n            <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table table-hover<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[uxTreeGrid]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>asyncItems<span class="token punctuation">"</span></span>\n            <span class="token attr-name">(rowsChange)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>asyncRows = $event<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[loadChildren]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loadChildrenFn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treegrid-header table-header-dark<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Author<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Date<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span> <span class="token attr-name">[(uxSelection)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>asyncSelected<span class="token punctuation">"</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let row of asyncRows<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[attr.aria-expanded]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row.expanded<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[attr.aria-level]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row.state.level + 1<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[attr.aria-setsize]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row.state.setSize<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[attr.aria-posinset]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row.state.positionInSet<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clickable<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[uxTreeGridRow]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[canExpand]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row.type === \'folder\'<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[(expanded)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row.expanded<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">#treeGridRow</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uxTreeGridRow<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[uxSelectionItem]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">uxTreeGridIndent</span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treegrid-expander<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row.type === \'folder\'<span class="token punctuation">"</span></span>\n                                <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>\n                                <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span>\n                                <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span>\n                                <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treeGridRow.toggle(); $event.stopPropagation()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>!treeGridRow.loading<span class="token punctuation">"</span></span>\n                                         <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chevron-right<span class="token punctuation">"</span></span>\n                                         <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treegrid-expander-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n\n                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treeGridRow.loading<span class="token punctuation">"</span></span>\n                                      <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>spinner spinner-accent spinner-bounce-middle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treegrid-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">[name]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getIcon(row)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>{{ row.title }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>{{ row.author }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>{{ row.date | date }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>m-t-md<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            Selected items:\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let item of asyncSelected; let last = last<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                {{ item.title + (last ? \'.\' : \', \') }}\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>asyncSelected?.length === 0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>none<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-accordion-panel</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-accordion</span><span class="token punctuation">></span></span>\n',example:'<ux-accordion [collapseOthers]="true">\n    <ux-accordion-panel class="accordion-chevron" heading="Tree Grid with Preloaded Data" [expanded]="true">\n\n        <table role="treegrid"\n            aria-multiselectable="true"\n            class="table table-hover"\n            [uxTreeGrid]="items"\n            (rowsChange)="rows = $event">\n            <thead>\n                <tr class="treegrid-header table-header-dark">\n                    <th>\n                        <ux-checkbox aria-label="Select all rows" [(value)]="selectAll"></ux-checkbox>\n                        <span class="treegrid-header-text">Title</span>\n                    </th>\n                    <th>Date</th>\n                </tr>\n            </thead>\n            <tbody [uxSelection]="selected" mode="simple">\n\n                <tr *ngFor="let row of rows"\n                    role="row"\n                    [attr.aria-expanded]="row.expanded"\n                    [attr.aria-level]="row.state.level + 1"\n                    [attr.aria-setsize]="row.state.setSize"\n                    [attr.aria-posinset]="row.state.positionInSet"\n                    class="clickable"\n                    [uxTreeGridRow]="row"\n                    [canExpand]="row.type === \'folder\'"\n                    [(expanded)]="row.expanded"\n                    #treeGridRow="uxTreeGridRow"\n                    [uxSelectionItem]="row"\n                    [selected]="isSelected(row)"\n                    (selectedChange)="$event ? select(row) : deselect(row)">\n\n                    <td uxTreeGridIndent>\n                        <span class="treegrid-expander">\n                            <button *ngIf="row.children && row.children.length > 0"\n                                aria-hidden="true"\n                                type="button"\n                                tabindex="-1"\n                                (click)="treeGridRow.toggle(); $event.stopPropagation()">\n\n                                <ux-icon *ngIf="!treeGridRow.loading"\n                                         name="chevron-right"\n                                         class="treegrid-expander-icon">\n                                </ux-icon>\n\n                                <span *ngIf="treeGridRow.loading"\n                                      class="spinner spinner-accent spinner-bounce-middle">\n                                </span>\n                            </button>\n                        </span>\n\n                        <ux-checkbox aria-label="Toggle row selection"\n                            [value]="isSelected(row)"\n                            (valueChange)="$event ? select(row) : deselect(row)"></ux-checkbox>\n\n                        <span class="treegrid-icon">\n                            <ux-icon [name]="getIcon(row)"></ux-icon>\n                        </span>\n\n                        <span>{{ row.title }}</span>\n                    </td>\n\n                    <td>\n                        <span>{{ row.date | date }}</span>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n\n        <p class="m-t-md">\n            Selected items:\n            <span *ngFor="let item of selected; let last = last">\n                {{ item.title + (last ? \'.\' : \', \') }}\n            </span>\n            <em *ngIf="selected?.length === 0">none</em>\n        </p>\n\n    </ux-accordion-panel>\n    <ux-accordion-panel class="accordion-chevron" heading="Tree Grid with Asynchronous Loading">\n\n        <div class="btn-container">\n            <button type="button" class="btn button-secondary" (click)="setExpanded(asyncItems, true)">\n                <ux-icon name="chevron-down"></ux-icon> Expand All\n            </button>\n            <button type="button" class="btn button-secondary" (click)="setExpanded(asyncItems, false)">\n                <ux-icon name="chevron-right"></ux-icon> Contract All\n            </button>\n            <button type="button" class="btn button-secondary" (click)="clearChildren()">\n                <ux-icon name="close"></ux-icon> Clear Cached Data\n            </button>\n        </div>\n\n        <table role="treegrid"\n            aria-multiselectable="true"\n            class="table table-hover"\n            [uxTreeGrid]="asyncItems"\n            (rowsChange)="asyncRows = $event"\n            [loadChildren]="loadChildrenFn">\n            <thead>\n                <tr class="treegrid-header table-header-dark">\n                    <th>Name</th>\n                    <th>Author</th>\n                    <th>Date</th>\n                </tr>\n            </thead>\n            <tbody [(uxSelection)]="asyncSelected" mode="row">\n\n                <tr *ngFor="let row of asyncRows"\n                    role="row"\n                    [attr.aria-expanded]="row.expanded"\n                    [attr.aria-level]="row.state.level + 1"\n                    [attr.aria-setsize]="row.state.setSize"\n                    [attr.aria-posinset]="row.state.positionInSet"\n                    class="clickable"\n                    [uxTreeGridRow]="row"\n                    [canExpand]="row.type === \'folder\'"\n                    [(expanded)]="row.expanded"\n                    #treeGridRow="uxTreeGridRow"\n                    [uxSelectionItem]="row">\n\n                    <td uxTreeGridIndent>\n                        <span class="treegrid-expander">\n                            <button *ngIf="row.type === \'folder\'"\n                                aria-hidden="true"\n                                type="button"\n                                tabindex="-1"\n                                (click)="treeGridRow.toggle(); $event.stopPropagation()">\n\n                                <ux-icon *ngIf="!treeGridRow.loading"\n                                         name="chevron-right"\n                                         class="treegrid-expander-icon">\n                                </ux-icon>\n\n                                <span *ngIf="treeGridRow.loading"\n                                      class="spinner spinner-accent spinner-bounce-middle">\n                                </span>\n                            </button>\n                        </span>\n\n                        <span class="treegrid-icon">\n                                <ux-icon [name]="getIcon(row)"></ux-icon>\n                        </span>\n\n                        <span>{{ row.title }}</span>\n                    </td>\n\n                    <td>\n                        <span>{{ row.author }}</span>\n                    </td>\n\n                    <td>\n                        <span>{{ row.date | date }}</span>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n\n        <p class="m-t-md">\n            Selected items:\n            <span *ngFor="let item of asyncSelected; let last = last">\n                {{ item.title + (last ? \'.\' : \', \') }}\n            </span>\n            <em *ngIf="asyncSelected?.length === 0">none</em>\n        </p>\n\n    </ux-accordion-panel>\n</ux-accordion>\n'}},87504:T=>{T.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> TreeGridItem<span class="token punctuation">,</span> TreeGridLoadFunction <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'chance\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">selector</span><span class="token operator">:</span> <span class="token string">\'app-root\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">templateUrl</span><span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    <span class="token literal-property property">selected</span><span class="token operator">:</span> FileNode<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">set</span> <span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">selectAll</span><span class="token operator">:</span> boolean <span class="token operator">|</span> <span class="token operator">-</span><span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>selectAll <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>selected <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>selectAll <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// Tip: pass `this.rows` instead to select only visible rows</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>selected <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>itemsFlat<span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">get</span> <span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> boolean <span class="token operator">|</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>selected<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>selected<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>itemsFlat<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token literal-property property">rows</span><span class="token operator">:</span> FileNode<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token comment">/** The raw nested data source */</span>\n    <span class="token literal-property property">items</span><span class="token operator">:</span> FileNode<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Documents\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">\'2013-02-16\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'folder\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n                <span class="token punctuation">{</span>\n                    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Pictures\'</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">\'2013-05-28\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'folder\'</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n                        <span class="token punctuation">{</span>\n                            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Alcazar\'</span><span class="token punctuation">,</span>\n                            <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">\'2014-05-15\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'file\'</span>\n                        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                        <span class="token punctuation">{</span>\n                            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Citadel\'</span><span class="token punctuation">,</span>\n                            <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">\'2015-09-02\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'file\'</span>\n                        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                        <span class="token punctuation">{</span>\n                            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Donjon\'</span><span class="token punctuation">,</span>\n                            <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">\'2014-04-10\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'file\'</span>\n                        <span class="token punctuation">}</span>\n                    <span class="token punctuation">]</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Word files\'</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">\'2013-09-25\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'folder\'</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n                        <span class="token punctuation">{</span>\n                            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Accounts\'</span><span class="token punctuation">,</span>\n                            <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">\'2013-10-04\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'folder\'</span><span class="token punctuation">,</span>\n                            <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n                                <span class="token punctuation">{</span>\n                                    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Castle\'</span><span class="token punctuation">,</span>\n                                    <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">\'2014-05-15\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                                    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'file\'</span>\n                                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                                <span class="token punctuation">{</span>\n                                    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Estate\'</span><span class="token punctuation">,</span>\n                                    <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">\'2015-08-03\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                                    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'file\'</span>\n                                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                                <span class="token punctuation">{</span>\n                                    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Manor\'</span><span class="token punctuation">,</span>\n                                    <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">\'2014-05-30\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                                    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'file\'</span>\n                                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                                <span class="token punctuation">{</span>\n                                    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Mansion\'</span><span class="token punctuation">,</span>\n                                    <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">\'2014-04-23\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                                    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'file\'</span>\n                                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                                <span class="token punctuation">{</span>\n                                    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Villa\'</span><span class="token punctuation">,</span>\n                                    <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">\'2015-09-21\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                                    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'file\'</span>\n                                <span class="token punctuation">}</span>\n                            <span class="token punctuation">]</span>\n                        <span class="token punctuation">}</span>\n                    <span class="token punctuation">]</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Emails\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">\'2013-03-17\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'folder\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n                <span class="token punctuation">{</span>\n                    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Inbox\'</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">\'2013-03-17\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'folder\'</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Outbox\'</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">\'2013-03-17\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'folder\'</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Empty\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">\'2016-06-02\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'folder\'</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    itemsFlat <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">flatten</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token literal-property property">asyncSelected</span><span class="token operator">:</span> FileNode<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token literal-property property">asyncRows</span><span class="token operator">:</span> FileNode<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token literal-property property">asyncItems</span><span class="token operator">:</span> FileNode<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Folder 1\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'folder\'</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Folder 2\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'folder\'</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Folder 3\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'folder\'</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token literal-property property">loadChildrenFn</span><span class="token operator">:</span> TreeGridLoadFunction <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loadChildren</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">select</span><span class="token punctuation">(</span>row<span class="token operator">:</span> FileNode<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n\n        <span class="token comment">// if the row is not currently selected then select it</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>selected<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>selected <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>selected<span class="token punctuation">,</span> row<span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">// if the row has any children select them also</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>row<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            row<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">child</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">deselect</span><span class="token punctuation">(</span>row<span class="token operator">:</span> FileNode<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n\n        <span class="token comment">// deselect the current row</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>selected <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>selected<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">_row</span> <span class="token operator">=></span> _row <span class="token operator">!==</span> row<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// if the row has any children deselect them also</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>row<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            row<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">child</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">deselect</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">checkChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">checkChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> row <span class="token keyword">of</span> <span class="token keyword">this</span><span class="token punctuation">.</span>selected<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>row<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">\'children\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">const</span> isChildSelected <span class="token operator">=</span> row<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">child</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSelected</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isChildSelected<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">this</span><span class="token punctuation">.</span>selected <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>selected<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">_row</span> <span class="token operator">=></span> _row <span class="token operator">!==</span> row<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">isSelected</span><span class="token punctuation">(</span>row<span class="token operator">:</span> FileNode<span class="token punctuation">)</span><span class="token operator">:</span> boolean <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>selected<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">loadChildren</span><span class="token punctuation">(</span>parent<span class="token operator">:</span> FileNode<span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>FileNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token operator">&lt;</span>FileNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                <span class="token keyword">const</span> index <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>asyncItems<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">const</span> <span class="token literal-property property">result</span><span class="token operator">:</span> FileNode<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Document </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token punctuation">(</span>index <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n                        <span class="token literal-property property">author</span><span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                        <span class="token literal-property property">date</span><span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'file\'</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n                <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">flatten</span><span class="token punctuation">(</span>items<span class="token operator">:</span> FileNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> FileNode<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> items<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">previous<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">const</span> children <span class="token operator">=</span> item<span class="token punctuation">.</span>children <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">flatten</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n            <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span>previous<span class="token punctuation">,</span> item<span class="token punctuation">,</span> <span class="token operator">...</span>children<span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">clearChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> <span class="token keyword">this</span><span class="token punctuation">.</span>asyncItems<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            item<span class="token punctuation">.</span>expanded <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n            <span class="token keyword">delete</span> item<span class="token punctuation">.</span>children<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">setExpanded</span><span class="token punctuation">(</span>items<span class="token operator">:</span> FileNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">expanded</span><span class="token operator">:</span> boolean<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> items<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            item<span class="token punctuation">.</span>expanded <span class="token operator">=</span> expanded<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">getIcon</span><span class="token punctuation">(</span>item<span class="token operator">:</span> FileNode<span class="token punctuation">)</span><span class="token operator">:</span> string <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">\'folder\'</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>item<span class="token punctuation">.</span>expanded<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token string">\'folder\'</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">\'folder\'</span> <span class="token operator">&amp;&amp;</span> item<span class="token punctuation">.</span>expanded<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token string">\'folder-open\'</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">\'file\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token string">\'document\'</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">FileNode</span> <span class="token keyword">extends</span> <span class="token class-name">TreeGridItem</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">title</span><span class="token operator">:</span> string<span class="token punctuation">;</span>\n    author<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">;</span>\n    date<span class="token operator">?</span><span class="token operator">:</span> Date<span class="token punctuation">;</span>\n    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'folder\'</span> <span class="token operator">|</span> <span class="token string">\'file\'</span><span class="token punctuation">;</span>\n    children<span class="token operator">?</span><span class="token operator">:</span> FileNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    selected<span class="token operator">?</span><span class="token operator">:</span> boolean<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',example:"import { Component } from '@angular/core';\nimport { TreeGridItem, TreeGridLoadFunction } from '@ux-aspects/ux-aspects';\nimport 'chance';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html'\n})\nexport class AppComponent {\n\n    selected: FileNode[] = [];\n\n    set selectAll(selectAll: boolean | -1) {\n        if (selectAll === false) {\n            this.selected = [];\n        } else if (selectAll === true) {\n            // Tip: pass `this.rows` instead to select only visible rows\n            this.selected = [...this.itemsFlat];\n        }\n    }\n\n    get selectAll(): boolean | -1 {\n        if (this.selected.length === 0) {\n            return false;\n        }\n        if (this.selected.length === this.itemsFlat.length) {\n            return true;\n        }\n        return -1;\n    }\n\n    rows: FileNode[] = [];\n\n    /** The raw nested data source */\n    items: FileNode[] = [\n        {\n            title: 'Documents',\n            date: new Date('2013-02-16'),\n            type: 'folder',\n            children: [\n                {\n                    title: 'Pictures',\n                    date: new Date('2013-05-28'),\n                    type: 'folder',\n                    children: [\n                        {\n                            title: 'Alcazar',\n                            date: new Date('2014-05-15'),\n                            type: 'file'\n                        },\n                        {\n                            title: 'Citadel',\n                            date: new Date('2015-09-02'),\n                            type: 'file'\n                        },\n                        {\n                            title: 'Donjon',\n                            date: new Date('2014-04-10'),\n                            type: 'file'\n                        }\n                    ]\n                },\n                {\n                    title: 'Word files',\n                    date: new Date('2013-09-25'),\n                    type: 'folder',\n                    children: [\n                        {\n                            title: 'Accounts',\n                            date: new Date('2013-10-04'),\n                            type: 'folder',\n                            children: [\n                                {\n                                    title: 'Castle',\n                                    date: new Date('2014-05-15'),\n                                    type: 'file'\n                                },\n                                {\n                                    title: 'Estate',\n                                    date: new Date('2015-08-03'),\n                                    type: 'file'\n                                },\n                                {\n                                    title: 'Manor',\n                                    date: new Date('2014-05-30'),\n                                    type: 'file'\n                                },\n                                {\n                                    title: 'Mansion',\n                                    date: new Date('2014-04-23'),\n                                    type: 'file'\n                                },\n                                {\n                                    title: 'Villa',\n                                    date: new Date('2015-09-21'),\n                                    type: 'file'\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            title: 'Emails',\n            date: new Date('2013-03-17'),\n            type: 'folder',\n            children: [\n                {\n                    title: 'Inbox',\n                    date: new Date('2013-03-17'),\n                    type: 'folder'\n                },\n                {\n                    title: 'Outbox',\n                    date: new Date('2013-03-17'),\n                    type: 'folder'\n                }\n            ]\n        },\n        {\n            title: 'Empty',\n            date: new Date('2016-06-02'),\n            type: 'folder'\n        }\n    ];\n\n    itemsFlat = this.flatten(this.items);\n\n    asyncSelected: FileNode[] = [];\n\n    asyncRows: FileNode[] = [];\n\n    asyncItems: FileNode[] = [\n        {\n            title: 'Folder 1',\n            type: 'folder'\n        },\n        {\n            title: 'Folder 2',\n            type: 'folder'\n        },\n        {\n            title: 'Folder 3',\n            type: 'folder'\n        }\n    ];\n\n    loadChildrenFn: TreeGridLoadFunction = this.loadChildren.bind(this);\n\n    select(row: FileNode): void {\n\n        // if the row is not currently selected then select it\n        if (this.selected.indexOf(row) === -1) {\n            this.selected = [...this.selected, row];\n        }\n\n        // if the row has any children select them also\n        if (row.children) {\n            row.children.forEach(child => this.select(child));\n        }\n    }\n\n    deselect(row: FileNode): void {\n\n        // deselect the current row\n        this.selected = this.selected.filter(_row => _row !== row);\n\n        // if the row has any children deselect them also\n        if (row.children) {\n            row.children.forEach(child => this.deselect(child));\n        }\n\n        this.checkChildren();\n    }\n\n    checkChildren(): void {\n        for (const row of this.selected) {\n            if (row.hasOwnProperty('children')) {\n                const isChildSelected = row.children.some(child => this.isSelected(child));\n\n                if (!isChildSelected) {\n                    this.selected = this.selected.filter(_row => _row !== row);\n                }\n            }\n        }\n    }\n\n    isSelected(row: FileNode): boolean {\n        return this.selected.indexOf(row) !== -1;\n    }\n\n    loadChildren(parent: FileNode): Promise<FileNode[]> {\n        return new Promise<FileNode[]>(resolve => {\n            setTimeout(() => {\n                const index = this.asyncItems.indexOf(parent);\n                const result: FileNode[] = [];\n                for (let i = 0; i < 10; i += 1) {\n                    result.push({\n                        title: `Document ${(index * 10) + i + 1}`,\n                        author: chance.name(),\n                        date: chance.date(),\n                        type: 'file'\n                    });\n                }\n                resolve(result);\n            }, 2000);\n        });\n    }\n\n    flatten(items: FileNode[]): FileNode[] {\n        return items.reduce((previous, item) => {\n            const children = item.children ? this.flatten(item.children) : [];\n            return [...previous, item, ...children];\n        }, []);\n    }\n\n    clearChildren(): void {\n        for (let item of this.asyncItems) {\n            item.expanded = false;\n            delete item.children;\n        }\n    }\n\n    setExpanded(items: FileNode[], expanded: boolean): void {\n        for (let item of items) {\n            item.expanded = expanded;\n        }\n    }\n\n    getIcon(item: FileNode): string {\n        if (item.type === 'folder' && !item.expanded) {\n            return 'folder';\n        }\n\n        if (item.type === 'folder' && item.expanded) {\n            return 'folder-open';\n        }\n\n        if (item.type === 'file') {\n            return 'document';\n        }\n    }\n}\n\ninterface FileNode extends TreeGridItem {\n    title: string;\n    author?: string;\n    date?: Date;\n    type: 'folder' | 'file';\n    children?: FileNode[];\n    selected?: boolean;\n}\n"}},76613:T=>{T.exports={snippet:'<span class="token selector">.tree-view-example-container</span> <span class="token punctuation">{</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 250px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.node-content-wrapper</span> <span class="token punctuation">{</span>\n    <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.node-content-wrapper:focus</span> <span class="token punctuation">{</span>\n    <span class="token property">outline</span><span class="token punctuation">:</span> 2px dotted<span class="token punctuation">;</span>\n    <span class="token property">outline</span><span class="token punctuation">:</span> auto -webkit-focus-ring-color<span class="token punctuation">;</span>\n    <span class="token property">outline-color</span><span class="token punctuation">:</span> #00a7a2<span class="token punctuation">;</span>\n    <span class="token property">outline-offset</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.node-content-wrapper.title</span> <span class="token punctuation">{</span>\n    <span class="token property">margin-left</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.node-content-wrapper-focused</span> <span class="token punctuation">{</span>\n    <span class="token property">background-color</span><span class="token punctuation">:</span> #e7f1f9<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'}},46794:T=>{T.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tree-view-example-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tree-root</span> <span class="token attr-name">#tree</span>\n            <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tree<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[nodes]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nodes<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>options<span class="token punctuation">"</span></span>\n            <span class="token attr-name">(focus)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>focused = $event.node<span class="token punctuation">"</span></span>\n            <span class="token attr-name">(stateChange)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>updatedFocusedItem()<span class="token punctuation">"</span></span>\n            <span class="token attr-name">(loadNodeChildren)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onChildrenLoaded($event.node)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ng-template</span> <span class="token attr-name">#treeNodeFullTemplate</span> <span class="token attr-name">let-node</span> <span class="token attr-name">let-index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span> <span class="token attr-name">let-templates</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>templates<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tree-node<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node-wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-checkbox</span>\n                      <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Toggle selection of {{ node.data.name }}<span class="token punctuation">"</span></span>\n                      <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span>\n                      <span class="token attr-name">[value]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node.data.checked<span class="token punctuation">"</span></span>\n                      <span class="token attr-name">(valueChange)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>setChecked(node, $event)<span class="token punctuation">"</span></span>\n                      <span class="token attr-name">[indeterminateValue]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-checkbox</span><span class="token punctuation">></span></span>\n\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tree-node-expander</span> <span class="token attr-name">[node]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tree-node-expander</span><span class="token punctuation">></span></span>\n\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node-content-wrapper<span class="token punctuation">"</span></span>\n                      <span class="token attr-name">uxFocusIndicator</span>\n                      <span class="token attr-name">[class.node-content-wrapper-active]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node.data.checked<span class="token punctuation">"</span></span>\n                      <span class="token attr-name">[class.node-content-wrapper-focused]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node.data.checked || node.isFocused<span class="token punctuation">"</span></span>\n                      <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treeitem<span class="token punctuation">"</span></span>\n                      <span class="token attr-name">[attr.aria-expanded]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node.isExpanded<span class="token punctuation">"</span></span>\n                      <span class="token attr-name">[attr.aria-level]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node.level<span class="token punctuation">"</span></span>\n                      <span class="token attr-name">[tabindex]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node === focused || !focused &amp;&amp; node.isRoot &amp;&amp; node.index === 0 ? 0 : -1<span class="token punctuation">"</span></span>\n                      <span class="token attr-name">(focus)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>focus(node)<span class="token punctuation">"</span></span>\n                      <span class="token attr-name">[focusIf]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node === focused<span class="token punctuation">"</span></span>\n                      <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>setChecked(node, !node.data.checked)<span class="token punctuation">"</span></span>\n                      <span class="token attr-name">(keydown)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>setChecked(node, !node.data.checked, $event)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n                       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">[name]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getIcon(node)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n                       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">[class.title]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{ node.data.name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tree-node-children</span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>group<span class="token punctuation">"</span></span> <span class="token attr-name">[node]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node<span class="token punctuation">"</span></span> <span class="token attr-name">[templates]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>templates<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tree-node-children</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ng-template</span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ng-template</span> <span class="token attr-name">#loadingTemplate</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>spinner spinner-accent spinner-bounce-middle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ng-template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tree-root</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-secondary<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tree.treeModel.expandAll()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Expand All Nodes<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-secondary<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tree.treeModel.collapseAll()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Collapse All Nodes<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>'}},57748:T=>{T.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> TreeNode <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@circlon/angular-tree-component\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> TreeViewService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./service.ts\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">selector</span><span class="token operator">:</span> <span class="token string">\'app-root\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">templateUrl</span><span class="token operator">:</span> <span class="token string">\'./app.html\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">styleUrls</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    <span class="token literal-property property">nodes</span><span class="token operator">:</span> TreeViewExampleNode<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Documents\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">hasChildren</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">source</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_treeViewService<span class="token punctuation">.</span>getDocuments\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Pictures\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">hasChildren</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">source</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_treeViewService<span class="token punctuation">.</span>getPictures\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    options <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token function-variable function">getChildren</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">node</span><span class="token operator">:</span> TreeNode</span><span class="token punctuation">)</span> <span class="token operator">=></span> node<span class="token punctuation">.</span>data<span class="token punctuation">.</span>source <span class="token operator">?</span> node<span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token literal-property property">focused</span><span class="token operator">:</span> TreeNode<span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token keyword">private</span> <span class="token literal-property property">_treeViewService</span><span class="token operator">:</span> TreeViewService</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>\n\n    <span class="token comment">/**\n     * When a node is checked the state of it\'s children should be updated (if there are any)\n     * and the state of all parent nodes should also be updated (if there are any).\n     */</span>\n    <span class="token function">setChecked</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">node</span><span class="token operator">:</span> TreeNode<span class="token punctuation">,</span> <span class="token literal-property property">checked</span><span class="token operator">:</span> boolean <span class="token operator">=</span> node<span class="token punctuation">.</span>data<span class="token punctuation">.</span>checked<span class="token punctuation">,</span> event<span class="token operator">?</span><span class="token operator">:</span> KeyboardEvent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token comment">// if the value of the node has not changed then do nothing</span>\n        <span class="token comment">// or if triggered by keyboard only react when spacebar is pressed</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>data<span class="token punctuation">.</span>checked <span class="token operator">===</span> checked <span class="token operator">||</span> event <span class="token operator">&amp;&amp;</span> event<span class="token punctuation">.</span>keyCode <span class="token operator">!==</span> <span class="token number">32</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setChildrenState</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> checked<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setParentNodeState</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>realParent<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// if the spacebar key was pressed then prevent the default behavior</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">/**\n     * Update the checked state of a nodes children, eg.\n     * If the node is checked then all children should also be checked\n     * If the node is unchecked then all children should be unchecked\n     */</span>\n    <span class="token function">setChildrenState</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">node</span><span class="token operator">:</span> TreeNode<span class="token punctuation">,</span> <span class="token literal-property property">checked</span><span class="token operator">:</span> boolean <span class="token operator">=</span> node<span class="token punctuation">.</span>data<span class="token punctuation">.</span>checked</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        node<span class="token punctuation">.</span>data<span class="token punctuation">.</span>checked <span class="token operator">=</span> checked<span class="token punctuation">;</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            node<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">child</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setChildrenState</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> checked<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">/**\n     * Update a nodes checked state to reflect the state of it\'s children, eg.\n     * If all child nodes are checked then the parent should be selected\n     * If all child nodes are unchecked then the parent node should also be deselected\n     * If some nodes are checked then the checkbox should show an indeterminate state\n     */</span>\n    <span class="token function">setParentNodeState</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">node</span><span class="token operator">:</span> TreeNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>node<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">let</span> allChildrenChecked <span class="token operator">=</span> node<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token parameter">child</span> <span class="token operator">=></span> child<span class="token punctuation">.</span>data<span class="token punctuation">.</span>checked<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> noChildrenChecked <span class="token operator">=</span> node<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token parameter">child</span> <span class="token operator">=></span> <span class="token operator">!</span>child<span class="token punctuation">.</span>data<span class="token punctuation">.</span>checked<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>allChildrenChecked<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            node<span class="token punctuation">.</span>data<span class="token punctuation">.</span>checked <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>noChildrenChecked<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            node<span class="token punctuation">.</span>data<span class="token punctuation">.</span>checked <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            node<span class="token punctuation">.</span>data<span class="token punctuation">.</span>checked <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setParentNodeState</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">/**\n     * When a node lazy loads it\'s children, update their checkboxes to reflect\n     * the current state of the parent node.\n     */</span>\n    <span class="token function">onChildrenLoaded</span><span class="token punctuation">(</span>node<span class="token operator">:</span> TreeNode<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setChildrenState</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">/**\n     * If tree view is tabbed to, focus the node\n     */</span>\n    <span class="token function">focus</span><span class="token punctuation">(</span>node<span class="token operator">:</span> TreeNode<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        node<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        node<span class="token punctuation">.</span>treeModel<span class="token punctuation">.</span><span class="token function">setFocus</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">/**\n     * Ensure that the focused node is visible, otherwise reset it\n     */</span>\n    <span class="token function">updatedFocusedItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token comment">// check if the focused node is still visible</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isNodeVisible</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>focused<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>focused <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">isNodeVisible</span><span class="token punctuation">(</span>node<span class="token operator">:</span> TreeNode<span class="token punctuation">)</span><span class="token operator">:</span> boolean <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>isRoot<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>isCollapsed<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isNodeVisible</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">getIcon</span><span class="token punctuation">(</span>node<span class="token operator">:</span> TreeNode<span class="token punctuation">)</span><span class="token operator">:</span> string <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>hasChildren <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>node<span class="token punctuation">.</span>isExpanded<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token string">\'folder\'</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>hasChildren <span class="token operator">&amp;&amp;</span> node<span class="token punctuation">.</span>isExpanded<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token string">\'folder-open\'</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>node<span class="token punctuation">.</span>hasChildren<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token string">\'document\'</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">TreeViewExampleNode</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">;</span>\n    children<span class="token operator">?</span><span class="token operator">:</span> TreeViewExampleNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    hasChildren<span class="token operator">?</span><span class="token operator">:</span> boolean<span class="token punctuation">;</span>\n    source<span class="token operator">?</span><span class="token operator">:</span> Function<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n'}},55643:T=>{T.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Injectable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'chance\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Injectable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">TreeViewService</span> <span class="token punctuation">{</span>\n\n    <span class="token function">getDocuments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>TreeViewExampleNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token operator">&lt;</span>TreeViewExampleNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\n                <span class="token keyword">let</span> <span class="token literal-property property">output</span><span class="token operator">:</span> TreeViewExampleNode<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> idx <span class="token operator">&lt;</span> <span class="token number">50</span><span class="token punctuation">;</span> idx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    output<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Document </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>idx<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n\n                <span class="token function">resolve</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">getPictures</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>TreeViewExampleNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token operator">&lt;</span>TreeViewExampleNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\n                <span class="token keyword">let</span> <span class="token literal-property property">output</span><span class="token operator">:</span> TreeViewExampleNode<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> idx <span class="token operator">&lt;</span> <span class="token number">50</span><span class="token punctuation">;</span> idx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    output<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">IMG_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>chance<span class="token punctuation">.</span><span class="token function">pad</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n\n                <span class="token function">resolve</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">TreeViewExampleNode</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">;</span>\n    children<span class="token operator">?</span><span class="token operator">:</span> TreeViewExampleNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'}},37686:T=>{T.exports={snippet:'<span class="token selector">.tree-view-example-container</span> <span class="token punctuation">{</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 250px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.tree-view-node</span> <span class="token punctuation">{</span>\n    <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.tree-view-node.ux-focus-indicator-active > .node-content-wrapper</span> <span class="token punctuation">{</span>\n    <span class="token property">outline</span><span class="token punctuation">:</span> 2px dotted<span class="token punctuation">;</span>\n    <span class="token property">outline</span><span class="token punctuation">:</span> auto -webkit-focus-ring-color<span class="token punctuation">;</span>\n    <span class="token property">outline-color</span><span class="token punctuation">:</span> #00a7a2<span class="token punctuation">;</span>\n    <span class="token property">outline-offset</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.node-content-wrapper</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'}},89566:T=>{T.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tree-view-example-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tree-root</span> <span class="token attr-name">[nodes]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nodes<span class="token punctuation">"</span></span> <span class="token attr-name">(focus)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>focused = $event.node<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tree<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ng-template</span> <span class="token attr-name">#treeNodeFullTemplate</span> <span class="token attr-name">let-node</span> <span class="token attr-name">let-index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span> <span class="token attr-name">let-templates</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>templates<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tree-view-node<span class="token punctuation">"</span></span>\n                <span class="token attr-name">uxFocusIndicator</span>\n                <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treeitem<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[attr.aria-level]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node.level<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[attr.aria-expanded]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node.isExpanded<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[tabindex]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node === focused || !focused &amp;&amp; node.isRoot &amp;&amp; node.index === 0 ? 0 : -1<span class="token punctuation">"</span></span>\n                <span class="token attr-name">(focus)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>focus(node)<span class="token punctuation">"</span></span>\n                <span class="token attr-name">(blur)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>blur(node)<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[focusIf]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node === focused<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node-content-wrapper<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[class.node-content-wrapper-active]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node.isActive<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[class.node-content-wrapper-focused]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node.isFocused<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tree-node-expander</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>m-r-xs<span class="token punctuation">"</span></span> <span class="token attr-name">[node]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tree-node-expander</span><span class="token punctuation">></span></span>\n\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">[name]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getIcon(node)<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>m-r-xxs<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>{{ node.data.name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tree-node-children</span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>group<span class="token punctuation">"</span></span> <span class="token attr-name">[node]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node<span class="token punctuation">"</span></span> <span class="token attr-name">[templates]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>templates<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tree-node-children</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ng-template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tree-root</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>'}},14853:T=>{T.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> TreeNode <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@circlon/angular-tree-component\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">selector</span><span class="token operator">:</span> <span class="token string">\'app-root\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">templateUrl</span><span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    <span class="token literal-property property">nodes</span><span class="token operator">:</span> TreeViewExampleNode<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Documents\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Profiles\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n                <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Alcazar\'</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n                <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Citadel\'</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n                <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Donjon\'</span>\n            <span class="token punctuation">}</span><span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">11</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Word files\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n                <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">111</span><span class="token punctuation">,</span>\n                <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Accounts\'</span><span class="token punctuation">,</span>\n                <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n                    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Castle\'</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n                    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Estate\'</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n                    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Manor\'</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n                    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Mansion\'</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n                    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Villa\'</span>\n                <span class="token punctuation">}</span><span class="token punctuation">]</span>\n            <span class="token punctuation">}</span><span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Emails\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">21</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Inbox\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n                <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Invoice\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Order Confirmation\'</span> <span class="token punctuation">}</span>\n            <span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">22</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Outbox\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n                <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Customer Support\'</span> <span class="token punctuation">}</span>\n            <span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Pictures\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'IMG_001.jpg\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'IMG_002.jpg\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'IMG_003.jpg\'</span> <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token literal-property property">focused</span><span class="token operator">:</span> TreeNode<span class="token punctuation">;</span>\n\n    <span class="token comment">/**\n     * If tree view is tabbed to, focus the node\n     */</span>\n    <span class="token function">focus</span><span class="token punctuation">(</span>node<span class="token operator">:</span> TreeNode<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        node<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        node<span class="token punctuation">.</span>treeModel<span class="token punctuation">.</span><span class="token function">setFocus</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">/** Ensure the blur state is updated consistently */</span>\n    <span class="token function">blur</span><span class="token punctuation">(</span>node<span class="token operator">:</span> TreeNode<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>focused <span class="token operator">===</span> node<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            node<span class="token punctuation">.</span><span class="token function">blur</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            node<span class="token punctuation">.</span>treeModel<span class="token punctuation">.</span><span class="token function">setFocus</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">getIcon</span><span class="token punctuation">(</span>node<span class="token operator">:</span> TreeNode<span class="token punctuation">)</span><span class="token operator">:</span> string <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>hasChildren <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>node<span class="token punctuation">.</span>isExpanded<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token string">\'folder\'</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>hasChildren <span class="token operator">&amp;&amp;</span> node<span class="token punctuation">.</span>isExpanded<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token string">\'folder-open\'</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>node<span class="token punctuation">.</span>hasChildren<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token string">\'document\'</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">TreeViewExampleNode</span> <span class="token punctuation">{</span>\n    id<span class="token operator">?</span><span class="token operator">:</span> number<span class="token punctuation">;</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">;</span>\n    children<span class="token operator">?</span><span class="token operator">:</span> TreeViewExampleNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n'}},56014:(T,Pn,d)=>{var x={"./app.html":33204,"./app.ts":87504,"docs/app/pages/components/components-sections/tree-view/tree-grid/snippets/app.html":33204,"docs/app/pages/components/components-sections/tree-view/tree-grid/snippets/app.ts":87504};function Z(s){var E=B(s);return d(E)}function B(s){if(!d.o(x,s)){var E=new Error("Cannot find module '"+s+"'");throw E.code="MODULE_NOT_FOUND",E}return x[s]}Z.keys=function(){return Object.keys(x)},Z.resolve=B,T.exports=Z,Z.id=56014},5023:(T,Pn,d)=>{var x={"./app.snippet.css":76613,"./app.snippet.html":46794,"./app.snippet.ts":57748,"./service.snippet.ts":55643,"docs/app/pages/components/components-sections/tree-view/tree-view-custom-node/snippets/app.snippet.css":76613,"docs/app/pages/components/components-sections/tree-view/tree-view-custom-node/snippets/app.snippet.html":46794,"docs/app/pages/components/components-sections/tree-view/tree-view-custom-node/snippets/app.snippet.ts":57748,"docs/app/pages/components/components-sections/tree-view/tree-view-custom-node/snippets/service.snippet.ts":55643};function Z(s){var E=B(s);return d(E)}function B(s){if(!d.o(x,s)){var E=new Error("Cannot find module '"+s+"'");throw E.code="MODULE_NOT_FOUND",E}return x[s]}Z.keys=function(){return Object.keys(x)},Z.resolve=B,T.exports=Z,Z.id=5023},24076:(T,Pn,d)=>{var x={"./app.snippet.css":37686,"./app.snippet.html":89566,"./app.snippet.ts":14853,"docs/app/pages/components/components-sections/tree-view/tree-view/snippets/app.snippet.css":37686,"docs/app/pages/components/components-sections/tree-view/tree-view/snippets/app.snippet.html":89566,"docs/app/pages/components/components-sections/tree-view/tree-view/snippets/app.snippet.ts":14853};function Z(s){var E=B(s);return d(E)}function B(s){if(!d.o(x,s)){var E=new Error("Cannot find module '"+s+"'");throw E.code="MODULE_NOT_FOUND",E}return x[s]}Z.keys=function(){return Object.keys(x)},Z.resolve=B,T.exports=Z,Z.id=24076},68188:(T,Pn,d)=>{"use strict";d.r(Pn),d.d(Pn,{ComponentsTreeViewModule:()=>Gp});var x=d(36895),Z=d(84719),B=d(40239),s=d(55062),E=function(t,e){return(E=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var o in a)a.hasOwnProperty(o)&&(n[o]=a[o])})(t,e)};function Be(t,e){function n(){this.constructor=t}E(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}var G=function(){return G=Object.assign||function(e){for(var n,a=1,o=arguments.length;a<o;a++)for(var p in n=arguments[a])Object.prototype.hasOwnProperty.call(n,p)&&(e[p]=n[p]);return e},G.apply(this,arguments)};function He(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var o,r,a=n.call(t),p=[];try{for(;(void 0===e||e-- >0)&&!(o=a.next()).done;)p.push(o.value)}catch(i){r={error:i}}finally{try{o&&!o.done&&(n=a.return)&&n.call(a)}finally{if(r)throw r.error}}return p}function gt(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(He(arguments[e]));return t}var Kn=[];Object.freeze(Kn);var mt={};Object.freeze(mt);var ta={};function Nn(){return typeof window<"u"?window:typeof global<"u"?global:ta}function U(){return++c.mobxGuid}function k(t){throw vn(!1,t),"X"}function vn(t,e){if(!t)throw new Error("[mobx] "+(e||"An invariant failed, however the error is obfuscated because this is an production build."))}function vt(t){var e=!1;return function(){if(!e)return e=!0,t.apply(this,arguments)}}var Xn=function(){};function yt(t){return null!==t&&"object"==typeof t}function Dn(t){if(null===t||"object"!=typeof t)return!1;var e=Object.getPrototypeOf(t);return e===Object.prototype||null===e}function yn(t,e,n){Object.defineProperty(t,e,{enumerable:!1,writable:!0,configurable:!0,value:n})}function Vn(t,e,n){Object.defineProperty(t,e,{enumerable:!1,writable:!1,configurable:!0,value:n})}function un(t,e){var n="isMobX"+t;return e.prototype[n]=!0,function(a){return yt(a)&&!0===a[n]}}function En(t){return void 0!==Nn().Map&&t instanceof Nn().Map}function jn(t){return t instanceof Set}function sn(t){for(var e=[];;){var n=t.next();if(n.done)break;e.push(n.value)}return e}function $e(){return"function"==typeof Symbol&&Symbol.toPrimitive||"@@toPrimitive"}function Qe(t){return null===t?null:"object"==typeof t?""+t:t}function bt(){return"function"==typeof Symbol&&Symbol.iterator||"@@iterator"}function wt(t,e){Vn(t,bt(),e)}function Ln(t){return t[bt()]=pa,t}function xt(){return"function"==typeof Symbol&&Symbol.toStringTag||"@@toStringTag"}function pa(){return this}var nt=function(){function t(e){void 0===e&&(e="Atom@"+U()),this.name=e,this.isPendingUnobservation=!1,this.isBeingObserved=!1,this.observers=[],this.observersIndexes={},this.diffValue=0,this.lastAccessedBy=0,this.lowestObserverState=y.NOT_TRACKING}return t.prototype.onBecomeUnobserved=function(){},t.prototype.onBecomeObserved=function(){},t.prototype.reportObserved=function(){return us(this)},t.prototype.reportChanged=function(){J(),function Oa(t){if(t.lowestObserverState!==y.STALE){t.lowestObserverState=y.STALE;for(var e=t.observers,n=e.length;n--;){var a=e[n];a.dependenciesState===y.UP_TO_DATE&&(a.isTracing!==L.NONE&&ds(a,t),a.onBecomeStale()),a.dependenciesState=y.STALE}}}(this),$()},t.prototype.toString=function(){return this.name},t}(),_t=un("Atom",nt);function Ye(t,e){return t===e}var On={identity:Ye,structural:function ia(t,e){return qt(t,e)},default:function la(t,e){return function oa(t,e){return"number"==typeof t&&"number"==typeof e&&isNaN(t)&&isNaN(e)}(t,e)||Ye(t,e)},shallow:function ca(t,e){return qt(t,e,1)}},ua={},da={};function ka(t,e){var n=e?ua:da;return n[t]||(n[t]={configurable:!0,enumerable:e,get:function(){return bn(this),this[t]},set:function(a){bn(this),this[t]=a}})}function bn(t){if(!0!==t.__mobxDidRunLazyInitializers){var e=t.__mobxDecorators;if(e)for(var n in yn(t,"__mobxDidRunLazyInitializers",!0),e){var a=e[n];a.propertyCreator(t,a.prop,a.descriptor,a.decoratorTarget,a.decoratorArguments)}}}function ze(t,e){return function(){var a,o=function(r,i,u,f){return!0===f?(e(r,i,u,r,a),null):(Object.prototype.hasOwnProperty.call(r,"__mobxDecorators")||yn(r,"__mobxDecorators",G({},r.__mobxDecorators)),r.__mobxDecorators[i]={prop:i,propertyCreator:e,descriptor:u,decoratorTarget:r,decoratorArguments:a},ka(i,t))};return fa(arguments)?(a=Kn,o.apply(null,arguments)):(a=Array.prototype.slice.call(arguments),o)}}function fa(t){return(2===t.length||3===t.length)&&"string"==typeof t[1]||4===t.length&&!0===t[3]}function Bn(t,e,n){return lt(t)?t:Array.isArray(t)?v.array(t,{name:n}):Dn(t)?v.object(t,void 0,{name:n}):En(t)?v.map(t,{name:n}):jn(t)?v.set(t,{name:n}):t}function Hn(t){return t}function tt(t){var e=ze(!0,function(a,o,p,r,i){!function Os(t,e,n,a){var o=Zt(t);if(tn(o)){var p=en(o,{object:t,name:e,type:"add",newValue:n});if(!p)return;n=p.newValue}n=(o.values[e]=new fn(n,a,o.name+"."+e,!1)).value,Object.defineProperty(t,e,function lo(t){return Ss[t]||(Ss[t]={configurable:!0,enumerable:!0,get:function(){return this.$mobx.read(this,t)},set:function(e){this.$mobx.write(this,t,e)}})}(e)),o.keys&&o.keys.push(e),function ko(t,e,n,a){var o=z(t),p=I(),r=o||p?{type:"add",object:e,name:n,newValue:a}:null;p&&Q(G({},r,{name:t.name,key:n})),o&&W(t,r),p&&Y()}(o,t,e,n)}(a,o,p?p.initializer?p.initializer.call(a):p.value:void 0,t)}),n=(typeof process<"u"&&process,e);return n.enhancer=t,n}var We={deep:!0,name:void 0,defaultDecorator:void 0};function Sn(t){return null==t?We:"string"==typeof t?{name:t,deep:!0}:t}function et(t){return t.defaultDecorator?t.defaultDecorator.enhancer:!1===t.deep?Hn:Bn}Object.freeze(We),Object.freeze({deep:!1,name:void 0,defaultDecorator:void 0});var Tt=tt(Bn),ma=tt(function ha(t,e,n){return null==t||j(t)||P(t)||q(t)||V(t)?t:Array.isArray(t)?v.array(t,{name:n,deep:!1}):Dn(t)?v.object(t,void 0,{name:n,deep:!1}):En(t)?v.map(t,{name:n,deep:!1}):jn(t)?v.set(t,{name:n,deep:!1}):k(!1)}),Xe=tt(Hn),va=tt(function ga(t,e,n){return qt(t,e)?e:t}),ns={box:function(t,e){arguments.length>2&&an("box");var n=Sn(e);return new fn(t,et(n),n.name,!0,n.equals)},shallowBox:function(t,e){return arguments.length>2&&an("shallowBox"),v.box(t,{name:e,deep:!1})},array:function(t,e){arguments.length>2&&an("array");var n=Sn(e);return new pn(t,et(n),n.name)},shallowArray:function(t,e){return arguments.length>2&&an("shallowArray"),v.array(t,{name:e,deep:!1})},map:function(t,e){arguments.length>2&&an("map");var n=Sn(e);return new ut(t,et(n),n.name)},shallowMap:function(t,e){return arguments.length>2&&an("shallowMap"),v.map(t,{name:e,deep:!1})},set:function(t,e){arguments.length>2&&an("set");var n=Sn(e);return new kt(t,et(n),n.name)},object:function(t,e,n){"string"==typeof arguments[1]&&an("object");var a=Sn(n);return bs({},t,e,a)},shallowObject:function(t,e){return"string"==typeof arguments[1]&&an("shallowObject"),v.object(t,{},{name:e,deep:!1})},ref:Xe,shallow:ma,deep:Tt,struct:va},v=function ya(t,e,n){if("string"==typeof arguments[1])return Tt.apply(null,arguments);if(lt(t))return t;var a=Dn(t)?v.object(t,e,n):Array.isArray(t)?v.array(t,e):En(t)?v.map(t,e):jn(t)?v.set(t,e):t;if(a!==t)return a;k(!1)};function an(t){k("Expected one or two arguments to observable."+t+". Did you accidentally try to use observable."+t+" as decorator?")}Object.keys(ns).forEach(function(t){return v[t]=ns[t]});var st=ze(!1,function(t,e,n,a,o){!function co(t,e,n){var a=Zt(t);n.name=a.name+"."+e,n.context=t,a.values[e]=new hn(n),Object.defineProperty(t,e,function uo(t){return Is[t]||(Is[t]={configurable:c.computedConfigurable,enumerable:!1,get:function(){return Ms(this).read(this,t)},set:function(e){Ms(this).write(this,t,e)}})}(e))}(t,e,G({get:n.get,set:n.set},o[0]||{}))}),ba=st({equals:On.structural}),A=function(e,n,a){if("string"==typeof n||null!==e&&"object"==typeof e&&1===arguments.length)return st.apply(null,arguments);var o="object"==typeof n?n:{};return o.get=e,o.set="function"==typeof n?n:o.set,o.name=o.name||e.name||"",new hn(o)};A.struct=ba;var y=(()=>{return(t=y||(y={}))[t.NOT_TRACKING=-1]="NOT_TRACKING",t[t.UP_TO_DATE=0]="UP_TO_DATE",t[t.POSSIBLY_STALE=1]="POSSIBLY_STALE",t[t.STALE=2]="STALE",y;var t})(),L=(()=>{return(t=L||(L={}))[t.NONE=0]="NONE",t[t.LOG=1]="LOG",t[t.BREAK=2]="BREAK",L;var t})(),at=function t(e){this.cause=e};function Jn(t){return t instanceof at}function Ct(t){switch(t.dependenciesState){case y.UP_TO_DATE:return!1;case y.NOT_TRACKING:case y.STALE:return!0;case y.POSSIBLY_STALE:for(var e=In(),n=t.observing,a=n.length,o=0;o<a;o++){var p=n[o];if(Mn(p)){if(c.disableErrorBoundaries)p.get();else try{p.get()}catch{return dn(e),!0}if(t.dependenciesState===y.STALE)return dn(e),!0}}return os(t),dn(e),!1}}function ot(t){var e=t.observers.length>0;c.computationDepth>0&&e&&k(!1),!c.allowStateChanges&&(e||"strict"===c.enforceActions)&&k(!1)}function ts(t,e,n){var a=ss(!0);os(t),t.newObserving=new Array(t.observing.length+100),t.unboundDepsCount=0,t.runId=++c.runId;var p,o=c.trackingDerivation;if(c.trackingDerivation=t,!0===c.disableErrorBoundaries)p=e.call(n);else try{p=e.call(n)}catch(r){p=new at(r)}return c.trackingDerivation=o,function wa(t){for(var e=t.observing,n=t.observing=t.newObserving,a=y.UP_TO_DATE,o=0,p=t.unboundDepsCount,r=0;r<p;r++)0===(i=n[r]).diffValue&&(i.diffValue=1,o!==r&&(n[o]=i),o++),i.dependenciesState>a&&(a=i.dependenciesState);for(n.length=o,t.newObserving=null,p=e.length;p--;)0===(i=e[p]).diffValue&&cs(i,t),i.diffValue=0;for(;o--;){var i;1===(i=n[o]).diffValue&&(i.diffValue=0,Ea(i,t))}a!==y.UP_TO_DATE&&(t.dependenciesState=a,t.onBecomeStale())}(t),as(a),p}function At(t){var e=t.observing;t.observing=[];for(var n=e.length;n--;)cs(e[n],t);t.dependenciesState=y.NOT_TRACKING}function es(t){var e=In(),n=t();return dn(e),n}function In(){var t=c.trackingDerivation;return c.trackingDerivation=null,t}function dn(t){c.trackingDerivation=t}function ss(t){var e=c.allowStateReads;return c.allowStateReads=t,e}function as(t){c.allowStateReads=t}function os(t){if(t.dependenciesState!==y.UP_TO_DATE){t.dependenciesState=y.UP_TO_DATE;for(var e=t.observing,n=e.length;n--;)e[n].lowestObserverState=y.UP_TO_DATE}}var pt=0,xa=1;function kn(t,e){var n=function(){return ps(t,e,this,arguments)};return n.isMobxAction=!0,n}function ps(t,e,n,a){var o=function _a(t,e,n){var a=I()&&!!t,o=0;if(a){o=Date.now();var p=n&&n.length||0,r=new Array(p);if(p>0)for(var i=0;i<p;i++)r[i]=n[i];Q({type:"action",name:t,object:e,arguments:r})}var u=In();J();var _={prevDerivation:u,prevAllowStateChanges:Nt(!0),prevAllowStateReads:ss(!0),notifySpy:a,startTime:o,actionId:xa++,parentActionId:pt};return pt=_.actionId,_}(t,n,a);try{return e.apply(n,a)}catch(p){throw o.error=p,p}finally{!function Ta(t){pt!==t.actionId&&k("invalid action stack. did you forget to finish an action?"),pt=t.parentActionId,void 0!==t.error&&(c.suppressReactionErrors=!0),Dt(t.prevAllowStateChanges),as(t.prevAllowStateReads),$(),dn(t.prevDerivation),t.notifySpy&&Y({time:Date.now()-t.startTime}),c.suppressReactionErrors=!1}(o)}}function Nt(t){var e=c.allowStateChanges;return c.allowStateChanges=t,e}function Dt(t){c.allowStateChanges=t}var fn=function(t){function e(n,a,o,p,r){void 0===o&&(o="ObservableValue@"+U()),void 0===p&&(p=!0),void 0===r&&(r=On.default);var i=t.call(this,o)||this;return i.enhancer=a,i.name=o,i.equals=r,i.hasUnreportedChange=!1,i.value=a(n,void 0,o),p&&I()&&wn({type:"create",name:i.name,newValue:""+i.value}),i}return Be(e,t),e.prototype.dehanceValue=function(n){return void 0!==this.dehancer?this.dehancer(n):n},e.prototype.set=function(n){var a=this.value;if((n=this.prepareNewValue(n))!==c.UNCHANGED){var o=I();o&&Q({type:"update",name:this.name,newValue:n,oldValue:a}),this.setNewValue(n),o&&Y()}},e.prototype.prepareNewValue=function(n){if(ot(this),tn(this)){var a=en(this,{object:this,type:"update",newValue:n});if(!a)return c.UNCHANGED;n=a.newValue}return n=this.enhancer(n,this.value,this.name),this.equals(this.value,n)?c.UNCHANGED:n},e.prototype.setNewValue=function(n){var a=this.value;this.value=n,this.reportChanged(),z(this)&&W(this,{type:"update",object:this,newValue:n,oldValue:a})},e.prototype.get=function(){return this.reportObserved(),this.dehanceValue(this.value)},e.prototype.intercept=function(n){return zn(this,n)},e.prototype.observe=function(n,a){return a&&n({object:this,type:"update",newValue:this.value,oldValue:void 0}),Wn(this,n)},e.prototype.toJSON=function(){return this.get()},e.prototype.toString=function(){return this.name+"["+this.value+"]"},e.prototype.valueOf=function(){return Qe(this.get())},e}(nt);fn.prototype[$e()]=fn.prototype.valueOf,un("ObservableValue",fn);var hn=function(){function t(e){this.dependenciesState=y.NOT_TRACKING,this.observing=[],this.newObserving=null,this.isBeingObserved=!1,this.isPendingUnobservation=!1,this.observers=[],this.observersIndexes={},this.diffValue=0,this.runId=0,this.lastAccessedBy=0,this.lowestObserverState=y.UP_TO_DATE,this.unboundDepsCount=0,this.__mapid="#"+U(),this.value=new at(null),this.isComputing=!1,this.isRunningSetter=!1,this.isTracing=L.NONE,this.derivation=e.get,this.name=e.name||"ComputedValue@"+U(),e.set&&(this.setter=kn(this.name+"-setter",e.set)),this.equals=e.equals||(e.compareStructural||e.struct?On.structural:On.default),this.scope=e.context,this.requiresReaction=!!e.requiresReaction,this.keepAlive=!!e.keepAlive}return t.prototype.onBecomeStale=function(){!function Ia(t){if(t.lowestObserverState===y.UP_TO_DATE){t.lowestObserverState=y.POSSIBLY_STALE;for(var e=t.observers,n=e.length;n--;){var a=e[n];a.dependenciesState===y.UP_TO_DATE&&(a.dependenciesState=y.POSSIBLY_STALE,a.isTracing!==L.NONE&&ds(a,t),a.onBecomeStale())}}}(this)},t.prototype.onBecomeUnobserved=function(){},t.prototype.onBecomeObserved=function(){},t.prototype.get=function(){this.isComputing&&k("Cycle detected in computation "+this.name+": "+this.derivation),0!==c.inBatch||0!==this.observers.length||this.keepAlive?(us(this),Ct(this)&&this.trackAndCompute()&&function Sa(t){if(t.lowestObserverState!==y.STALE){t.lowestObserverState=y.STALE;for(var e=t.observers,n=e.length;n--;){var a=e[n];a.dependenciesState===y.POSSIBLY_STALE?a.dependenciesState=y.STALE:a.dependenciesState===y.UP_TO_DATE&&(t.lowestObserverState=y.UP_TO_DATE)}}}(this)):Ct(this)&&(this.warnAboutUntrackedRead(),J(),this.value=this.computeValue(!1),$());var e=this.value;if(Jn(e))throw e.cause;return e},t.prototype.peek=function(){var e=this.computeValue(!1);if(Jn(e))throw e.cause;return e},t.prototype.set=function(e){if(this.setter){vn(!this.isRunningSetter,"The setter of computed value '"+this.name+"' is trying to update itself. Did you intend to update an _observable_ value, instead of the computed property?"),this.isRunningSetter=!0;try{this.setter.call(this.scope,e)}finally{this.isRunningSetter=!1}}else vn(!1,!1)},t.prototype.trackAndCompute=function(){I()&&wn({object:this.scope,type:"compute",name:this.name});var e=this.value,n=this.dependenciesState===y.NOT_TRACKING,a=this.computeValue(!0),o=n||Jn(e)||Jn(a)||!this.equals(e,a);return o&&(this.value=a),o},t.prototype.computeValue=function(e){var n;if(this.isComputing=!0,c.computationDepth++,e)n=ts(this,this.derivation,this.scope);else if(!0===c.disableErrorBoundaries)n=this.derivation.call(this.scope);else try{n=this.derivation.call(this.scope)}catch(a){n=new at(a)}return c.computationDepth--,this.isComputing=!1,n},t.prototype.suspend=function(){this.keepAlive||(At(this),this.value=void 0)},t.prototype.observe=function(e,n){var a=this,o=!0,p=void 0;return Qn(function(){var r=a.get();if(!o||n){var i=In();e({type:"update",object:a,newValue:r,oldValue:p}),dn(i)}o=!1,p=r})},t.prototype.warnAboutUntrackedRead=function(){},t.prototype.toJSON=function(){return this.get()},t.prototype.toString=function(){return this.name+"["+this.derivation.toString()+"]"},t.prototype.valueOf=function(){return Qe(this.get())},t}();hn.prototype[$e()]=hn.prototype.valueOf;var t,Mn=un("ComputedValue",hn),$n=function t(){this.version=5,this.UNCHANGED={},this.trackingDerivation=null,this.computationDepth=0,this.runId=0,this.mobxGuid=0,this.inBatch=0,this.pendingUnobservations=[],this.pendingReactions=[],this.isRunningReactions=!1,this.allowStateChanges=!0,this.allowStateReads=!0,this.enforceActions=!1,this.spyListeners=[],this.globalReactionErrorHandlers=[],this.computedRequiresReaction=!1,this.reactionRequiresObservable=!1,this.observableRequiresReaction=!1,this.computedConfigurable=!1,this.disableErrorBoundaries=!1,this.suppressReactionErrors=!1},rt=!0,c=((t=Nn()).__mobxInstanceCount>0&&!t.__mobxGlobals&&(rt=!1),t.__mobxGlobals&&t.__mobxGlobals.version!==(new $n).version&&(rt=!1),rt?t.__mobxGlobals?(t.__mobxInstanceCount+=1,t.__mobxGlobals.UNCHANGED||(t.__mobxGlobals.UNCHANGED={}),t.__mobxGlobals):(t.__mobxInstanceCount=1,t.__mobxGlobals=new $n):(setTimeout(function(){k("There are multiple, different versions of MobX active. Make sure MobX is loaded only once or use `configure({ isolateGlobalState: true })`")},1),new $n));function Ea(t,e){var n=t.observers.length;n&&(t.observersIndexes[e.__mapid]=n),t.observers[n]=e,t.lowestObserverState>e.dependenciesState&&(t.lowestObserverState=e.dependenciesState)}function cs(t,e){if(1===t.observers.length)t.observers.length=0,ls(t);else{var n=t.observers,a=t.observersIndexes,o=n.pop();if(o!==e){var p=a[e.__mapid]||0;p?a[o.__mapid]=p:delete a[o.__mapid],n[p]=o}delete a[e.__mapid]}}function ls(t){!1===t.isPendingUnobservation&&(t.isPendingUnobservation=!0,c.pendingUnobservations.push(t))}function J(){c.inBatch++}function $(){if(0==--c.inBatch){hs();for(var t=c.pendingUnobservations,e=0;e<t.length;e++){var n=t[e];n.isPendingUnobservation=!1,0===n.observers.length&&(n.isBeingObserved&&(n.isBeingObserved=!1,n.onBecomeUnobserved()),n instanceof hn&&n.suspend())}c.pendingUnobservations=[]}}function us(t){var e=c.trackingDerivation;return null!==e?(e.runId!==t.lastAccessedBy&&(t.lastAccessedBy=e.runId,e.newObserving[e.unboundDepsCount++]=t,t.isBeingObserved||(t.isBeingObserved=!0,t.onBecomeObserved())),!0):(0===t.observers.length&&c.inBatch>0&&ls(t),!1)}function ds(t,e){if(console.log("[mobx.trace] '"+t.name+"' is invalidated due to a change in: '"+e.name+"'"),t.isTracing===L.BREAK){var n=[];ks(function La(t,e){return ws(K(t,e))}(t),n,1),new Function("debugger;\n/*\nTracing '"+t.name+"'\n\nYou are entering this break point because derivation '"+t.name+"' is being traced and '"+e.name+"' is now forcing it to update.\nJust follow the stacktrace you should now see in the devtools to see precisely what piece of your code is causing this update\nThe stackframe you are looking for is at least ~6-8 stack-frames up.\n\n"+(t instanceof hn?t.derivation.toString().replace(/[*]\//g,"/"):"")+"\n\nThe dependencies for this derivation are:\n\n"+n.join("\n")+"\n*/\n    ")()}}function ks(t,e,n){e.length>=1e3?e.push("(and many more)"):(e.push(""+new Array(n).join("\t")+t.name),t.dependencies&&t.dependencies.forEach(function(a){return ks(a,e,n+1)}))}var it=function(){function t(e,n,a,o){void 0===e&&(e="Reaction@"+U()),void 0===o&&(o=!1),this.name=e,this.onInvalidate=n,this.errorHandler=a,this.requiresObservable=o,this.observing=[],this.newObserving=[],this.dependenciesState=y.NOT_TRACKING,this.diffValue=0,this.runId=0,this.unboundDepsCount=0,this.__mapid="#"+U(),this.isDisposed=!1,this._isScheduled=!1,this._isTrackPending=!1,this._isRunning=!1,this.isTracing=L.NONE}return t.prototype.onBecomeStale=function(){this.schedule()},t.prototype.schedule=function(){this._isScheduled||(this._isScheduled=!0,c.pendingReactions.push(this),hs())},t.prototype.isScheduled=function(){return this._isScheduled},t.prototype.runReaction=function(){if(!this.isDisposed){if(J(),this._isScheduled=!1,Ct(this)){this._isTrackPending=!0;try{this.onInvalidate(),this._isTrackPending&&I()&&wn({name:this.name,type:"scheduled-reaction"})}catch(e){this.reportExceptionInDerivation(e)}}$()}},t.prototype.track=function(e){J();var a,n=I();n&&(a=Date.now(),Q({name:this.name,type:"reaction"})),this._isRunning=!0;var o=ts(this,e,void 0);this._isRunning=!1,this._isTrackPending=!1,this.isDisposed&&At(this),Jn(o)&&this.reportExceptionInDerivation(o.cause),n&&Y({time:Date.now()-a}),$()},t.prototype.reportExceptionInDerivation=function(e){var n=this;if(this.errorHandler)this.errorHandler(e,this);else{if(c.disableErrorBoundaries)throw e;var a="[mobx] Encountered an uncaught exception that was thrown by a reaction or observer component, in: '"+this+"'";c.suppressReactionErrors?console.warn("[mobx] (error in reaction '"+this.name+"' suppressed, fix error of causing action below)"):console.error(a,e),I()&&wn({type:"error",name:this.name,message:a,error:""+e}),c.globalReactionErrorHandlers.forEach(function(o){return o(e,n)})}},t.prototype.dispose=function(){this.isDisposed||(this.isDisposed=!0,this._isRunning||(J(),At(this),$()))},t.prototype.getDisposer=function(){var e=this.dispose.bind(this);return e.$mobx=this,e},t.prototype.toString=function(){return"Reaction["+this.name+"]"},t.prototype.trace=function(e){void 0===e&&(e=!1),function Ka(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=!1;"boolean"==typeof t[t.length-1]&&(n=t.pop());var a=Xa(t);if(!a)return k(!1);a.isTracing===L.NONE&&console.log("[mobx.trace] '"+a.name+"' tracing enabled"),a.isTracing=n?L.BREAK:L.LOG}(this,e)},t}();function hs(){c.inBatch>0||c.isRunningReactions||function(t){t()}(Ma)}function Ma(){c.isRunningReactions=!0;for(var t=c.pendingReactions,e=0;t.length>0;){100==++e&&(console.error("Reaction doesn't converge to a stable state after 100 iterations. Probably there is a cycle in the reactive function: "+t[0]),t.splice(0));for(var n=t.splice(0),a=0,o=n.length;a<o;a++)n[a].runReaction()}c.isRunningReactions=!1}var ct=un("Reaction",it);function I(){return!!c.spyListeners.length}function wn(t){if(c.spyListeners.length)for(var e=c.spyListeners,n=0,a=e.length;n<a;n++)e[n](t)}function Q(t){wn(G({},t,{spyReportStart:!0}))}var qa={spyReportEnd:!0};function Y(t){wn(t?G({},t,{spyReportEnd:!0}):qa)}function Ra(){k(!1)}function gs(t){return function(e,n,a){if(a){if(a.value)return{value:kn(t,a.value),enumerable:!1,configurable:!0,writable:!0};var o=a.initializer;return{enumerable:!1,configurable:!0,writable:!0,initializer:function(){return kn(t,o.call(this))}}}return Ga(t).apply(this,arguments)}}function Ga(t){return function(e,n,a){Object.defineProperty(e,n,{configurable:!0,enumerable:!1,get:function(){},set:function(o){yn(this,n,g(t,o))}})}}var g=function(e,n,a,o){return 1===arguments.length&&"function"==typeof e?kn(e.name||"<unnamed action>",e):2===arguments.length&&"function"==typeof n?kn(e,n):1===arguments.length&&"string"==typeof e?gs(e):!0!==o?gs(n).apply(null,arguments):void(e[n]=kn(e.name||n,a.value))};function Ot(t,e,n){yn(t,e,kn(e,n.bind(t)))}function Qn(t,e){void 0===e&&(e=mt);var o,n=e&&e.name||t.name||"Autorun@"+U();if(e.scheduler||e.delay){var p=ms(e),r=!1;o=new it(n,function(){r||(r=!0,p(function(){r=!1,o.isDisposed||o.track(i)}))},e.onError,e.requiresObservable)}else o=new it(n,function(){this.track(i)},e.onError,e.requiresObservable);function i(){t(o)}return o.schedule(),o.getDisposer()}g.bound=function Ua(t,e,n,a){return!0===a?(Ot(t,e,n.value),null):n?{configurable:!0,enumerable:!1,get:function(){return Ot(this,e,n.value||n.initializer.call(this)),this[e]},set:Ra}:{enumerable:!1,configurable:!0,set:function(o){Ot(this,e,o)},get:function(){}}};var Pa=function(t){return t()};function ms(t){return t.scheduler?t.scheduler:t.delay?function(e){return setTimeout(e,t.delay)}:Pa}function Zn(t,e,n){void 0===n&&(n=mt),"boolean"==typeof n&&(n={fireImmediately:n});var f,a=n.name||"Reaction@"+U(),o=g(a,n.onError?function Va(t,e){return function(){try{return e.apply(this,arguments)}catch(n){t.call(this,n)}}}(n.onError,e):e),p=!n.scheduler&&!n.delay,r=ms(n),i=!0,u=!1,h=n.compareStructural?On.structural:n.equals||On.default,_=new it(a,function(){i||p?M():u||(u=!0,r(M))},n.onError,n.requiresObservable);function M(){if(u=!1,!_.isDisposed){var nn=!1;_.track(function(){var N=t(_);nn=i||!h(f,N),f=N}),i&&n.fireImmediately&&o(f,_),!i&&!0===nn&&o(f,_),i&&(i=!1)}}return _.schedule(),_.getDisposer()}function vs(t,e,n){return ys("onBecomeUnobserved",t,e,n)}function ys(t,e,n,a){var o="function"==typeof a?K(e,n):K(e),p="function"==typeof a?a:n,r=o[t];return"function"!=typeof r?k(!1):(o[t]=function(){r.call(this),p.call(this)},function(){o[t]=r})}function bs(t,e,n,a){var p=(a=Sn(a)).defaultDecorator||(!1===a.deep?Xe:Tt);bn(t),Zt(t,a.name,p.enhancer),J();try{for(var o in e){var r=Object.getOwnPropertyDescriptor(e,o),u=(n&&o in n?n[o]:r.get?st:p)(t,o,r,!0);u&&Object.defineProperty(t,o,u)}}finally{$()}return t}function ws(t){var e={name:t.name};return t.observing&&t.observing.length>0&&(e.dependencies=function ea(t){var e=[];return t.forEach(function(n){-1===e.indexOf(n)&&e.push(n)}),e}(t.observing).map(ws)),e}function Cs(t,e){if(null==t)return!1;if(void 0!==e){if(j(t)){var n=t.$mobx;return n.values&&!!n.values[e]}return!1}return j(t)||!!t.$mobx||_t(t)||ct(t)||Mn(t)}function lt(t){return 1!==arguments.length&&k(!1),Cs(t)}function Xa(t){switch(t.length){case 0:return c.trackingDerivation;case 1:return K(t[0]);case 2:return K(t[0],t[1])}}function on(t,e){void 0===e&&(e=void 0),J();try{return t.apply(e)}finally{$()}}function tn(t){return void 0!==t.interceptors&&t.interceptors.length>0}function zn(t,e){var n=t.interceptors||(t.interceptors=[]);return n.push(e),vt(function(){var a=n.indexOf(e);-1!==a&&n.splice(a,1)})}function en(t,e){var n=In();try{var a=t.interceptors;if(a)for(var o=0,p=a.length;o<p&&(vn(!(e=a[o](e))||e.type,"Intercept handlers should return nothing or a change object"),e);o++);return e}finally{dn(n)}}function z(t){return void 0!==t.changeListeners&&t.changeListeners.length>0}function Wn(t,e){var n=t.changeListeners||(t.changeListeners=[]);return n.push(e),vt(function(){var a=n.indexOf(e);-1!==a&&n.splice(a,1)})}function W(t,e){var n=In(),a=t.changeListeners;if(a){for(var o=0,p=(a=a.slice()).length;o<p;o++)a[o](e);dn(n)}}var eo=function(){var t=!1,e={};return Object.defineProperty(e,"0",{set:function(){t=!0}}),Object.create(e)[0]=1,!1===t}(),St=0,It=function t(){};(function so(t,e){typeof Object.setPrototypeOf<"u"?Object.setPrototypeOf(t.prototype,e):typeof t.prototype.__proto__<"u"?t.prototype.__proto__=e:t.prototype=e})(It,Array.prototype),Object.isFrozen(Array)&&["constructor","push","shift","concat","pop","unshift","replace","find","findIndex","splice","reverse","sort"].forEach(function(t){Object.defineProperty(It.prototype,t,{configurable:!0,writable:!0,value:Array.prototype[t]})});var Ns=function(){function t(e,n,a,o){this.array=a,this.owned=o,this.values=[],this.lastKnownLength=0,this.atom=new nt(e||"ObservableArray@"+U()),this.enhancer=function(p,r){return n(p,r,e+"[..]")}}return t.prototype.dehanceValue=function(e){return void 0!==this.dehancer?this.dehancer(e):e},t.prototype.dehanceValues=function(e){return void 0!==this.dehancer&&e.length>0?e.map(this.dehancer):e},t.prototype.intercept=function(e){return zn(this,e)},t.prototype.observe=function(e,n){return void 0===n&&(n=!1),n&&e({object:this.array,type:"splice",index:0,added:this.values.slice(),addedCount:this.values.length,removed:[],removedCount:0}),Wn(this,e)},t.prototype.getArrayLength=function(){return this.atom.reportObserved(),this.values.length},t.prototype.setArrayLength=function(e){if("number"!=typeof e||e<0)throw new Error("[mobx.array] Out of range: "+e);var n=this.values.length;if(e!==n)if(e>n){for(var a=new Array(e-n),o=0;o<e-n;o++)a[o]=void 0;this.spliceWithArray(n,0,a)}else this.spliceWithArray(e,n-e)},t.prototype.updateArrayLength=function(e,n){if(e!==this.lastKnownLength)throw new Error("[mobx] Modification exception: the internal structure of an observable array was changed. Did you use peek() to change it?");this.lastKnownLength+=n,n>0&&e+n+1>St&&Mt(e+n+1)},t.prototype.spliceWithArray=function(e,n,a){var o=this;ot(this.atom);var p=this.values.length;if(void 0===e?e=0:e>p?e=p:e<0&&(e=Math.max(0,p+e)),n=1===arguments.length?p-e:null==n?0:Math.max(0,Math.min(n,p-e)),void 0===a&&(a=Kn),tn(this)){var r=en(this,{object:this.array,type:"splice",index:e,removedCount:n,added:a});if(!r)return Kn;n=r.removedCount,a=r.added}var i=(a=0===a.length?a:a.map(function(f){return o.enhancer(f,void 0)})).length-n;this.updateArrayLength(p,i);var u=this.spliceItemsIntoValues(e,n,a);return(0!==n||0!==a.length)&&this.notifyArraySplice(e,a,u),this.dehanceValues(u)},t.prototype.spliceItemsIntoValues=function(e,n,a){var o;if(a.length<1e4)return(o=this.values).splice.apply(o,gt([e,n],a));var p=this.values.slice(e,e+n);return this.values=this.values.slice(0,e).concat(a,this.values.slice(e+n)),p},t.prototype.notifyArrayChildUpdate=function(e,n,a){var o=!this.owned&&I(),p=z(this),r=p||o?{object:this.array,type:"update",index:e,newValue:n,oldValue:a}:null;o&&Q(G({},r,{name:this.atom.name})),this.atom.reportChanged(),p&&W(this,r),o&&Y()},t.prototype.notifyArraySplice=function(e,n,a){var o=!this.owned&&I(),p=z(this),r=p||o?{object:this.array,type:"splice",index:e,removed:a,added:n,removedCount:a.length,addedCount:n.length}:null;o&&Q(G({},r,{name:this.atom.name})),this.atom.reportChanged(),p&&W(this,r),o&&Y()},t}(),pn=function(t){function e(n,a,o,p){void 0===o&&(o="ObservableArray@"+U()),void 0===p&&(p=!1);var r=t.call(this)||this,i=new Ns(o,a,r,p);if(Vn(r,"$mobx",i),n&&n.length){var u=Nt(!0);r.spliceWithArray(0,0,n),Dt(u)}return eo&&Object.defineProperty(i.array,"0",ao),r}return Be(e,t),e.prototype.intercept=function(n){return this.$mobx.intercept(n)},e.prototype.observe=function(n,a){return void 0===a&&(a=!1),this.$mobx.observe(n,a)},e.prototype.clear=function(){return this.splice(0)},e.prototype.concat=function(){for(var n=[],a=0;a<arguments.length;a++)n[a]=arguments[a];return this.$mobx.atom.reportObserved(),Array.prototype.concat.apply(this.peek(),n.map(function(o){return P(o)?o.peek():o}))},e.prototype.replace=function(n){return this.$mobx.spliceWithArray(0,this.$mobx.values.length,n)},e.prototype.toJS=function(){return this.slice()},e.prototype.toJSON=function(){return this.toJS()},e.prototype.peek=function(){return this.$mobx.atom.reportObserved(),this.$mobx.dehanceValues(this.$mobx.values)},e.prototype.find=function(n,a,o){void 0===o&&(o=0);var p=this.findIndex.apply(this,arguments);return-1===p?void 0:this.get(p)},e.prototype.findIndex=function(n,a,o){void 0===o&&(o=0);for(var p=this.peek(),r=p.length,i=o;i<r;i++)if(n.call(a,p[i],i,this))return i;return-1},e.prototype.splice=function(n,a){for(var o=[],p=2;p<arguments.length;p++)o[p-2]=arguments[p];switch(arguments.length){case 0:return[];case 1:return this.$mobx.spliceWithArray(n);case 2:return this.$mobx.spliceWithArray(n,a)}return this.$mobx.spliceWithArray(n,a,o)},e.prototype.spliceWithArray=function(n,a,o){return this.$mobx.spliceWithArray(n,a,o)},e.prototype.push=function(){for(var n=[],a=0;a<arguments.length;a++)n[a]=arguments[a];var o=this.$mobx;return o.spliceWithArray(o.values.length,0,n),o.values.length},e.prototype.pop=function(){return this.splice(Math.max(this.$mobx.values.length-1,0),1)[0]},e.prototype.shift=function(){return this.splice(0,1)[0]},e.prototype.unshift=function(){for(var n=[],a=0;a<arguments.length;a++)n[a]=arguments[a];var o=this.$mobx;return o.spliceWithArray(0,0,n),o.values.length},e.prototype.reverse=function(){var n=this.slice();return n.reverse.apply(n,arguments)},e.prototype.sort=function(n){var a=this.slice();return a.sort.apply(a,arguments)},e.prototype.remove=function(n){var a=this.$mobx.dehanceValues(this.$mobx.values).indexOf(n);return a>-1&&(this.splice(a,1),!0)},e.prototype.move=function(n,a){function o(i){if(i<0)throw new Error("[mobx.array] Index out of bounds: "+i+" is negative");var u=this.$mobx.values.length;if(i>=u)throw new Error("[mobx.array] Index out of bounds: "+i+" is not smaller than "+u)}if(o.call(this,n),o.call(this,a),n!==a){var r,p=this.$mobx.values;r=n<a?gt(p.slice(0,n),p.slice(n+1,a+1),[p[n]],p.slice(a+1)):gt(p.slice(0,a),[p[n]],p.slice(a,n),p.slice(n+1)),this.replace(r)}},e.prototype.get=function(n){var a=this.$mobx;if(a){if(n<a.values.length)return a.atom.reportObserved(),a.dehanceValue(a.values[n]);console.warn("[mobx.array] Attempt to read an array index ("+n+") that is out of bounds ("+a.values.length+"). Please check length first. Out of bound indices will not be tracked by MobX")}},e.prototype.set=function(n,a){var o=this.$mobx,p=o.values;if(n<p.length){ot(o.atom);var r=p[n];if(tn(o)){var i=en(o,{type:"update",object:this,index:n,newValue:a});if(!i)return;a=i.newValue}(a=o.enhancer(a,r))!==r&&(p[n]=a,o.notifyArrayChildUpdate(n,a,r))}else{if(n!==p.length)throw new Error("[mobx.array] Index out of bounds, "+n+" is larger than "+p.length);o.spliceWithArray(n,0,[a])}},e}(It);wt(pn.prototype,function(){this.$mobx.atom.reportObserved();var t=this,e=0;return Ln({next:function(){return e<t.length?{value:t[e++],done:!1}:{done:!0,value:void 0}}})}),Object.defineProperty(pn.prototype,"length",{enumerable:!1,configurable:!0,get:function(){return this.$mobx.getArrayLength()},set:function(t){this.$mobx.setArrayLength(t)}}),yn(pn.prototype,xt(),"Array"),["every","filter","forEach","indexOf","join","lastIndexOf","map","reduce","reduceRight","slice","some","toString","toLocaleString"].forEach(function(t){var e=Array.prototype[t];vn("function"==typeof e,"Base function not defined on Array prototype: '"+t+"'"),yn(pn.prototype,t,function(){return e.apply(this.peek(),arguments)})}),function aa(t,e){for(var n=0;n<e.length;n++)yn(t,e[n],t[e[n]])}(pn.prototype,["constructor","intercept","observe","clear","concat","get","replace","toJS","toJSON","peek","find","findIndex","splice","spliceWithArray","push","pop","set","shift","unshift","reverse","sort","remove","move","toString","toLocaleString"]);var ao=Ds(0);function Ds(t){return{enumerable:!1,configurable:!1,get:function(){return this.get(t)},set:function(e){this.set(t,e)}}}function oo(t){Object.defineProperty(pn.prototype,""+t,Ds(t))}function Mt(t){for(var e=St;e<t;e++)oo(e);St=t}Mt(1e3);var po=un("ObservableArrayAdministration",Ns);function P(t){return yt(t)&&po(t.$mobx)}var ro={},ut=function(){function t(e,n,a){if(void 0===n&&(n=Bn),void 0===a&&(a="ObservableMap@"+U()),this.enhancer=n,this.name=a,this.$mobx=ro,this._keys=new pn(void 0,Hn,this.name+".keys()",!0),"function"!=typeof Map)throw new Error("mobx.map requires Map polyfill for the current browser. Check babel-polyfill or core-js/es6/map.js");this._data=new Map,this._hasMap=new Map,this.merge(e)}return t.prototype._has=function(e){return this._data.has(e)},t.prototype.has=function(e){var n=this;if(!c.trackingDerivation)return this._has(e);var a=this._hasMap.get(e);if(!a){var o=a=new fn(this._has(e),Hn,this.name+"."+dt(e)+"?",!1);this._hasMap.set(e,o),vs(o,function(){return n._hasMap.delete(e)})}return a.get()},t.prototype.set=function(e,n){var a=this._has(e);if(tn(this)){var o=en(this,{type:a?"update":"add",object:this,newValue:n,name:e});if(!o)return this;n=o.newValue}return a?this._updateValue(e,n):this._addValue(e,n),this},t.prototype.delete=function(e){var n=this;if(tn(this)&&!(a=en(this,{type:"delete",object:this,name:e})))return!1;if(this._has(e)){var o=I(),p=z(this),a=p||o?{type:"delete",object:this,oldValue:this._data.get(e).value,name:e}:null;return o&&Q(G({},a,{name:this.name,key:e})),on(function(){n._keys.remove(e),n._updateHasMapEntry(e,!1),n._data.get(e).setNewValue(void 0),n._data.delete(e)}),p&&W(this,a),o&&Y(),!0}return!1},t.prototype._updateHasMapEntry=function(e,n){var a=this._hasMap.get(e);a&&a.setNewValue(n)},t.prototype._updateValue=function(e,n){var a=this._data.get(e);if((n=a.prepareNewValue(n))!==c.UNCHANGED){var o=I(),p=z(this),r=p||o?{type:"update",object:this,oldValue:a.value,name:e,newValue:n}:null;o&&Q(G({},r,{name:this.name,key:e})),a.setNewValue(n),p&&W(this,r),o&&Y()}},t.prototype._addValue=function(e,n){var a=this;on(function(){var i=new fn(n,a.enhancer,a.name+"."+dt(e),!1);a._data.set(e,i),n=i.value,a._updateHasMapEntry(e,!0),a._keys.push(e)});var o=I(),p=z(this),r=p||o?{type:"add",object:this,name:e,newValue:n}:null;o&&Q(G({},r,{name:this.name,key:e})),p&&W(this,r),o&&Y()},t.prototype.get=function(e){return this.has(e)?this.dehanceValue(this._data.get(e).get()):this.dehanceValue(void 0)},t.prototype.dehanceValue=function(e){return void 0!==this.dehancer?this.dehancer(e):e},t.prototype.keys=function(){return this._keys[bt()]()},t.prototype.values=function(){var e=this,n=0;return Ln({next:function(){return n<e._keys.length?{value:e.get(e._keys[n++]),done:!1}:{value:void 0,done:!0}}})},t.prototype.entries=function(){var e=this,n=0;return Ln({next:function(){if(n<e._keys.length){var a=e._keys[n++];return{value:[a,e.get(a)],done:!1}}return{done:!0}}})},t.prototype.forEach=function(e,n){var a=this;this._keys.forEach(function(o){return e.call(n,a.get(o),o,a)})},t.prototype.merge=function(e){var n=this;return q(e)&&(e=e.toJS()),on(function(){Dn(e)?Object.keys(e).forEach(function(a){return n.set(a,e[a])}):Array.isArray(e)?e.forEach(function(a){var o=He(a,2);return n.set(o[0],o[1])}):En(e)?e.constructor!==Map?k("Cannot initialize from classes that inherit from Map: "+e.constructor.name):e.forEach(function(a,o){return n.set(o,a)}):null!=e&&k("Cannot initialize map from "+e)}),this},t.prototype.clear=function(){var e=this;on(function(){es(function(){e._keys.slice().forEach(function(n){return e.delete(n)})})})},t.prototype.replace=function(e){var n=this;return on(function(){for(var a=function sa(t){return En(t)||q(t)?t:Array.isArray(t)?new Map(t):Dn(t)?new Map(Object.entries(t)):k("Cannot convert to map from '"+t+"'")}(e),o=n._keys,p=Array.from(a.keys()),r=!1,i=0;i<o.length;i++){var u=o[i];o.length===p.length&&u!==p[i]&&(r=!0),a.has(u)||(r=!0,n.delete(u))}a.forEach(function(f,h){n._data.has(h)||(r=!0),n.set(h,f)}),r&&n._keys.replace(p)}),this},Object.defineProperty(t.prototype,"size",{get:function(){return this._keys.length},enumerable:!0,configurable:!0}),t.prototype.toPOJO=function(){var e=this,n={};return this._keys.forEach(function(a){return n["symbol"==typeof a?a:dt(a)]=e.get(a)}),n},t.prototype.toJS=function(){var e=this,n=new Map;return this._keys.forEach(function(a){return n.set(a,e.get(a))}),n},t.prototype.toJSON=function(){return this.toPOJO()},t.prototype.toString=function(){var e=this;return this.name+"[{ "+this._keys.map(function(n){return dt(n)+": "+e.get(n)}).join(", ")+" }]"},t.prototype.observe=function(e,n){return Wn(this,e)},t.prototype.intercept=function(e){return zn(this,e)},t}();function dt(t){return t&&t.toString?t.toString():new String(t).toString()}wt(ut.prototype,function(){return this.entries()}),Vn(ut.prototype,xt(),"Map");var q=un("ObservableMap",ut),io={},kt=function(){function t(e,n,a){if(void 0===n&&(n=Bn),void 0===a&&(a="ObservableSet@"+U()),this.name=a,this.$mobx=io,this._data=new Set,this._atom=function ra(t,e,n){void 0===e&&(e=Xn),void 0===n&&(n=Xn);var a=new nt(t);return function ja(t,e,n){ys("onBecomeObserved",t,e,n)}(a,e),vs(a,n),a}(this.name),"function"!=typeof Set)throw new Error("mobx.set requires Set polyfill for the current browser. Check babel-polyfill or core-js/es6/set.js");this.enhancer=function(o,p){return n(o,p,a)},e&&this.replace(e)}return t.prototype.dehanceValue=function(e){return void 0!==this.dehancer?this.dehancer(e):e},t.prototype.clear=function(){var e=this;on(function(){es(function(){e._data.forEach(function(n){e.delete(n)})})})},t.prototype.forEach=function(e,n){var a=this;this._data.forEach(function(o){e.call(n,o,o,a)})},Object.defineProperty(t.prototype,"size",{get:function(){return this._atom.reportObserved(),this._data.size},enumerable:!0,configurable:!0}),t.prototype.add=function(e){var n=this;if(ot(this._atom),tn(this)&&!(a=en(this,{type:"add",object:this,newValue:e})))return this;if(!this.has(e)){on(function(){n._data.add(n.enhancer(e,void 0)),n._atom.reportChanged()});var o=I(),p=z(this),a=p||o?{type:"add",object:this,newValue:e}:null;p&&W(this,a)}return this},t.prototype.delete=function(e){var n=this;if(tn(this)&&!(a=en(this,{type:"delete",object:this,oldValue:e})))return!1;if(this.has(e)){var o=I(),p=z(this),a=p||o?{type:"delete",object:this,oldValue:e}:null;return on(function(){n._atom.reportChanged(),n._data.delete(e)}),p&&W(this,a),!0}return!1},t.prototype.has=function(e){return this._atom.reportObserved(),this._data.has(this.dehanceValue(e))},t.prototype.entries=function(){var e=0,n=sn(this.keys()),a=sn(this.values());return Ln({next:function(){var o=e;return e+=1,o<a.length?{value:[n[o],a[o]],done:!1}:{done:!0}}})},t.prototype.keys=function(){return this.values()},t.prototype.values=function(){this._atom.reportObserved();var a,e=this,n=0;return void 0!==this._data.values?a=sn(this._data.values()):(a=[],this._data.forEach(function(o){return a.push(o)})),Ln({next:function(){return n<a.length?{value:e.dehanceValue(a[n++]),done:!1}:{done:!0}}})},t.prototype.replace=function(e){var n=this;return V(e)&&(e=e.toJS()),on(function(){Array.isArray(e)||jn(e)?(n.clear(),e.forEach(function(a){return n.add(a)})):null!=e&&k("Cannot initialize set from "+e)}),this},t.prototype.observe=function(e,n){return Wn(this,e)},t.prototype.intercept=function(e){return zn(this,e)},t.prototype.toJS=function(){return new Set(this)},t.prototype.toString=function(){return this.name+"[ "+sn(this.keys()).join(", ")+" ]"},t}();wt(kt.prototype,function(){return this.values()}),Vn(kt.prototype,xt(),"Set");var V=un("ObservableSet",kt),Es=function(){function t(e,n,a){this.target=e,this.name=n,this.defaultEnhancer=a,this.values={}}return t.prototype.read=function(e,n){if(this.target===e||(this.illegalAccess(e,n),this.values[n]))return this.values[n].get()},t.prototype.write=function(e,n,a){var o=this.target;o!==e&&this.illegalAccess(e,n);var p=this.values[n];if(p instanceof hn)p.set(a);else{if(tn(this)){if(!(r=en(this,{type:"update",object:o,name:n,newValue:a})))return;a=r.newValue}if((a=p.prepareNewValue(a))!==c.UNCHANGED){var i=z(this),u=I(),r=i||u?{type:"update",object:o,oldValue:p.value,name:n,newValue:a}:null;u&&Q(G({},r,{name:this.name,key:n})),p.setNewValue(a),i&&W(this,r),u&&Y()}}},t.prototype.remove=function(e){if(this.values[e]){var n=this.target;if(tn(this)&&!(a=en(this,{object:n,name:e,type:"remove"})))return;try{J();var o=z(this),p=I(),r=this.values[e].get();this.keys&&this.keys.remove(e),delete this.values[e],delete this.target[e];var a=o||p?{type:"remove",object:n,oldValue:r,name:e}:null;p&&Q(G({},a,{name:this.name,key:e})),o&&W(this,a),p&&Y()}finally{$()}}},t.prototype.illegalAccess=function(e,n){console.warn("Property '"+n+"' of '"+e+"' was accessed through the prototype chain. Use 'decorate' instead to declare the prop or access it statically through it's owner")},t.prototype.observe=function(e,n){return Wn(this,e)},t.prototype.intercept=function(e){return zn(this,e)},t.prototype.getKeys=function(){var e=this;return void 0===this.keys&&(this.keys=new pn(Object.keys(this.values).filter(function(n){return e.values[n]instanceof fn}),Hn,"keys("+this.name+")",!0)),this.keys.slice()},t}();function Zt(t,e,n){void 0===e&&(e=""),void 0===n&&(n=Bn);var a=t.$mobx;return a||(Dn(t)||(e=(t.constructor.name||"ObservableObject")+"@"+U()),e||(e="ObservableObject@"+U()),Vn(t,"$mobx",a=new Es(t,e,n)),a)}var Ss=Object.create(null),Is=Object.create(null);function Ms(t){return t.$mobx||(bn(t),t.$mobx)}var fo=un("ObservableObjectAdministration",Es);function j(t){return!!yt(t)&&(bn(t),fo(t.$mobx))}function K(t,e){if("object"==typeof t&&null!==t){if(P(t))return void 0!==e&&k(!1),t.$mobx.atom;if(V(t))return t.$mobx;if(q(t)){var n=t;return void 0===e?K(n._keys):((a=n._data.get(e)||n._hasMap.get(e))||k(!1),a)}var a;if(bn(t),j(t))return e?((a=t.$mobx.values[e])||k(!1),a):k(!1);if(_t(t)||Mn(t)||ct(t))return t}else if("function"==typeof t&&ct(t.$mobx))return t.$mobx;return k(!1)}function rn(t,e){return t||k("Expecting some object"),void 0!==e?rn(K(t,e)):_t(t)||Mn(t)||ct(t)||q(t)||V(t)?t:(bn(t),t.$mobx?t.$mobx:void k(!1))}var Zs=Object.prototype.toString;function qt(t,e,n){return void 0===n&&(n=-1),Ft(t,e,n)}function Ft(t,e,n,a,o){if(t===e)return 0!==t||1/t==1/e;if(null==t||null==e)return!1;if(t!=t)return e!=e;var p=typeof t;if("function"!==p&&"object"!==p&&"object"!=typeof e)return!1;t=qs(t),e=qs(e);var r=Zs.call(t);if(r!==Zs.call(e))return!1;switch(r){case"[object RegExp]":case"[object String]":return""+t==""+e;case"[object Number]":return+t!=+t?+e!=+e:0==+t?1/+t==1/e:+t==+e;case"[object Date]":case"[object Boolean]":return+t==+e;case"[object Symbol]":return typeof Symbol<"u"&&Symbol.valueOf.call(t)===Symbol.valueOf.call(e)}var i="[object Array]"===r;if(!i){if("object"!=typeof t||"object"!=typeof e)return!1;var u=t.constructor,f=e.constructor;if(u!==f&&!("function"==typeof u&&u instanceof u&&"function"==typeof f&&f instanceof f)&&"constructor"in t&&"constructor"in e)return!1}if(0===n)return!1;n<0&&(n=-1),o=o||[];for(var h=(a=a||[]).length;h--;)if(a[h]===t)return o[h]===e;if(a.push(t),o.push(e),i){if((h=t.length)!==e.length)return!1;for(;h--;)if(!Ft(t[h],e[h],n-1,a,o))return!1}else{var _=Object.keys(t),M=void 0;if(h=_.length,Object.keys(e).length!==h)return!1;for(;h--;)if(!go(e,M=_[h])||!Ft(t[M],e[M],n-1,a,o))return!1}return a.pop(),o.pop(),!0}function qs(t){return P(t)?t.peek():En(t)||q(t)||jn(t)||V(t)?sn(t.entries()):t}function go(t,e){return Object.prototype.hasOwnProperty.call(t,e)}function vo(t,e){1&t&&(s.TgZ(0,"span"),s._uU(1,"loading..."),s.qZA())}"object"==typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__&&__MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobx({spy:function Fa(t){return c.spyListeners.push(t),vt(function(){c.spyListeners=c.spyListeners.filter(function(e){return e!==t})})},extras:{getDebugName:function ho(t,e){return(void 0!==e?K(t,e):j(t)||q(t)||V(t)?rn(t):K(t)).name}},$mobx:"$mobx"});const yo=function(t){return{$implicit:t}};function bo(t,e){if(1&t&&(s.ynx(0),s.TgZ(1,"div"),s.Hsn(2),s.qZA(),s.BQk()),2&t){const n=s.oxw();s.xp6(1),s.Udp("height",n.getTotalHeight())}}const Fn=function(){return{dontDetach:!0}},wo=["*"],xo=["loadingTemplate"],_o=["treeNodeTemplate"],To=["treeNodeWrapperTemplate"],Co=["treeNodeFullTemplate"],Ao=["viewport"],No=function(t,e,n,a){return{loadingTemplate:t,treeNodeTemplate:e,treeNodeWrapperTemplate:n,treeNodeFullTemplate:a}};function Do(t,e){if(1&t&&s._UZ(0,"tree-node-collection",4),2&t){const n=s.oxw();s.Q6J("nodes",n.treeModel.roots)("treeModel",n.treeModel)("templates",s.l5B(3,No,n.loadingTemplate,n.treeNodeTemplate,n.treeNodeWrapperTemplate,n.treeNodeFullTemplate))}}function Eo(t,e){if(1&t&&s._UZ(0,"tree-node-drop-slot",5),2&t){const n=s.oxw();s.Q6J("dropIndex",0)("node",n.treeModel.virtualRoot)}}function Oo(t,e){if(1&t&&s._UZ(0,"tree-node-drop-slot",6),2&t){const n=s.oxw(3);s.Q6J("dropIndex",n.node.index)("node",n.node.parent)}}function So(t,e){if(1&t&&(s.TgZ(0,"div"),s.YNc(1,Oo,1,2,"tree-node-drop-slot",3),s._UZ(2,"tree-node-wrapper",4)(3,"tree-node-children",5)(4,"tree-node-drop-slot",6),s.qZA()),2&t){const n=s.oxw(2);s.Tol(n.node.getClass()),s.ekj("tree-node",!0)("tree-node-expanded",n.node.isExpanded&&n.node.hasChildren)("tree-node-collapsed",n.node.isCollapsed&&n.node.hasChildren)("tree-node-leaf",n.node.isLeaf)("tree-node-active",n.node.isActive)("tree-node-focused",n.node.isFocused),s.xp6(1),s.Q6J("ngIf",0===n.index),s.xp6(1),s.Q6J("node",n.node)("index",n.index)("templates",n.templates),s.xp6(1),s.Q6J("node",n.node)("templates",n.templates),s.xp6(1),s.Q6J("dropIndex",n.node.index+1)("node",n.node.parent)}}const Rs=function(t,e,n,a){return{$implicit:t,node:e,index:n,templates:a}};function Io(t,e){if(1&t&&(s.ynx(0),s.YNc(1,So,5,22,"div",1),s.GkF(2,2),s.BQk()),2&t){const n=s.oxw();s.xp6(1),s.Q6J("ngIf",!n.templates.treeNodeFullTemplate),s.xp6(1),s.Q6J("ngTemplateOutlet",n.templates.treeNodeFullTemplate)("ngTemplateOutletContext",s.l5B(3,Rs,n.node,n.node,n.index,n.templates))}}function Mo(t,e){if(1&t&&(s.TgZ(0,"span"),s._uU(1),s.qZA()),2&t){const n=s.oxw();s.xp6(1),s.Oqu(n.node.displayField)}}const Zo=function(t,e,n){return{$implicit:t,node:e,index:n}};function qo(t,e){if(1&t){const n=s.EpF();s.TgZ(0,"span",3),s.NdJ("click",function(o){s.CHM(n);const p=s.oxw(2);return s.KtG(p.node.mouseAction("expanderClick",o))}),s._UZ(1,"span",4),s.qZA()}if(2&t){const n=s.oxw(2);s.ekj("toggle-children-wrapper-expanded",n.node.isExpanded)("toggle-children-wrapper-collapsed",n.node.isCollapsed)}}function Fo(t,e){1&t&&s._UZ(0,"span",5)}function Ro(t,e){if(1&t&&(s.ynx(0),s.YNc(1,qo,2,4,"span",1),s.YNc(2,Fo,1,0,"span",2),s.BQk()),2&t){const n=s.oxw();s.xp6(1),s.Q6J("ngIf",n.node.hasChildren),s.xp6(1),s.Q6J("ngIf",!n.node.hasChildren)}}function Go(t,e){if(1&t&&s._UZ(0,"tree-node-collection",4),2&t){const n=s.oxw(3);s.Q6J("nodes",n.node.children)("templates",n.templates)("treeModel",n.node.treeModel)}}function Uo(t,e){if(1&t&&s._UZ(0,"tree-loading-component",5),2&t){const n=s.oxw(3);s.Udp("padding-left",n.node.getNodePadding()),s.Q6J("template",n.templates.loadingTemplate)("node",n.node)}}function Po(t,e){if(1&t&&(s.TgZ(0,"div"),s.YNc(1,Go,1,3,"tree-node-collection",2),s.YNc(2,Uo,1,4,"tree-loading-component",3),s.qZA()),2&t){const n=s.oxw(2);s.ekj("tree-children",!0)("tree-children-no-padding",n.node.options.levelPadding),s.xp6(1),s.Q6J("ngIf",n.node.children),s.xp6(1),s.Q6J("ngIf",!n.node.children)}}function Vo(t,e){if(1&t&&(s.ynx(0),s.YNc(1,Po,3,6,"div",1),s.BQk()),2&t){const n=s.oxw();s.xp6(1),s.Q6J("treeAnimateOpen",n.node.isExpanded)("treeAnimateOpenSpeed",n.node.options.animateSpeed)("treeAnimateOpenAcceleration",n.node.options.animateAcceleration)("treeAnimateOpenEnabled",n.node.options.animateExpand)}}function jo(t,e){if(1&t&&s._UZ(0,"tree-node",2),2&t){const n=e.$implicit,a=e.index,o=s.oxw(2);s.Q6J("node",n)("index",a)("templates",o.templates)}}function Lo(t,e){if(1&t&&(s.ynx(0),s.TgZ(1,"div"),s.YNc(2,jo,1,3,"tree-node",1),s.qZA(),s.BQk()),2&t){const n=s.oxw();s.xp6(1),s.Udp("margin-top",n.marginTop),s.xp6(1),s.Q6J("ngForOf",n.viewportNodes)("ngForTrackBy",n.trackNode)}}function Bo(t,e){if(1&t&&s._UZ(0,"tree-node-checkbox",4),2&t){const n=s.oxw(2);s.Q6J("node",n.node)}}function Ho(t,e){if(1&t){const n=s.EpF();s.TgZ(0,"div",2),s.YNc(1,Bo,1,1,"tree-node-checkbox",3),s._UZ(2,"tree-node-expander",4),s.TgZ(3,"div",5),s.NdJ("click",function(o){s.CHM(n);const p=s.oxw();return s.KtG(p.node.mouseAction("click",o))})("dblclick",function(o){s.CHM(n);const p=s.oxw();return s.KtG(p.node.mouseAction("dblClick",o))})("mouseover",function(o){s.CHM(n);const p=s.oxw();return s.KtG(p.node.mouseAction("mouseOver",o))})("mouseout",function(o){s.CHM(n);const p=s.oxw();return s.KtG(p.node.mouseAction("mouseOut",o))})("contextmenu",function(o){s.CHM(n);const p=s.oxw();return s.KtG(p.node.mouseAction("contextMenu",o))})("treeDrop",function(o){s.CHM(n);const p=s.oxw();return s.KtG(p.node.onDrop(o))})("treeDropDragOver",function(o){s.CHM(n);const p=s.oxw();return s.KtG(p.node.mouseAction("dragOver",o))})("treeDropDragLeave",function(o){s.CHM(n);const p=s.oxw();return s.KtG(p.node.mouseAction("dragLeave",o))})("treeDropDragEnter",function(o){s.CHM(n);const p=s.oxw();return s.KtG(p.node.mouseAction("dragEnter",o))}),s._UZ(4,"tree-node-content",6),s.qZA()()}if(2&t){const n=s.oxw();s.Udp("padding-left",n.node.getNodePadding()),s.xp6(1),s.Q6J("ngIf",n.node.options.useCheckbox),s.xp6(1),s.Q6J("node",n.node),s.xp6(1),s.ekj("node-content-wrapper-active",n.node.isActive)("node-content-wrapper-focused",n.node.isFocused),s.Q6J("treeAllowDrop",n.node.allowDrop)("allowDragoverStyling",n.node.allowDragoverStyling())("treeDrag",n.node)("treeDragEnabled",n.node.allowDrag()),s.xp6(1),s.Q6J("node",n.node)("index",n.index)("template",n.templates.treeNodeTemplate)}}function Jo(t,e){if(1&t){const n=s.EpF();s.ynx(0),s.TgZ(1,"input",1),s.NdJ("click",function(o){s.CHM(n);const p=s.oxw();return s.KtG(p.node.mouseAction("checkboxClick",o))}),s.qZA(),s.BQk()}if(2&t){const n=s.oxw();s.xp6(1),s.Q6J("checked",n.node.isSelected)("indeterminate",n.node.isPartiallySelected)}}let Rn=(()=>{class t{constructor(n,a){this.templateRef=n,this.viewContainer=a,this.templateBindings={}}ngOnInit(){this.view=this.viewContainer.createEmbeddedView(this.templateRef),this.dispose&&this.dispose(),this.shouldDetach()&&this.view.detach(),this.autoDetect(this.view)}shouldDetach(){return this.treeMobxAutorun&&this.treeMobxAutorun.detach}autoDetect(n){this.dispose=Qn(()=>n.detectChanges())}ngOnDestroy(){this.dispose&&this.dispose()}}return t.\u0275fac=function(n){return new(n||t)(s.Y36(s.Rgc),s.Y36(s.s_b))},t.\u0275dir=s.lG2({type:t,selectors:[["","treeMobxAutorun",""]],inputs:{treeMobxAutorun:"treeMobxAutorun"}}),t})();const O={TOGGLE_ACTIVE:(t,e,n)=>e&&e.toggleActivated(),TOGGLE_ACTIVE_MULTI:(t,e,n)=>e&&e.toggleActivated(!0),TOGGLE_SELECTED:(t,e,n)=>e&&e.toggleSelected(),ACTIVATE:(t,e,n)=>e.setIsActive(!0),DEACTIVATE:(t,e,n)=>e.setIsActive(!1),SELECT:(t,e,n)=>e.setIsSelected(!0),DESELECT:(t,e,n)=>e.setIsSelected(!1),FOCUS:(t,e,n)=>e.focus(),TOGGLE_EXPANDED:(t,e,n)=>e.hasChildren&&e.toggleExpanded(),EXPAND:(t,e,n)=>e.expand(),COLLAPSE:(t,e,n)=>e.collapse(),DRILL_DOWN:(t,e,n)=>t.focusDrillDown(),DRILL_UP:(t,e,n)=>t.focusDrillUp(),NEXT_NODE:(t,e,n)=>t.focusNextNode(),PREVIOUS_NODE:(t,e,n)=>t.focusPreviousNode(),MOVE_NODE:(t,e,n,{from:a,to:o})=>{n.ctrlKey?t.copyNode(a,o):t.moveNode(a,o)}},Gn={mouse:{click:O.TOGGLE_ACTIVE,dblClick:null,contextMenu:null,expanderClick:O.TOGGLE_EXPANDED,checkboxClick:O.TOGGLE_SELECTED,drop:O.MOVE_NODE},keys:{39:O.DRILL_DOWN,37:O.DRILL_UP,40:O.NEXT_NODE,38:O.PREVIOUS_NODE,32:O.TOGGLE_ACTIVE,13:O.TOGGLE_ACTIVE}};class Gs{constructor(e={}){var n,a,o,p,r,i,u,f,h,_,M,nn,N,S,ln,An,ne,te,ee,se,ae,oe,pe,re,ie,ce,le,ue,de,ke,fe,he,ge,me,ve,ye,be,we,xe,_e,Te,Ce,Ae,Ne,De,Ee,Oe,Se,Ie,Me,Ze,qe,Fe,Re,Ge,Ue,Pe,Ve,je,Le;this.options=e,this.actionMapping={mouse:{click:null!==(p=null===(o=null===(a=null===(n=this.options)||void 0===n?void 0:n.actionMapping)||void 0===a?void 0:a.mouse)||void 0===o?void 0:o.click)&&void 0!==p?p:Gn.mouse.click,dblClick:null!==(f=null===(u=null===(i=null===(r=this.options)||void 0===r?void 0:r.actionMapping)||void 0===i?void 0:i.mouse)||void 0===u?void 0:u.dblClick)&&void 0!==f?f:Gn.mouse.dblClick,contextMenu:null!==(nn=null===(M=null===(_=null===(h=this.options)||void 0===h?void 0:h.actionMapping)||void 0===_?void 0:_.mouse)||void 0===M?void 0:M.contextMenu)&&void 0!==nn?nn:Gn.mouse.contextMenu,expanderClick:null!==(An=null===(ln=null===(S=null===(N=this.options)||void 0===N?void 0:N.actionMapping)||void 0===S?void 0:S.mouse)||void 0===ln?void 0:ln.expanderClick)&&void 0!==An?An:Gn.mouse.expanderClick,checkboxClick:null!==(se=null===(ee=null===(te=null===(ne=this.options)||void 0===ne?void 0:ne.actionMapping)||void 0===te?void 0:te.mouse)||void 0===ee?void 0:ee.checkboxClick)&&void 0!==se?se:Gn.mouse.checkboxClick,drop:null!==(re=null===(pe=null===(oe=null===(ae=this.options)||void 0===ae?void 0:ae.actionMapping)||void 0===oe?void 0:oe.mouse)||void 0===pe?void 0:pe.drop)&&void 0!==re?re:Gn.mouse.drop,dragStart:null!==(ue=null===(le=null===(ce=null===(ie=this.options)||void 0===ie?void 0:ie.actionMapping)||void 0===ce?void 0:ce.mouse)||void 0===le?void 0:le.dragStart)&&void 0!==ue?ue:void 0,drag:null!==(he=null===(fe=null===(ke=null===(de=this.options)||void 0===de?void 0:de.actionMapping)||void 0===ke?void 0:ke.mouse)||void 0===fe?void 0:fe.drag)&&void 0!==he?he:void 0,dragEnd:null!==(ye=null===(ve=null===(me=null===(ge=this.options)||void 0===ge?void 0:ge.actionMapping)||void 0===me?void 0:me.mouse)||void 0===ve?void 0:ve.dragEnd)&&void 0!==ye?ye:void 0,dragOver:null!==(_e=null===(xe=null===(we=null===(be=this.options)||void 0===be?void 0:be.actionMapping)||void 0===we?void 0:we.mouse)||void 0===xe?void 0:xe.dragOver)&&void 0!==_e?_e:void 0,dragLeave:null!==(Ne=null===(Ae=null===(Ce=null===(Te=this.options)||void 0===Te?void 0:Te.actionMapping)||void 0===Ce?void 0:Ce.mouse)||void 0===Ae?void 0:Ae.dragLeave)&&void 0!==Ne?Ne:void 0,dragEnter:null!==(Se=null===(Oe=null===(Ee=null===(De=this.options)||void 0===De?void 0:De.actionMapping)||void 0===Ee?void 0:Ee.mouse)||void 0===Oe?void 0:Oe.dragEnter)&&void 0!==Se?Se:void 0,mouseOver:null!==(qe=null===(Ze=null===(Me=null===(Ie=this.options)||void 0===Ie?void 0:Ie.actionMapping)||void 0===Me?void 0:Me.mouse)||void 0===Ze?void 0:Ze.mouseOver)&&void 0!==qe?qe:void 0,mouseOut:null!==(Ue=null===(Ge=null===(Re=null===(Fe=this.options)||void 0===Fe?void 0:Fe.actionMapping)||void 0===Re?void 0:Re.mouse)||void 0===Ge?void 0:Ge.mouseOut)&&void 0!==Ue?Ue:void 0},keys:{39:O.DRILL_DOWN,37:O.DRILL_UP,40:O.NEXT_NODE,38:O.PREVIOUS_NODE,32:O.TOGGLE_ACTIVE,13:O.TOGGLE_ACTIVE}},!(null===(Ve=null===(Pe=this.options)||void 0===Pe?void 0:Pe.actionMapping)||void 0===Ve)&&Ve.keys&&(this.actionMapping.keys=Object.assign(Object.assign({},this.actionMapping.keys),this.options.actionMapping.keys)),e.rtl&&(this.actionMapping.keys[39]=(null===(je=e.actionMapping)||void 0===je?void 0:je.keys[39])||O.DRILL_UP,this.actionMapping.keys[37]=(null===(Le=e.actionMapping)||void 0===Le?void 0:Le.keys[37])||O.DRILL_DOWN)}get hasChildrenField(){return this.options.hasChildrenField||"hasChildren"}get childrenField(){return this.options.childrenField||"children"}get displayField(){return this.options.displayField||"name"}get idField(){return this.options.idField||"id"}get isExpandedField(){return this.options.isExpandedField||"isExpanded"}get getChildren(){return this.options.getChildren}get levelPadding(){return this.options.levelPadding||0}get useVirtualScroll(){return this.options.useVirtualScroll}get animateExpand(){return this.options.animateExpand}get animateSpeed(){return this.options.animateSpeed||1}get animateAcceleration(){return this.options.animateAcceleration||1.2}get scrollOnActivate(){return void 0===this.options.scrollOnActivate||this.options.scrollOnActivate}get rtl(){return!!this.options.rtl}get rootId(){return this.options.rootId}get useCheckbox(){return this.options.useCheckbox}get useTriState(){return void 0===this.options.useTriState||this.options.useTriState}get scrollContainer(){return this.options.scrollContainer}get allowDragoverStyling(){return void 0===this.options.allowDragoverStyling||this.options.allowDragoverStyling}getNodeClone(e){if(this.options.getNodeClone)return this.options.getNodeClone(e);const n=Object.assign({},e.data);return n.id&&delete n.id,n}allowDrop(e,n,a){return this.options.allowDrop instanceof Function?this.options.allowDrop(e,n,a):void 0===this.options.allowDrop||this.options.allowDrop}allowDrag(e){return this.options.allowDrag instanceof Function?this.options.allowDrag(e):this.options.allowDrag}nodeClass(e){return this.options.nodeClass?this.options.nodeClass(e):""}nodeHeight(e){if(e.data.virtual)return 0;let n=this.options.nodeHeight||22;return"function"==typeof n&&(n=n(e)),n+(0===e.index?2:1)*this.dropSlotHeight}get dropSlotHeight(){return"number"==typeof this.options.dropSlotHeight?this.options.dropSlotHeight:2}}const C={toggleExpanded:"toggleExpanded",activate:"activate",deactivate:"deactivate",nodeActivate:"nodeActivate",nodeDeactivate:"nodeDeactivate",select:"select",deselect:"deselect",focus:"focus",blur:"blur",initialized:"initialized",updateData:"updateData",moveNode:"moveNode",copyNode:"copyNode",event:"event",loadNodeChildren:"loadNodeChildren",changeFilter:"changeFilter",stateChange:"stateChange"};var R=function(t,e,n,a){var r,o=arguments.length,p=o<3?e:null===a?a=Object.getOwnPropertyDescriptor(e,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)p=Reflect.decorate(t,e,n,a);else for(var i=t.length-1;i>=0;i--)(r=t[i])&&(p=(o<3?r(p):o>3?r(e,n,p):r(e,n))||p);return o>3&&p&&Object.defineProperty(e,n,p),p},w=function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};let Us=(()=>{class t{constructor(n,a,o,p){this.data=n,this.parent=a,this.treeModel=o,this.position=0,this.allowDrop=(r,i)=>this.options.allowDrop(r,{parent:this,index:0},i),this.allowDragoverStyling=()=>this.options.allowDragoverStyling,null==this.id&&(this.id=function $o(){return Math.floor(1e13*Math.random())}()),this.index=p,this.getField("children")&&this._initChildren(),this.autoLoadChildren()}get isHidden(){return this.treeModel.isHidden(this)}get isExpanded(){return this.treeModel.isExpanded(this)}get isActive(){return this.treeModel.isActive(this)}get isFocused(){return this.treeModel.isNodeFocused(this)}get isSelected(){return this.isSelectable()?this.treeModel.isSelected(this):this.children.some(n=>n.isSelected)}get isAllSelected(){return this.isSelectable()?this.treeModel.isSelected(this):this.children.every(n=>n.isAllSelected)}get isPartiallySelected(){return this.isSelected&&!this.isAllSelected}get level(){return this.parent?this.parent.level+1:0}get path(){return this.parent?[...this.parent.path,this.id]:[]}get elementRef(){throw"Element Ref is no longer supported since introducing virtual scroll\n\n      You may use a template to obtain a reference to the element"}get originalNode(){return this._originalNode}get hasChildren(){return!!(this.getField("hasChildren")||this.children&&this.children.length>0)}get isCollapsed(){return!this.isExpanded}get isLeaf(){return!this.hasChildren}get isRoot(){return this.parent.data.virtual}get realParent(){return this.isRoot?null:this.parent}get options(){return this.treeModel.options}fireEvent(n){this.treeModel.fireEvent(n)}get displayField(){return this.getField("display")}get id(){return this.getField("id")}set id(n){this.setField("id",n)}getField(n){return this.data[this.options[`${n}Field`]]}setField(n,a){this.data[this.options[`${n}Field`]]=a}_findAdjacentSibling(n,a=!1){const o=this._getParentsChildren(a),p=o.indexOf(this);return o.length>p+n?o[p+n]:null}findNextSibling(n=!1){return this._findAdjacentSibling(1,n)}findPreviousSibling(n=!1){return this._findAdjacentSibling(-1,n)}getVisibleChildren(){return this.visibleChildren}get visibleChildren(){return(this.children||[]).filter(n=>!n.isHidden)}getFirstChild(n=!1){let a=n?this.visibleChildren:this.children;return null!=a&&a.length?a[0]:null}getLastChild(n=!1){let a=n?this.visibleChildren:this.children;return null!=a&&a.length?a[a.length-1]:null}findNextNode(n=!0,a=!1){return n&&this.isExpanded&&this.getFirstChild(a)||this.findNextSibling(a)||this.parent&&this.parent.findNextNode(!1,a)}findPreviousNode(n=!1){let a=this.findPreviousSibling(n);return a?a._getLastOpenDescendant(n):this.realParent}_getLastOpenDescendant(n=!1){const a=this.getLastChild(n);return this.isCollapsed||!a?this:a._getLastOpenDescendant(n)}_getParentsChildren(n=!1){return this.parent&&(n?this.parent.getVisibleChildren():this.parent.children)||[]}getIndexInParent(n=!1){return this._getParentsChildren(n).indexOf(this)}isDescendantOf(n){return this===n||this.parent&&this.parent.isDescendantOf(n)}getNodePadding(){return this.options.levelPadding*(this.level-1)+"px"}getClass(){return[this.options.nodeClass(this),`tree-node-level-${this.level}`].join(" ")}onDrop(n){this.mouseAction("drop",n.event,{from:n.element,to:{parent:this,index:0,dropOnNode:!0}})}allowDrag(){return this.options.allowDrag(this)}loadNodeChildren(){return this.options.getChildren?Promise.resolve(this.options.getChildren(this)).then(n=>{n&&(this.setField("children",n),this._initChildren(),this.options.useTriState&&this.treeModel.isSelected(this)&&this.setIsSelected(!0),this.children.forEach(a=>{a.getField("isExpanded")&&a.hasChildren&&a.expand()}))}).then(()=>{this.fireEvent({eventName:C.loadNodeChildren,node:this})}):Promise.resolve()}expand(){return this.isExpanded||this.toggleExpanded(),this}collapse(){return this.isExpanded&&this.toggleExpanded(),this}doForAll(n){Promise.resolve(n(this)).then(()=>{this.children&&this.children.forEach(a=>a.doForAll(n))})}expandAll(){this.doForAll(n=>n.expand())}collapseAll(){this.doForAll(n=>n.collapse())}ensureVisible(){return this.realParent&&(this.realParent.expand(),this.realParent.ensureVisible()),this}toggleExpanded(){return this.setIsExpanded(!this.isExpanded),this}setIsExpanded(n){return this.hasChildren&&this.treeModel.setExpandedNode(this,n),this}autoLoadChildren(){this.handler=Zn(()=>this.isExpanded,n=>{!this.children&&this.hasChildren&&n&&this.loadNodeChildren()},{fireImmediately:!0})}dispose(){this.children&&this.children.forEach(n=>n.dispose()),this.handler&&this.handler(),this.parent=null,this.children=null}setIsActive(n,a=!1){return this.treeModel.setActiveNode(this,n,a),n&&this.focus(this.options.scrollOnActivate),this}isSelectable(){return this.isLeaf||!this.children||!this.options.useTriState}setIsSelected(n){return this.isSelectable()?this.treeModel.setSelectedNode(this,n):this.visibleChildren.forEach(a=>a.setIsSelected(n)),this}toggleSelected(){return this.setIsSelected(!this.isSelected),this}toggleActivated(n=!1){return this.setIsActive(!this.isActive,n),this}setActiveAndVisible(n=!1){return this.setIsActive(!0,n).ensureVisible(),setTimeout(this.scrollIntoView.bind(this)),this}scrollIntoView(n=!1){this.treeModel.virtualScroll.scrollIntoView(this,n)}focus(n=!0){let a=this.treeModel.getFocusedNode();return this.treeModel.setFocusedNode(this),n&&this.scrollIntoView(),a&&this.fireEvent({eventName:C.blur,node:a}),this.fireEvent({eventName:C.focus,node:this}),this}blur(){let n=this.treeModel.getFocusedNode();return this.treeModel.setFocusedNode(null),n&&this.fireEvent({eventName:C.blur,node:this}),this}setIsHidden(n){this.treeModel.setIsHidden(this,n)}hide(){this.setIsHidden(!0)}show(){this.setIsHidden(!1)}mouseAction(n,a,o=null){this.treeModel.setFocus(!0);const r=this.options.actionMapping.mouse[n];r&&r(this.treeModel,this,a,o)}getSelfHeight(){return this.options.nodeHeight(this)}_initChildren(){this.children=this.getField("children").map((n,a)=>new t(n,this,this.treeModel,a))}}return R([A,w("design:type",Object),w("design:paramtypes",[])],t.prototype,"isHidden",null),R([A,w("design:type",Object),w("design:paramtypes",[])],t.prototype,"isExpanded",null),R([A,w("design:type",Object),w("design:paramtypes",[])],t.prototype,"isActive",null),R([A,w("design:type",Object),w("design:paramtypes",[])],t.prototype,"isFocused",null),R([A,w("design:type",Object),w("design:paramtypes",[])],t.prototype,"isSelected",null),R([A,w("design:type",Object),w("design:paramtypes",[])],t.prototype,"isAllSelected",null),R([A,w("design:type",Object),w("design:paramtypes",[])],t.prototype,"isPartiallySelected",null),R([v,w("design:type",Array)],t.prototype,"children",void 0),R([v,w("design:type",Number)],t.prototype,"index",void 0),R([v,w("design:type",Object)],t.prototype,"position",void 0),R([v,w("design:type",Number)],t.prototype,"height",void 0),R([A,w("design:type",Number),w("design:paramtypes",[])],t.prototype,"level",null),R([A,w("design:type",Array),w("design:paramtypes",[])],t.prototype,"path",null),R([A,w("design:type",Object),w("design:paramtypes",[])],t.prototype,"visibleChildren",null),R([g,w("design:type",Function),w("design:paramtypes",[Object]),w("design:returntype",void 0)],t.prototype,"setIsSelected",null),R([g,w("design:type",Function),w("design:paramtypes",[]),w("design:returntype",void 0)],t.prototype,"_initChildren",null),t})();var b=function(t,e,n,a){var r,o=arguments.length,p=o<3?e:null===a?a=Object.getOwnPropertyDescriptor(e,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)p=Reflect.decorate(t,e,n,a);else for(var i=t.length-1;i>=0;i--)(r=t[i])&&(p=(o<3?r(p):o>3?r(e,n,p):r(e,n))||p);return o>3&&p&&Object.defineProperty(e,n,p),p},l=function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};let m=(()=>{class t{constructor(){this.options=new Gs,this.eventNames=Object.keys(C),this.expandedNodeIds={},this.selectedLeafNodeIds={},this.activeNodeIds={},this.hiddenNodeIds={},this.focusedNodeId=null,this.firstUpdate=!0,this.subscriptions=[]}fireEvent(n){n.treeModel=this,this.events[n.eventName].emit(n),this.events.event.emit(n)}subscribe(n,a){const o=this.events[n].subscribe(a);this.subscriptions.push(o)}getFocusedNode(){return this.focusedNode}getActiveNode(){return this.activeNodes[0]}getActiveNodes(){return this.activeNodes}getVisibleRoots(){return this.virtualRoot.visibleChildren}getFirstRoot(n=!1){const a=n?this.getVisibleRoots():this.roots;return null!=a&&a.length?a[0]:null}getLastRoot(n=!1){const a=n?this.getVisibleRoots():this.roots;return null!=a&&a.length?a[a.length-1]:null}get isFocused(){return t.focusedTree===this}isNodeFocused(n){return this.focusedNode===n}isEmptyTree(){return this.roots&&0===this.roots.length}get focusedNode(){return this.focusedNodeId?this.getNodeById(this.focusedNodeId):null}get expandedNodes(){return Object.keys(this.expandedNodeIds).filter(a=>this.expandedNodeIds[a]).map(a=>this.getNodeById(a)).filter(Boolean)}get activeNodes(){return Object.keys(this.activeNodeIds).filter(a=>this.activeNodeIds[a]).map(a=>this.getNodeById(a)).filter(Boolean)}get hiddenNodes(){return Object.keys(this.hiddenNodeIds).filter(a=>this.hiddenNodeIds[a]).map(a=>this.getNodeById(a)).filter(Boolean)}get selectedLeafNodes(){return Object.keys(this.selectedLeafNodeIds).filter(a=>this.selectedLeafNodeIds[a]).map(a=>this.getNodeById(a)).filter(Boolean)}getNodeByPath(n,a=null){if(!n)return null;if(a=a||this.virtualRoot,0===n.length)return a;if(!a.children)return null;const o=n.shift(),p=a.children.find(r=>r.id===o);return p?this.getNodeByPath(n,p):null}getNodeById(n){const a=n.toString();return this.getNodeBy(o=>o.id.toString()===a)}getNodeBy(n,a=null){if(!(a=a||this.virtualRoot).children)return null;const o=a.children.find(n);if(o)return o;for(let p of a.children){const r=this.getNodeBy(n,p);if(r)return r}}isExpanded(n){return this.expandedNodeIds[n.id]}isHidden(n){return this.hiddenNodeIds[n.id]}isActive(n){return this.activeNodeIds[n.id]}isSelected(n){return this.selectedLeafNodeIds[n.id]}ngOnDestroy(){this.dispose(),this.unsubscribeAll()}dispose(){this.virtualRoot&&this.virtualRoot.dispose()}unsubscribeAll(){this.subscriptions.forEach(n=>n.unsubscribe()),this.subscriptions=[]}setData({nodes:n,options:a=null,events:o=null}){a&&(this.options=new Gs(a)),o&&(this.events=o),n&&(this.nodes=n),this.update()}update(){let n={id:this.options.rootId,virtual:!0,[this.options.childrenField]:this.nodes};this.dispose(),this.virtualRoot=new Us(n,null,this,0),this.roots=this.virtualRoot.children,this.firstUpdate?this.roots&&(this.firstUpdate=!1,this._calculateExpandedNodes()):this.fireEvent({eventName:C.updateData})}setFocusedNode(n){this.focusedNodeId=n?n.id:null}setFocus(n){t.focusedTree=n?this:null}doForAll(n){this.roots.forEach(a=>a.doForAll(n))}focusNextNode(){let n=this.getFocusedNode(),a=n?n.findNextNode(!0,!0):this.getFirstRoot(!0);a&&a.focus()}focusPreviousNode(){let n=this.getFocusedNode(),a=n?n.findPreviousNode(!0):this.getLastRoot(!0);a&&a.focus()}focusDrillDown(){let n=this.getFocusedNode();if(n&&n.isCollapsed&&n.hasChildren)n.toggleExpanded();else{let a=n?n.getFirstChild(!0):this.getFirstRoot(!0);a&&a.focus()}}focusDrillUp(){let n=this.getFocusedNode();if(n)if(n.isExpanded)n.toggleExpanded();else{let a=n.realParent;a&&a.focus()}}setActiveNode(n,a,o=!1){o?this._setActiveNodeMulti(n,a):this._setActiveNodeSingle(n,a),a?(n.focus(this.options.scrollOnActivate),this.fireEvent({eventName:C.activate,node:n}),this.fireEvent({eventName:C.nodeActivate,node:n})):(this.fireEvent({eventName:C.deactivate,node:n}),this.fireEvent({eventName:C.nodeDeactivate,node:n}))}setSelectedNode(n,a){this.selectedLeafNodeIds=Object.assign({},this.selectedLeafNodeIds,{[n.id]:a}),a?(n.focus(),this.fireEvent({eventName:C.select,node:n})):this.fireEvent({eventName:C.deselect,node:n})}setExpandedNode(n,a){this.expandedNodeIds=Object.assign({},this.expandedNodeIds,{[n.id]:a}),this.fireEvent({eventName:C.toggleExpanded,node:n,isExpanded:a})}expandAll(){this.roots.forEach(n=>n.expandAll())}collapseAll(){this.roots.forEach(n=>n.collapseAll())}setIsHidden(n,a){this.hiddenNodeIds=Object.assign({},this.hiddenNodeIds,{[n.id]:a})}setHiddenNodeIds(n){this.hiddenNodeIds=n.reduce((a,o)=>Object.assign(a,{[o]:!0}),{})}performKeyAction(n,a){const o=this.options.actionMapping.keys[a.keyCode];return!!o&&(a.preventDefault(),o(this,n,a),!0)}filterNodes(n,a=!0){let o;if(!n)return this.clearFilter();if(n&&"string"==typeof n.valueOf())o=r=>-1!==r.displayField.toLowerCase().indexOf(n.toLowerCase());else{if(!n||"function"!=typeof n)return console.error("Don't know what to do with filter",n),void console.error("Should be either a string or function");o=n}const p={};this.roots.forEach(r=>this._filterNode(p,r,o,a)),this.hiddenNodeIds=p,this.fireEvent({eventName:C.changeFilter})}clearFilter(){this.hiddenNodeIds={},this.fireEvent({eventName:C.changeFilter})}moveNode(n,a){const o=n.getIndexInParent(),p=n.parent;if(!this.canMoveNode(n,a,o))return;const r=p.getField("children");a.parent.getField("children")||a.parent.setField("children",[]);const i=a.parent.getField("children"),u=r.splice(o,1)[0];let f=p===a.parent&&a.index>o?a.index-1:a.index;i.splice(f,0,u),p.treeModel.update(),a.parent.treeModel!==p.treeModel&&a.parent.treeModel.update(),this.fireEvent({eventName:C.moveNode,node:u,to:{parent:a.parent.data,index:f},from:{parent:p.data,index:o}})}copyNode(n,a){const o=n.getIndexInParent();if(!this.canMoveNode(n,a,o))return;a.parent.getField("children")||a.parent.setField("children",[]);const p=a.parent.getField("children"),r=this.options.getNodeClone(n);p.splice(a.index,0,r),n.treeModel.update(),a.parent.treeModel!==n.treeModel&&a.parent.treeModel.update(),this.fireEvent({eventName:C.copyNode,node:r,to:{parent:a.parent.data,index:a.index}})}getState(){return{expandedNodeIds:this.expandedNodeIds,selectedLeafNodeIds:this.selectedLeafNodeIds,activeNodeIds:this.activeNodeIds,hiddenNodeIds:this.hiddenNodeIds,focusedNodeId:this.focusedNodeId}}setState(n){!n||Object.assign(this,{expandedNodeIds:n.expandedNodeIds||{},selectedLeafNodeIds:n.selectedLeafNodeIds||{},activeNodeIds:n.activeNodeIds||{},hiddenNodeIds:n.hiddenNodeIds||{},focusedNodeId:n.focusedNodeId})}subscribeToState(n){Qn(()=>n(this.getState()))}canMoveNode(n,a,o){return o||n.getIndexInParent(),(n.parent!==a.parent||o!==a.index)&&!a.parent.isDescendantOf(n)}calculateExpandedNodes(){this._calculateExpandedNodes()}_filterNode(n,a,o,p){let r=o(a);return a.children&&a.children.forEach(i=>{this._filterNode(n,i,o,p)&&(r=!0)}),r||(n[a.id]=!0),p&&r&&a.ensureVisible(),r}_calculateExpandedNodes(n=null){(n=n||this.virtualRoot).data[this.options.isExpandedField]&&(this.expandedNodeIds=Object.assign({},this.expandedNodeIds,{[n.id]:!0})),n.children&&n.children.forEach(a=>this._calculateExpandedNodes(a))}_setActiveNodeSingle(n,a){this.activeNodes.filter(o=>o!==n).forEach(o=>{this.fireEvent({eventName:C.deactivate,node:o}),this.fireEvent({eventName:C.nodeDeactivate,node:o})}),this.activeNodeIds=a?{[n.id]:!0}:{}}_setActiveNodeMulti(n,a){this.activeNodeIds=Object.assign({},this.activeNodeIds,{[n.id]:a})}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275prov=s.Yz7({token:t,factory:t.\u0275fac}),t.focusedTree=null,t})();b([v,l("design:type",Array)],m.prototype,"roots",void 0),b([v,l("design:type",Object)],m.prototype,"expandedNodeIds",void 0),b([v,l("design:type",Object)],m.prototype,"selectedLeafNodeIds",void 0),b([v,l("design:type",Object)],m.prototype,"activeNodeIds",void 0),b([v,l("design:type",Object)],m.prototype,"hiddenNodeIds",void 0),b([v,l("design:type",Object)],m.prototype,"focusedNodeId",void 0),b([v,l("design:type",Us)],m.prototype,"virtualRoot",void 0),b([A,l("design:type",Object),l("design:paramtypes",[])],m.prototype,"focusedNode",null),b([A,l("design:type",Object),l("design:paramtypes",[])],m.prototype,"expandedNodes",null),b([A,l("design:type",Object),l("design:paramtypes",[])],m.prototype,"activeNodes",null),b([A,l("design:type",Object),l("design:paramtypes",[])],m.prototype,"hiddenNodes",null),b([A,l("design:type",Object),l("design:paramtypes",[])],m.prototype,"selectedLeafNodes",null),b([g,l("design:type",Function),l("design:paramtypes",[Object]),l("design:returntype",void 0)],m.prototype,"setData",null),b([g,l("design:type",Function),l("design:paramtypes",[]),l("design:returntype",void 0)],m.prototype,"update",null),b([g,l("design:type",Function),l("design:paramtypes",[Object]),l("design:returntype",void 0)],m.prototype,"setFocusedNode",null),b([g,l("design:type",Function),l("design:paramtypes",[Object]),l("design:returntype",void 0)],m.prototype,"setFocus",null),b([g,l("design:type",Function),l("design:paramtypes",[Object]),l("design:returntype",void 0)],m.prototype,"doForAll",null),b([g,l("design:type",Function),l("design:paramtypes",[]),l("design:returntype",void 0)],m.prototype,"focusNextNode",null),b([g,l("design:type",Function),l("design:paramtypes",[]),l("design:returntype",void 0)],m.prototype,"focusPreviousNode",null),b([g,l("design:type",Function),l("design:paramtypes",[]),l("design:returntype",void 0)],m.prototype,"focusDrillDown",null),b([g,l("design:type",Function),l("design:paramtypes",[]),l("design:returntype",void 0)],m.prototype,"focusDrillUp",null),b([g,l("design:type",Function),l("design:paramtypes",[Object,Object,Object]),l("design:returntype",void 0)],m.prototype,"setActiveNode",null),b([g,l("design:type",Function),l("design:paramtypes",[Object,Object]),l("design:returntype",void 0)],m.prototype,"setSelectedNode",null),b([g,l("design:type",Function),l("design:paramtypes",[Object,Object]),l("design:returntype",void 0)],m.prototype,"setExpandedNode",null),b([g,l("design:type",Function),l("design:paramtypes",[]),l("design:returntype",void 0)],m.prototype,"expandAll",null),b([g,l("design:type",Function),l("design:paramtypes",[]),l("design:returntype",void 0)],m.prototype,"collapseAll",null),b([g,l("design:type",Function),l("design:paramtypes",[Object,Object]),l("design:returntype",void 0)],m.prototype,"setIsHidden",null),b([g,l("design:type",Function),l("design:paramtypes",[Object]),l("design:returntype",void 0)],m.prototype,"setHiddenNodeIds",null),b([g,l("design:type",Function),l("design:paramtypes",[Object,Object]),l("design:returntype",void 0)],m.prototype,"filterNodes",null),b([g,l("design:type",Function),l("design:paramtypes",[]),l("design:returntype",void 0)],m.prototype,"clearFilter",null),b([g,l("design:type",Function),l("design:paramtypes",[Object,Object]),l("design:returntype",void 0)],m.prototype,"moveNode",null),b([g,l("design:type",Function),l("design:paramtypes",[Object,Object]),l("design:returntype",void 0)],m.prototype,"copyNode",null),b([g,l("design:type",Function),l("design:paramtypes",[Object]),l("design:returntype",void 0)],m.prototype,"setState",null);let Rt=(()=>{class t{constructor(){this._draggedElement=null}set(n){this._draggedElement=n}get(){return this._draggedElement}isDragging(){return!!this.get()}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275prov=(0,s.Yz7)({factory:function(){return new t},token:t,providedIn:"root"}),t})();var cn=function(t,e,n,a){var r,o=arguments.length,p=o<3?e:null===a?a=Object.getOwnPropertyDescriptor(e,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)p=Reflect.decorate(t,e,n,a);else for(var i=t.length-1;i>=0;i--)(r=t[i])&&(p=(o<3?r(p):o>3?r(e,n,p):r(e,n))||p);return o>3&&p&&Object.defineProperty(e,n,p),p},D=function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};let X=(()=>{class t{constructor(n){this.treeModel=n,this.yBlocks=0,this.x=0,this.viewportHeight=null,this.viewport=null,n.virtualScroll=this,this._dispose=[Qn(()=>this.fixScroll())]}get y(){return 150*this.yBlocks}get totalHeight(){return this.treeModel.virtualRoot?this.treeModel.virtualRoot.height:0}fireEvent(n){this.treeModel.fireEvent(n)}init(){const n=this.recalcPositions.bind(this);n(),this._dispose=[...this._dispose,Zn(()=>this.treeModel.roots,n),Zn(()=>this.treeModel.expandedNodeIds,n),Zn(()=>this.treeModel.hiddenNodeIds,n)],this.treeModel.subscribe(C.loadNodeChildren,n)}isEnabled(){return this.treeModel.options.useVirtualScroll}_setYBlocks(n){this.yBlocks=n}recalcPositions(){this.treeModel.virtualRoot.height=this._getPositionAfter(this.treeModel.getVisibleRoots(),0)}_getPositionAfter(n,a){let o=a;return n.forEach(p=>{p.position=o,o=this._getPositionAfterNode(p,o)}),o}_getPositionAfterNode(n,a){let o=n.getSelfHeight()+a;return n.children&&n.isExpanded&&(o=this._getPositionAfter(n.visibleChildren,o)),n.height=o-a,o}clear(){this._dispose.forEach(n=>n())}setViewport(n){Object.assign(this,{viewport:n,x:n.scrollLeft,yBlocks:Math.round(n.scrollTop/150),viewportHeight:n.getBoundingClientRect?n.getBoundingClientRect().height:0})}scrollIntoView(n,a,o=!0){if(n.options.scrollContainer){const p=n.options.scrollContainer,r=p.getBoundingClientRect().height,i=p.getBoundingClientRect().top,u=this.viewport.getBoundingClientRect().top+n.position-i;(a||u<p.scrollTop||u+n.getSelfHeight()>p.scrollTop+r)&&(p.scrollTop=o?u-r/2:u)}else(a||n.position<this.y||n.position+n.getSelfHeight()>this.y+this.viewportHeight)&&this.viewport&&(this.viewport.scrollTop=o?n.position-this.viewportHeight/2:n.position,this._setYBlocks(Math.floor(this.viewport.scrollTop/150)))}getViewportNodes(n){if(!n)return[];const a=n.filter(u=>!u.isHidden);if(!this.isEnabled())return a;if(!this.viewportHeight||!a.length)return[];const o=a.slice(-1)[0];if(!o.height&&0===o.position)return[];const p=Vs(a,u=>u.position+500>this.y||u.position+u.height>this.y),r=Vs(a,u=>u.position-500>this.y+this.viewportHeight,p),i=[];for(let u=p;u<=r;u++)i.push(a[u]);return i}fixScroll(){const n=Math.max(0,this.totalHeight-this.viewportHeight);this.y<0&&this._setYBlocks(0),this.y>n&&this._setYBlocks(n/150)}}return t.\u0275fac=function(n){return new(n||t)(s.LFG(m))},t.\u0275prov=s.Yz7({token:t,factory:t.\u0275fac}),t})();function Vs(t,e,n=0){let a=n,o=t.length-1;for(;a!==o;){let p=Math.floor((a+o)/2);e(t[p])?o=p:a=a===p?o:p}return a}cn([v,D("design:type",Object)],X.prototype,"yBlocks",void 0),cn([v,D("design:type",Object)],X.prototype,"x",void 0),cn([v,D("design:type",Object)],X.prototype,"viewportHeight",void 0),cn([A,D("design:type",Object),D("design:paramtypes",[])],X.prototype,"y",null),cn([A,D("design:type",Object),D("design:paramtypes",[])],X.prototype,"totalHeight",null),cn([g,D("design:type",Function),D("design:paramtypes",[Object]),D("design:returntype",void 0)],X.prototype,"_setYBlocks",null),cn([g,D("design:type",Function),D("design:paramtypes",[]),D("design:returntype",void 0)],X.prototype,"recalcPositions",null),cn([g,D("design:type",Function),D("design:paramtypes",[Object]),D("design:returntype",void 0)],X.prototype,"setViewport",null),cn([g,D("design:type",Function),D("design:paramtypes",[Object,Object,Object]),D("design:returntype",void 0)],X.prototype,"scrollIntoView",null);let Qo=(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=s.Xpm({type:t,selectors:[["tree-loading-component"]],inputs:{template:"template",node:"node"},decls:2,vars:5,consts:[[4,"ngIf"],[3,"ngTemplateOutlet","ngTemplateOutletContext"]],template:function(n,a){1&n&&(s.YNc(0,vo,2,0,"span",0),s.GkF(1,1)),2&n&&(s.Q6J("ngIf",!a.template),s.xp6(1),s.Q6J("ngTemplateOutlet",a.template)("ngTemplateOutletContext",s.VKq(3,yo,a.node)))},dependencies:[x.O5,x.tP],encapsulation:2}),t})(),Yo=(()=>{class t{constructor(n,a){this.elementRef=n,this.virtualScroll=a,this.setViewport=this.throttle(()=>{this.virtualScroll.setViewport(this.elementRef.nativeElement)},17),this.scrollEventHandler=this.setViewport.bind(this)}ngOnInit(){this.virtualScroll.init()}ngAfterViewInit(){setTimeout(()=>{this.setViewport(),this.virtualScroll.fireEvent({eventName:C.initialized})}),this.elementRef.nativeElement.addEventListener("scroll",this.scrollEventHandler)}ngOnDestroy(){this.virtualScroll.clear(),this.elementRef.nativeElement.removeEventListener("scroll",this.scrollEventHandler)}getTotalHeight(){return this.virtualScroll.isEnabled()&&this.virtualScroll.totalHeight+"px"||"auto"}throttle(n,a){let o=0;return function(){let p=Date.now();p-o>=a&&(n(),o=p)}}}return t.\u0275fac=function(n){return new(n||t)(s.Y36(s.SBq),s.Y36(X))},t.\u0275cmp=s.Xpm({type:t,selectors:[["tree-viewport"]],features:[s._Bn([X])],ngContentSelectors:wo,decls:1,vars:2,consts:[[4,"treeMobxAutorun"]],template:function(n,a){1&n&&(s.F$t(),s.YNc(0,bo,3,2,"ng-container",0)),2&n&&s.Q6J("treeMobxAutorun",s.DdM(1,Fn))},dependencies:[Rn],encapsulation:2}),t})(),js=(()=>{class t{constructor(n,a){this.treeModel=n,this.treeDraggedElement=a,n.eventNames.forEach(o=>this[o]=new s.vpe),n.subscribeToState(o=>this.stateChange.emit(o))}set nodes(n){}set options(n){}set focused(n){this.treeModel.setFocus(n)}set state(n){this.treeModel.setState(n)}onKeydown(n){if(!this.treeModel.isFocused||["input","textarea"].includes(document.activeElement.tagName.toLowerCase()))return;const a=this.treeModel.getFocusedNode();this.treeModel.performKeyAction(a,n)}onMousedown(n){(function a(o,p){return!o||o.localName!==p&&a(o.parentElement,p)})(n.target,"tree-root")&&this.treeModel.setFocus(!1)}ngOnChanges(n){(n.options||n.nodes)&&this.treeModel.setData({options:n.options&&n.options.currentValue,nodes:n.nodes&&n.nodes.currentValue,events:this.pick(this,this.treeModel.eventNames)})}sizeChanged(){this.viewportComponent.setViewport()}pick(n,a){return a.reduce((o,p)=>(n&&n.hasOwnProperty(p)&&(o[p]=n[p]),o),{})}}return t.\u0275fac=function(n){return new(n||t)(s.Y36(m),s.Y36(Rt))},t.\u0275cmp=s.Xpm({type:t,selectors:[["Tree"],["tree-root"]],contentQueries:function(n,a,o){if(1&n&&(s.Suo(o,xo,5),s.Suo(o,_o,5),s.Suo(o,To,5),s.Suo(o,Co,5)),2&n){let p;s.iGM(p=s.CRH())&&(a.loadingTemplate=p.first),s.iGM(p=s.CRH())&&(a.treeNodeTemplate=p.first),s.iGM(p=s.CRH())&&(a.treeNodeWrapperTemplate=p.first),s.iGM(p=s.CRH())&&(a.treeNodeFullTemplate=p.first)}},viewQuery:function(n,a){if(1&n&&s.Gf(Ao,5),2&n){let o;s.iGM(o=s.CRH())&&(a.viewportComponent=o.first)}},hostBindings:function(n,a){1&n&&s.NdJ("keydown",function(p){return a.onKeydown(p)},!1,s.pYS)("mousedown",function(p){return a.onMousedown(p)},!1,s.pYS)},inputs:{nodes:"nodes",options:"options",focused:"focused",state:"state"},outputs:{toggleExpanded:"toggleExpanded",activate:"activate",deactivate:"deactivate",nodeActivate:"nodeActivate",nodeDeactivate:"nodeDeactivate",select:"select",deselect:"deselect",focus:"focus",blur:"blur",updateData:"updateData",initialized:"initialized",moveNode:"moveNode",copyNode:"copyNode",loadNodeChildren:"loadNodeChildren",changeFilter:"changeFilter",event:"event",stateChange:"stateChange"},features:[s._Bn([m]),s.TTD],decls:5,vars:6,consts:[["viewport",""],[1,"angular-tree-component"],[3,"nodes","treeModel","templates",4,"ngIf"],["class","empty-tree-drop-slot",3,"dropIndex","node",4,"ngIf"],[3,"nodes","treeModel","templates"],[1,"empty-tree-drop-slot",3,"dropIndex","node"]],template:function(n,a){1&n&&(s.TgZ(0,"tree-viewport",null,0)(2,"div",1),s.YNc(3,Do,1,8,"tree-node-collection",2),s.YNc(4,Eo,1,2,"tree-node-drop-slot",3),s.qZA()()),2&n&&(s.xp6(2),s.ekj("node-dragging",a.treeDraggedElement.isDragging())("angular-tree-component-rtl",a.treeModel.options.rtl),s.xp6(1),s.Q6J("ngIf",a.treeModel.roots),s.xp6(1),s.Q6J("ngIf",a.treeModel.isEmptyTree()))},dependencies:function(){return[x.O5,Ls,Un,Yo]},encapsulation:2}),t})(),zo=(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=s.Xpm({type:t,selectors:[["TreeNode"],["tree-node"]],inputs:{node:"node",index:"index",templates:"templates"},decls:1,vars:2,consts:[[4,"treeMobxAutorun"],[3,"class","tree-node","tree-node-expanded","tree-node-collapsed","tree-node-leaf","tree-node-active","tree-node-focused",4,"ngIf"],[3,"ngTemplateOutlet","ngTemplateOutletContext"],[3,"dropIndex","node",4,"ngIf"],[3,"node","index","templates"],[3,"node","templates"],[3,"dropIndex","node"]],template:function(n,a){1&n&&s.YNc(0,Io,3,8,"ng-container",0),2&n&&s.Q6J("treeMobxAutorun",s.DdM(1,Fn))},dependencies:function(){return[x.O5,x.tP,Ut,Ls,sp,Rn]},encapsulation:2}),t})(),Wo=(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=s.Xpm({type:t,selectors:[["tree-node-content"]],inputs:{node:"node",index:"index",template:"template"},decls:2,vars:7,consts:[[4,"ngIf"],[3,"ngTemplateOutlet","ngTemplateOutletContext"]],template:function(n,a){1&n&&(s.YNc(0,Mo,2,1,"span",0),s.GkF(1,1)),2&n&&(s.Q6J("ngIf",!a.template),s.xp6(1),s.Q6J("ngTemplateOutlet",a.template)("ngTemplateOutletContext",s.kEZ(3,Zo,a.node,a.node,a.index)))},dependencies:[x.O5,x.tP],encapsulation:2}),t})(),Ls=(()=>{class t{onDrop(n){this.node.mouseAction("drop",n.event,{from:n.element,to:{parent:this.node,index:this.dropIndex}})}allowDrop(n,a){return this.node.options.allowDrop(n,{parent:this.node,index:this.dropIndex},a)}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=s.Xpm({type:t,selectors:[["TreeNodeDropSlot"],["tree-node-drop-slot"]],inputs:{node:"node",dropIndex:"dropIndex"},decls:1,vars:2,consts:[[1,"node-drop-slot",3,"treeAllowDrop","allowDragoverStyling","treeDrop"]],template:function(n,a){1&n&&(s.TgZ(0,"div",0),s.NdJ("treeDrop",function(p){return a.onDrop(p)}),s.qZA()),2&n&&s.Q6J("treeAllowDrop",a.allowDrop.bind(a))("allowDragoverStyling",!0)},dependencies:function(){return[$s]},encapsulation:2}),t})(),Gt=(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=s.Xpm({type:t,selectors:[["tree-node-expander"]],inputs:{node:"node"},decls:1,vars:2,consts:[[4,"treeMobxAutorun"],["class","toggle-children-wrapper",3,"toggle-children-wrapper-expanded","toggle-children-wrapper-collapsed","click",4,"ngIf"],["class","toggle-children-placeholder",4,"ngIf"],[1,"toggle-children-wrapper",3,"click"],[1,"toggle-children"],[1,"toggle-children-placeholder"]],template:function(n,a){1&n&&s.YNc(0,Ro,3,2,"ng-container",0),2&n&&s.Q6J("treeMobxAutorun",s.DdM(1,Fn))},dependencies:[x.O5,Rn],encapsulation:2}),t})(),Ut=(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=s.Xpm({type:t,selectors:[["tree-node-children"]],inputs:{node:"node",templates:"templates"},decls:1,vars:2,consts:[[4,"treeMobxAutorun"],[3,"tree-children","tree-children-no-padding",4,"treeAnimateOpen","treeAnimateOpenSpeed","treeAnimateOpenAcceleration","treeAnimateOpenEnabled"],[3,"nodes","templates","treeModel",4,"ngIf"],["class","tree-node-loading",3,"padding-left","template","node",4,"ngIf"],[3,"nodes","templates","treeModel"],[1,"tree-node-loading",3,"template","node"]],template:function(n,a){1&n&&s.YNc(0,Vo,2,4,"ng-container",0),2&n&&s.Q6J("treeMobxAutorun",s.DdM(1,Fn))},dependencies:function(){return[x.O5,Qo,Un,pp,Rn]},encapsulation:2}),t})();const Xo=Object.assign(function Ko(...t){return g(...t)},g),tp=Object.assign(function np(...t){return A(...t)},A),Bs=Object.assign(function ep(...t){return v(...t)},v);var ht=function(t,e,n,a){var r,o=arguments.length,p=o<3?e:null===a?a=Object.getOwnPropertyDescriptor(e,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)p=Reflect.decorate(t,e,n,a);else for(var i=t.length-1;i>=0;i--)(r=t[i])&&(p=(o<3?r(p):o>3?r(e,n,p):r(e,n))||p);return o>3&&p&&Object.defineProperty(e,n,p),p},xn=function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};let Un=(()=>{class t{constructor(){this._dispose=[]}get nodes(){return this._nodes}set nodes(n){this.setNodes(n)}get marginTop(){const n=this.viewportNodes&&this.viewportNodes.length&&this.viewportNodes[0];return(n&&n.parent?n.position-n.parent.position-n.parent.getSelfHeight():0)+"px"}setNodes(n){this._nodes=n}ngOnInit(){this.virtualScroll=this.treeModel.virtualScroll,this._dispose=[Zn(()=>this.virtualScroll.getViewportNodes(this.nodes).map(n=>n.index),n=>{this.viewportNodes=n.map(a=>this.nodes[a])},{compareStructural:!0,fireImmediately:!0}),Zn(()=>this.nodes,n=>{this.viewportNodes=this.virtualScroll.getViewportNodes(n)})]}ngOnDestroy(){this._dispose.forEach(n=>n())}trackNode(n,a){return a.id}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=s.Xpm({type:t,selectors:[["tree-node-collection"]],inputs:{nodes:"nodes",treeModel:"treeModel",templates:"templates"},decls:1,vars:2,consts:[[4,"treeMobxAutorun"],[3,"node","index","templates",4,"ngFor","ngForOf","ngForTrackBy"],[3,"node","index","templates"]],template:function(n,a){1&n&&s.YNc(0,Lo,3,4,"ng-container",0),2&n&&s.Q6J("treeMobxAutorun",s.DdM(1,Fn))},dependencies:[x.sg,zo,Rn],encapsulation:2}),t})();ht([Bs,xn("design:type",Object)],Un.prototype,"_nodes",void 0),ht([Bs,xn("design:type",Array)],Un.prototype,"viewportNodes",void 0),ht([tp,xn("design:type",String),xn("design:paramtypes",[])],Un.prototype,"marginTop",null),ht([Xo,xn("design:type",Function),xn("design:paramtypes",[Object]),xn("design:returntype",void 0)],Un.prototype,"setNodes",null);let sp=(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=s.Xpm({type:t,selectors:[["tree-node-wrapper"]],inputs:{node:"node",index:"index",templates:"templates"},decls:2,vars:8,consts:[["class","node-wrapper",3,"padding-left",4,"ngIf"],[3,"ngTemplateOutlet","ngTemplateOutletContext"],[1,"node-wrapper"],[3,"node",4,"ngIf"],[3,"node"],[1,"node-content-wrapper",3,"treeAllowDrop","allowDragoverStyling","treeDrag","treeDragEnabled","click","dblclick","mouseover","mouseout","contextmenu","treeDrop","treeDropDragOver","treeDropDragLeave","treeDropDragEnter"],[3,"node","index","template"]],template:function(n,a){1&n&&(s.YNc(0,Ho,5,15,"div",0),s.GkF(1,1)),2&n&&(s.Q6J("ngIf",!a.templates.treeNodeWrapperTemplate),s.xp6(1),s.Q6J("ngTemplateOutlet",a.templates.treeNodeWrapperTemplate)("ngTemplateOutletContext",s.l5B(3,Rs,a.node,a.node,a.index,a.templates)))},dependencies:function(){return[x.O5,x.tP,Wo,$s,op,Gt,ap]},encapsulation:2}),t})(),ap=(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=s.Xpm({type:t,selectors:[["tree-node-checkbox"]],inputs:{node:"node"},decls:1,vars:2,consts:[[4,"treeMobxAutorun"],["type","checkbox",1,"tree-node-checkbox",3,"checked","indeterminate","click"]],template:function(n,a){1&n&&s.YNc(0,Jo,2,2,"ng-container",0),2&n&&s.Q6J("treeMobxAutorun",s.DdM(1,Fn))},dependencies:[Rn],encapsulation:2}),t})();const Hs="is-dragging-over",Js="is-dragging-over-disabled";let $s=(()=>{class t{constructor(n,a,o,p){this.el=n,this.renderer=a,this.treeDraggedElement=o,this.ngZone=p,this.allowDragoverStyling=!0,this.onDropCallback=new s.vpe,this.onDragOverCallback=new s.vpe,this.onDragLeaveCallback=new s.vpe,this.onDragEnterCallback=new s.vpe,this._allowDrop=(r,i)=>!0,this.dragOverEventHandler=this.onDragOver.bind(this),this.dragEnterEventHandler=this.onDragEnter.bind(this),this.dragLeaveEventHandler=this.onDragLeave.bind(this)}set treeAllowDrop(n){this._allowDrop=n instanceof Function?n:(a,o)=>n}allowDrop(n){return this._allowDrop(this.treeDraggedElement.get(),n)}ngAfterViewInit(){let n=this.el.nativeElement;this.ngZone.runOutsideAngular(()=>{n.addEventListener("dragover",this.dragOverEventHandler),n.addEventListener("dragenter",this.dragEnterEventHandler),n.addEventListener("dragleave",this.dragLeaveEventHandler)})}ngOnDestroy(){let n=this.el.nativeElement;n.removeEventListener("dragover",this.dragOverEventHandler),n.removeEventListener("dragenter",this.dragEnterEventHandler),n.removeEventListener("dragleave",this.dragLeaveEventHandler)}onDragOver(n){if(!this.allowDrop(n))return this.allowDragoverStyling?this.addDisabledClass():void 0;this.onDragOverCallback.emit({event:n,element:this.treeDraggedElement.get()}),n.preventDefault(),this.allowDragoverStyling&&this.addClass()}onDragEnter(n){!this.allowDrop(n)||(n.preventDefault(),this.onDragEnterCallback.emit({event:n,element:this.treeDraggedElement.get()}))}onDragLeave(n){if(!this.allowDrop(n))return this.allowDragoverStyling?this.removeDisabledClass():void 0;this.onDragLeaveCallback.emit({event:n,element:this.treeDraggedElement.get()}),this.allowDragoverStyling&&this.removeClass()}onDrop(n){!this.allowDrop(n)||(n.preventDefault(),this.onDropCallback.emit({event:n,element:this.treeDraggedElement.get()}),this.allowDragoverStyling&&this.removeClass(),this.treeDraggedElement.set(null))}addClass(){this.renderer.addClass(this.el.nativeElement,Hs)}removeClass(){this.renderer.removeClass(this.el.nativeElement,Hs)}addDisabledClass(){this.renderer.addClass(this.el.nativeElement,Js)}removeDisabledClass(){this.renderer.removeClass(this.el.nativeElement,Js)}}return t.\u0275fac=function(n){return new(n||t)(s.Y36(s.SBq),s.Y36(s.Qsj),s.Y36(Rt),s.Y36(s.R0b))},t.\u0275dir=s.lG2({type:t,selectors:[["","treeDrop",""]],hostBindings:function(n,a){1&n&&s.NdJ("drop",function(p){return a.onDrop(p)})},inputs:{allowDragoverStyling:"allowDragoverStyling",treeAllowDrop:"treeAllowDrop"},outputs:{onDropCallback:"treeDrop",onDragOverCallback:"treeDropDragOver",onDragLeaveCallback:"treeDropDragLeave",onDragEnterCallback:"treeDropDragEnter"}}),t})(),op=(()=>{class t{constructor(n,a,o,p){this.el=n,this.renderer=a,this.treeDraggedElement=o,this.ngZone=p,this.dragEventHandler=this.onDrag.bind(this)}ngAfterViewInit(){let n=this.el.nativeElement;this.ngZone.runOutsideAngular(()=>{n.addEventListener("drag",this.dragEventHandler)})}ngDoCheck(){this.renderer.setAttribute(this.el.nativeElement,"draggable",this.treeDragEnabled?"true":"false")}ngOnDestroy(){this.el.nativeElement.removeEventListener("drag",this.dragEventHandler)}onDragStart(n){n.dataTransfer.setData("text",n.target.id),this.treeDraggedElement.set(this.draggedElement),this.draggedElement.mouseAction&&this.draggedElement.mouseAction("dragStart",n)}onDrag(n){this.draggedElement.mouseAction&&this.draggedElement.mouseAction("drag",n)}onDragEnd(){this.draggedElement.mouseAction&&this.draggedElement.mouseAction("dragEnd"),this.treeDraggedElement.set(null)}}return t.\u0275fac=function(n){return new(n||t)(s.Y36(s.SBq),s.Y36(s.Qsj),s.Y36(Rt),s.Y36(s.R0b))},t.\u0275dir=s.lG2({type:t,selectors:[["","treeDrag",""]],hostBindings:function(n,a){1&n&&s.NdJ("dragstart",function(p){return a.onDragStart(p)})("dragend",function(){return a.onDragEnd()})},inputs:{draggedElement:["treeDrag","draggedElement"],treeDragEnabled:"treeDragEnabled"}}),t})(),pp=(()=>{class t{constructor(n,a,o){this.renderer=n,this.templateRef=a,this.viewContainerRef=o}set isOpen(n){n?(this._show(),this.isEnabled&&!1===this._isOpen&&this._animateOpen()):this.isEnabled?this._animateClose():this._hide(),this._isOpen=!!n}_show(){this.innerElement||(this.innerElement=this.viewContainerRef.createEmbeddedView(this.templateRef).rootNodes[0])}_hide(){this.viewContainerRef.clear(),this.innerElement=null}_animateOpen(){let n=this.animateSpeed,a=this.animateAcceleration,o=0;this.renderer.setStyle(this.innerElement,"max-height","0"),setTimeout(()=>{const p=setInterval(()=>{if(!this._isOpen||!this.innerElement)return clearInterval(p);o+=n;const r=Math.round(o);this.renderer.setStyle(this.innerElement,"max-height",`${r}px`);const i=this.innerElement.getBoundingClientRect?this.innerElement.getBoundingClientRect().height:0;n*=a,a*=1.005,i<r&&(this.renderer.setStyle(this.innerElement,"max-height",null),clearInterval(p))},17)})}_animateClose(){if(!this.innerElement)return;let n=this.animateSpeed,a=this.animateAcceleration,o=this.innerElement.getBoundingClientRect().height;const p=setInterval(()=>{if(this._isOpen||!this.innerElement)return clearInterval(p);o-=n,this.renderer.setStyle(this.innerElement,"max-height",`${o}px`),n*=a,a*=1.005,o<=0&&(this.viewContainerRef.clear(),this.innerElement=null,clearInterval(p))},17)}}return t.\u0275fac=function(n){return new(n||t)(s.Y36(s.Qsj),s.Y36(s.Rgc),s.Y36(s.s_b))},t.\u0275dir=s.lG2({type:t,selectors:[["","treeAnimateOpen",""]],inputs:{isOpen:["treeAnimateOpen","isOpen"],animateSpeed:["treeAnimateOpenSpeed","animateSpeed"],animateAcceleration:["treeAnimateOpenAcceleration","animateAcceleration"],isEnabled:["treeAnimateOpenEnabled","isEnabled"]}}),t})(),rp=(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275mod=s.oAB({type:t}),t.\u0275inj=s.cJS({imports:[x.ez]}),t})();var mn=d(96215),ip=d(3745),cp=d(73875),Pt=d(74427),Vt=d(48342),jt=(d(22061),d(20391)),Lt=d(34610),Bt=d(75079),lp=d(95014),up=d(44396),Ys=d(89243),dp=d(30642),kp=d(28009),Ht=d(39327),Jt=d(60169),fp=d(18901),hp=d(79551),$t=d(73962),Qt=d(33403),Yt=d(8929),zt=d(7625),Wt=d(97704),Kt=d(591),gp=d(54715);class mp{constructor(e,n,a){this.level=e,this.setSize=n,this.positionInSet=a,this.loading$=new Kt.X(!1)}}let Xt=(()=>{class t{constructor(){this.data$=new Kt.X([]),this.rows$=new Kt.X([]),this._onDestroy=new Yt.xQ,this.data$.pipe((0,zt.R)(this._onDestroy)).subscribe(n=>this.rows$.next(this.getFlattenedTree(n)))}ngOnDestroy(){this._onDestroy.next(),this._onDestroy.complete()}setExpanded(n,a){var o=this;return(0,Wt.Z)(function*(){a?(yield o.getChildren(n),o.insertChildren(n)):o.removeChildren(n)})()}getFlattenedTree(n,a){return n.reduce((o,p,r)=>(p.state=new mp(a?a.state.level+1:0,n.length,r+1),[...o,p,...p.children&&p.expanded?this.getFlattenedTree(p.children,p):[]]),[])}getChildren(n){var a=this;return(0,Wt.Z)(function*(){if(!n.children&&a.loadChildren){n.state.loading$.next(!0);try{n.children=yield a.getNormalizedChildren(a.loadChildren(n))}finally{n.state.loading$.next(!1)}}})()}getNormalizedChildren(n){return(0,Wt.Z)(function*(){return(0,gp.b)(n)?yield n.toPromise():n instanceof Promise?yield n:n})()}insertChildren(n){if(!n.children)return;const a=[...this.rows$.getValue()],o=a.indexOf(n);if(o<0)return;const p=n.children.filter(i=>-1===a.indexOf(i)),r=this.getFlattenedTree(p,n);a.splice(o+1,0,...r),this.rows$.next(a)}removeChildren(n){const a=[...this.rows$.getValue()],o=a.indexOf(n);if(!(o<0)){for(;o+1<a.length&&a[o+1].state.level>n.state.level;)a.splice(o+1,1);this.rows$.next(a)}}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275prov=s.Yz7({token:t,factory:t.\u0275fac}),t})(),vp=(()=>{class t{constructor(){this._changeDetector=(0,s.f3M)(s.sBO),this._treeGridService=(0,s.f3M)(Xt),this.rowsChange=new s.vpe,this._onDestroy=new Yt.xQ}set data(n){this._treeGridService.data$.next(n)}set loadChildren(n){this._treeGridService.loadChildren=n}ngOnInit(){this._treeGridService.rows$.pipe((0,zt.R)(this._onDestroy)).subscribe(n=>{this.rowsChange.emit(n),this._changeDetector.detectChanges()})}ngOnDestroy(){this._onDestroy.next(),this._onDestroy.complete()}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275dir=s.lG2({type:t,selectors:[["","uxTreeGrid",""]],hostAttrs:[1,"treegrid"],inputs:{data:["uxTreeGrid","data"],loadChildren:"loadChildren"},outputs:{rowsChange:"rowsChange"},features:[s._Bn([Xt])]}),t})();var zs=d(21281);let Ws=(()=>{class t{constructor(){this._treeGridService=(0,s.f3M)(Xt),this.expandedChange=new s.vpe,this.loading=!1,this._expanded=!1,this._onDestroy=new Yt.xQ}set expanded(n){const a=(0,zs.Ig)(n);a!==this._expanded&&(this._expanded=a,this._treeGridService.setExpanded(this.item,a))}get expanded(){return this._expanded}ngOnInit(){if(!this.item||!this.item.state)throw new Error("uxTreeGridRow should be configured with an object emitted by uxTreeGrid.rows.");this.item.state.loading$.pipe((0,zt.R)(this._onDestroy)).subscribe(n=>this.loading=n)}ngOnDestroy(){this._onDestroy.next(),this._onDestroy.complete()}collapse(n){this.expanded=!1,this.expandedChange.emit(!1),n&&n.preventDefault()}expand(n){!this.canExpand||(this.expanded=!0,this.expandedChange.emit(!0),n&&n.preventDefault())}toggle(){this.expanded?this.collapse():this.expand()}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275dir=s.lG2({type:t,selectors:[["","uxTreeGridRow",""]],hostVars:6,hostBindings:function(n,a){1&n&&s.NdJ("keydown.ArrowLeft",function(p){return a.collapse(p)})("keydown.ArrowRight",function(p){return a.expand(p)}),2&n&&s.ekj("treegrid-row",!0)("treegrid-row-expanded",a.expanded)("treegrid-row-loading",a.loading)},inputs:{item:["uxTreeGridRow","item"],canExpand:"canExpand",expanded:"expanded"},outputs:{expandedChange:"expandedChange"},exportAs:["uxTreeGridRow"]}),t})(),yp=(()=>{class t{constructor(){this._row=(0,s.f3M)(Ws)}set uxTreeGridIndent(n){this._indent=(0,zs.su)(n,25)}get uxTreeGridIndent(){return this._indent}get indentation(){return this._row&&this._row.item?7+this._row.item.state.level*this._indent:7}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275dir=s.lG2({type:t,selectors:[["","uxTreeGridIndent",""]],hostVars:2,hostBindings:function(n,a){2&n&&s.Udp("padding-left",a.indentation,"px")},inputs:{uxTreeGridIndent:"uxTreeGridIndent"}}),t})();function bp(t,e){1&t&&s._UZ(0,"ux-icon",52)}function wp(t,e){1&t&&s._UZ(0,"span",53)}function xp(t,e){if(1&t){const n=s.EpF();s.TgZ(0,"button",49),s.NdJ("click",function(o){return s.CHM(n),s.oxw(),s.MAs(1).toggle(),s.KtG(o.stopPropagation())}),s.YNc(1,bp,1,0,"ux-icon",50),s.YNc(2,wp,1,0,"span",51),s.qZA()}if(2&t){s.oxw();const n=s.MAs(1);s.xp6(1),s.Q6J("ngIf",!n.loading),s.xp6(1),s.Q6J("ngIf",n.loading)}}function _p(t,e){if(1&t){const n=s.EpF();s.TgZ(0,"tr",41,42),s.NdJ("expandedChange",function(o){const r=s.CHM(n).$implicit;return s.KtG(r.expanded=o)})("selectedChange",function(o){const r=s.CHM(n).$implicit,i=s.oxw();return s.KtG(o?i.select(r):i.deselect(r))}),s.TgZ(2,"td",43)(3,"span",44),s.YNc(4,xp,3,2,"button",45),s.qZA(),s.TgZ(5,"ux-checkbox",46),s.NdJ("valueChange",function(o){const r=s.CHM(n).$implicit,i=s.oxw();return s.KtG(o?i.select(r):i.deselect(r))}),s.qZA(),s.TgZ(6,"span",47),s._UZ(7,"ux-icon",48),s.qZA(),s.TgZ(8,"span"),s._uU(9),s.qZA()(),s.TgZ(10,"td")(11,"span"),s._uU(12),s.ALo(13,"date"),s.qZA()()()}if(2&t){const n=e.$implicit,a=s.oxw();s.Q6J("uxTreeGridRow",n)("canExpand","folder"===n.type)("expanded",n.expanded)("uxSelectionItem",n)("selected",a.isSelected(n)),s.uIk("aria-expanded",n.expanded)("aria-level",n.state.level+1)("aria-setsize",n.state.setSize)("aria-posinset",n.state.positionInSet),s.xp6(4),s.Q6J("ngIf",n.children&&n.children.length>0),s.xp6(1),s.Q6J("value",a.isSelected(n)),s.xp6(2),s.Q6J("name",a.getIcon(n)),s.xp6(2),s.Oqu(n.title),s.xp6(3),s.Oqu(s.lcZ(13,14,n.date))}}function Tp(t,e){if(1&t&&(s.TgZ(0,"span"),s._uU(1),s.qZA()),2&t){const n=e.$implicit,a=e.last;s.xp6(1),s.hij(" ",n.title+(a?".":", ")," ")}}function Cp(t,e){1&t&&(s.TgZ(0,"em"),s._uU(1,"none"),s.qZA())}function Ap(t,e){1&t&&s._UZ(0,"ux-icon",52)}function Np(t,e){1&t&&s._UZ(0,"span",53)}function Dp(t,e){if(1&t){const n=s.EpF();s.TgZ(0,"button",49),s.NdJ("click",function(o){return s.CHM(n),s.oxw(),s.MAs(1).toggle(),s.KtG(o.stopPropagation())}),s.YNc(1,Ap,1,0,"ux-icon",50),s.YNc(2,Np,1,0,"span",51),s.qZA()}if(2&t){s.oxw();const n=s.MAs(1);s.xp6(1),s.Q6J("ngIf",!n.loading),s.xp6(1),s.Q6J("ngIf",n.loading)}}function Ep(t,e){if(1&t){const n=s.EpF();s.TgZ(0,"tr",54,42),s.NdJ("expandedChange",function(o){const r=s.CHM(n).$implicit;return s.KtG(r.expanded=o)}),s.TgZ(2,"td",43)(3,"span",44),s.YNc(4,Dp,3,2,"button",45),s.qZA(),s.TgZ(5,"span",47),s._UZ(6,"ux-icon",48),s.qZA(),s.TgZ(7,"span"),s._uU(8),s.qZA()(),s.TgZ(9,"td")(10,"span"),s._uU(11),s.qZA()(),s.TgZ(12,"td")(13,"span"),s._uU(14),s.ALo(15,"date"),s.qZA()()()}if(2&t){const n=e.$implicit,a=s.oxw();s.Q6J("uxTreeGridRow",n)("canExpand","folder"===n.type)("expanded",n.expanded)("uxSelectionItem",n),s.uIk("aria-expanded",n.expanded)("aria-level",n.state.level+1)("aria-setsize",n.state.setSize)("aria-posinset",n.state.positionInSet),s.xp6(4),s.Q6J("ngIf","folder"===n.type),s.xp6(2),s.Q6J("name",a.getIcon(n)),s.xp6(2),s.Oqu(n.title),s.xp6(3),s.Oqu(n.author),s.xp6(3),s.Oqu(s.lcZ(15,13,n.date))}}function Op(t,e){if(1&t&&(s.TgZ(0,"span"),s._uU(1),s.qZA()),2&t){const n=e.$implicit,a=e.last;s.xp6(1),s.hij(" ",n.title+(a?".":", ")," ")}}function Sp(t,e){1&t&&(s.TgZ(0,"em"),s._uU(1,"none"),s.qZA())}let _n=class extends jt.u{constructor(){super(d(56014)),this.selected=[],this.rows=[],this.items=[{title:"Documents",date:new Date("2013-02-16"),type:"folder",children:[{title:"Pictures",date:new Date("2013-05-28"),type:"folder",children:[{title:"Alcazar",date:new Date("2014-05-15"),type:"file"},{title:"Citadel",date:new Date("2015-09-02"),type:"file"},{title:"Donjon",date:new Date("2014-04-10"),type:"file"}]},{title:"Word files",date:new Date("2013-09-25"),type:"folder",children:[{title:"Accounts",date:new Date("2013-10-04"),type:"folder",children:[{title:"Castle",date:new Date("2014-05-15"),type:"file"},{title:"Estate",date:new Date("2015-08-03"),type:"file"},{title:"Manor",date:new Date("2014-05-30"),type:"file"},{title:"Mansion",date:new Date("2014-04-23"),type:"file"},{title:"Villa",date:new Date("2015-09-21"),type:"file"}]}]}]},{title:"Emails",date:new Date("2013-03-17"),type:"folder",children:[{title:"Inbox",date:new Date("2013-03-17"),type:"folder"},{title:"Outbox",date:new Date("2013-03-17"),type:"folder"}]},{title:"Empty",date:new Date("2016-06-02"),type:"folder"}],this.itemsFlat=this.flatten(this.items),this.asyncSelected=[],this.asyncRows=[],this.asyncItems=[{title:"Folder 1",type:"folder"},{title:"Folder 2",type:"folder"},{title:"Folder 3",type:"folder"}],this.loadChildrenFn=this.loadChildren.bind(this),this.playground={files:{"app.component.html":this.snippets.raw.appHtml,"app.component.ts":this.snippets.raw.appTs},modules:[{imports:["AccordionModule","CheckboxModule","SelectionModule","TreeGridModule"],library:"@ux-aspects/ux-aspects"}]}}set selectAll(e){!1===e?this.selected=[]:!0===e&&(this.selected=[...this.itemsFlat])}get selectAll(){return 0!==this.selected.length&&(this.selected.length===this.itemsFlat.length||-1)}select(e){-1===this.selected.indexOf(e)&&(this.selected=[...this.selected,e]),e.children&&e.children.forEach(n=>this.select(n))}deselect(e){this.selected=this.selected.filter(n=>n!==e),e.children&&e.children.forEach(n=>this.deselect(n)),this.checkChildren()}checkChildren(){for(const e of this.selected)e.hasOwnProperty("children")&&(e.children.some(a=>this.isSelected(a))||(this.selected=this.selected.filter(a=>a!==e)))}isSelected(e){return-1!==this.selected.indexOf(e)}loadChildren(e){return new Promise(n=>{setTimeout(()=>{const a=this.asyncItems.indexOf(e),o=[];for(let p=0;p<10;p+=1)o.push({title:`Document ${10*a+p+1}`,author:chance.name(),date:chance.date(),type:"file"});n(o)},2e3)})}flatten(e){return e.reduce((n,a)=>[...n,a,...a.children?this.flatten(a.children):[]],[])}clearChildren(){for(let e of this.asyncItems)e.expanded=!1,delete e.children}setExpanded(e,n){for(let a of e)a.expanded=n}getIcon(e){return"folder"!==e.type||e.expanded?"folder"===e.type&&e.expanded?"folder-open":"file"===e.type?"document":void 0:"folder"}};_n.\u0275fac=function(e){return new(e||_n)},_n.\u0275cmp=s.Xpm({type:_n,selectors:[["uxd-tree-grid"]],features:[s.qOj],decls:177,vars:19,consts:[[3,"collapseOthers"],["heading","Tree Grid with Preloaded Data",1,"accordion-chevron",3,"expanded"],["role","treegrid","aria-multiselectable","true",1,"table","table-hover",3,"uxTreeGrid","rowsChange"],[1,"treegrid-header","table-header-dark"],["aria-label","Select all rows",3,"value","valueChange"],[1,"treegrid-header-text"],["mode","simple",3,"uxSelection"],["role","row","class","clickable",3,"uxTreeGridRow","canExpand","expanded","uxSelectionItem","selected","expandedChange","selectedChange",4,"ngFor","ngForOf"],[1,"m-t-md"],[4,"ngFor","ngForOf"],[4,"ngIf"],["heading","Tree Grid with Asynchronous Loading",1,"accordion-chevron"],[1,"btn-container"],["type","button",1,"btn","button-secondary",3,"click"],["name","chevron-down"],["name","chevron-right"],["name","close"],["role","treegrid","aria-multiselectable","true",1,"table","table-hover",3,"uxTreeGrid","loadChildren","rowsChange"],["mode","row",3,"uxSelection","uxSelectionChange"],["role","row","class","clickable",3,"uxTreeGridRow","canExpand","expanded","uxSelectionItem","expandedChange",4,"ngFor","ngForOf"],["routerLink","/components/tables","fragment","fixed-header-table"],["routerLink","/components/scrollbar","fragment","virtual-for"],["tableTitle","Inputs"],["uxd-api-property","","name","uxTreeGrid","type","TreeGridItem[]",3,"required"],["uxd-api-property","","name","loadChildren","type","(parent: TreeGridItem) => TreeGridItem[] | Promise<TreeGridItem[]> | Observable<TreeGridItem[]>"],["tableTitle","Outputs"],["uxd-api-property","","name","rowsChange","type","TreeGridItem[]"],["uxd-api-property","","name","uxTreeGridRow","type","TreeGridItem",3,"required"],["uxd-api-property","","name","canExpand","type","boolean"],["uxd-api-property","","name","expanded","type","boolean"],["uxd-api-property","","name","expandedChange","type","boolean"],["tableTitle","Functions"],["uxd-api-property","","name","toggle"],["uxd-api-property","","name","collapse"],["uxd-api-property","","name","expand"],["uxd-api-property","","name","children","type","TreeGridItem[]"],["uxd-api-property","","name","state","type","TreeGridState"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"],["role","row",1,"clickable",3,"uxTreeGridRow","canExpand","expanded","uxSelectionItem","selected","expandedChange","selectedChange"],["treeGridRow","uxTreeGridRow"],["uxTreeGridIndent",""],[1,"treegrid-expander"],["aria-hidden","true","type","button","tabindex","-1",3,"click",4,"ngIf"],["aria-label","Toggle row selection",3,"value","valueChange"],[1,"treegrid-icon"],[3,"name"],["aria-hidden","true","type","button","tabindex","-1",3,"click"],["name","chevron-right","class","treegrid-expander-icon",4,"ngIf"],["class","spinner spinner-accent spinner-bounce-middle",4,"ngIf"],["name","chevron-right",1,"treegrid-expander-icon"],[1,"spinner","spinner-accent","spinner-bounce-middle"],["role","row",1,"clickable",3,"uxTreeGridRow","canExpand","expanded","uxSelectionItem","expandedChange"]],template:function(e,n){1&e&&(s.TgZ(0,"ux-accordion",0)(1,"ux-accordion-panel",1)(2,"table",2),s.NdJ("rowsChange",function(o){return n.rows=o}),s.TgZ(3,"thead")(4,"tr",3)(5,"th")(6,"ux-checkbox",4),s.NdJ("valueChange",function(o){return n.selectAll=o}),s.qZA(),s.TgZ(7,"span",5),s._uU(8,"Title"),s.qZA()(),s.TgZ(9,"th"),s._uU(10,"Date"),s.qZA()()(),s.TgZ(11,"tbody",6),s.YNc(12,_p,14,16,"tr",7),s.qZA()(),s.TgZ(13,"p",8),s._uU(14," Selected items: "),s.YNc(15,Tp,2,1,"span",9),s.YNc(16,Cp,2,0,"em",10),s.qZA()(),s.TgZ(17,"ux-accordion-panel",11)(18,"div",12)(19,"button",13),s.NdJ("click",function(){return n.setExpanded(n.asyncItems,!0)}),s._UZ(20,"ux-icon",14),s._uU(21," Expand All "),s.qZA(),s.TgZ(22,"button",13),s.NdJ("click",function(){return n.setExpanded(n.asyncItems,!1)}),s._UZ(23,"ux-icon",15),s._uU(24," Contract All "),s.qZA(),s.TgZ(25,"button",13),s.NdJ("click",function(){return n.clearChildren()}),s._UZ(26,"ux-icon",16),s._uU(27," Clear Cached Data "),s.qZA()(),s.TgZ(28,"table",17),s.NdJ("rowsChange",function(o){return n.asyncRows=o}),s.TgZ(29,"thead")(30,"tr",3)(31,"th")(32,"span",5),s._uU(33,"Name"),s.qZA()(),s.TgZ(34,"th"),s._uU(35,"Author"),s.qZA(),s.TgZ(36,"th"),s._uU(37,"Date"),s.qZA()()(),s.TgZ(38,"tbody",18),s.NdJ("uxSelectionChange",function(o){return n.asyncSelected=o}),s.YNc(39,Ep,16,15,"tr",19),s.qZA()(),s.TgZ(40,"p",8),s._uU(41," Selected items: "),s.YNc(42,Op,2,1,"span",9),s.YNc(43,Sp,2,0,"em",10),s.qZA()()(),s._UZ(44,"hr"),s.TgZ(45,"p"),s._uU(46," A tree grid allows hierarchical data to be displayed and navigated along with the benefits of a tabular presentation. A tree grid is created by applying the "),s.TgZ(47,"code"),s._uU(48,"uxTreeGrid"),s.qZA(),s._uU(49," directive to a "),s.TgZ(50,"code"),s._uU(51,"table"),s.qZA(),s._uU(52," element, and the "),s.TgZ(53,"code"),s._uU(54,"uxTreeGridRow"),s.qZA(),s._uU(55," to each of the rows. Many of the table components and directives can also be applied to a tree grid, such as selection and column sorting.\n"),s.qZA(),s.TgZ(56,"p"),s._uU(57,' The tree grid also supports lazy loading of data, as illustrated in the "Tree Grid with Asynchronous Loading" example above. This allows a function to be called when expanding certain rows, which can return the child items either synchronously or asynchronously. By doing so, the initial load time of a component containing a large tree grid can be reduced.\n'),s.qZA(),s.TgZ(58,"p")(59,"code"),s._uU(60,"uxTreeGrid"),s.qZA(),s._uU(61," can be combined with "),s.TgZ(62,"a",20),s._uU(63,"Fixed Header Table"),s.qZA(),s._uU(64," and "),s.TgZ(65,"a",21),s._uU(66,"Virtual For"),s.qZA(),s._uU(67," to enable virtual scrolling. This may help performance when rendering a tree grid with a large number of potential rows.\n"),s.qZA(),s.TgZ(68,"h4"),s._uU(69,"uxTreeGrid"),s.qZA(),s.TgZ(70,"p"),s._uU(71,"The following properties are available to configure the "),s.TgZ(72,"code"),s._uU(73,"uxTreeGrid"),s.qZA(),s._uU(74," directive."),s.qZA(),s.TgZ(75,"uxd-api-properties",22)(76,"tr",23),s._uU(77," The items to display in the tree grid. See below for details of the "),s.TgZ(78,"code"),s._uU(79,"TreeGridItem"),s.qZA(),s._uU(80," interface. "),s.qZA(),s.TgZ(81,"tr",24)(82,"p"),s._uU(83," A function which provides the array of child items of a particular row. This can be used for lazy loading of tree content, and supports observables and promises to allow loading data asynchronously. "),s.qZA(),s.TgZ(84,"p"),s._uU(85," Use this in combination with "),s.TgZ(86,"code"),s._uU(87,"canExpand"),s.qZA(),s._uU(88," on the "),s.TgZ(89,"code"),s._uU(90,"uxTreeGridRow"),s.qZA(),s._uU(91," to specify which rows can potentially have child items. "),s.qZA()()(),s.TgZ(92,"uxd-api-properties",25)(93,"tr",26),s._uU(94," Provides an array of the currently visible rows, based on the expanded/collapsed states. Bind this array to an "),s.TgZ(95,"code"),s._uU(96,"ngFor"),s.qZA(),s._uU(97," directive to populate the table rows, after applying any required filtering. "),s.qZA()(),s.TgZ(98,"h4"),s._uU(99,"uxTreeGridRow"),s.qZA(),s.TgZ(100,"p"),s._uU(101,"The following properties are available to configure the "),s.TgZ(102,"code"),s._uU(103,"uxTreeGridRow"),s.qZA(),s._uU(104," directive."),s.qZA(),s.TgZ(105,"uxd-api-properties",22)(106,"tr",27),s._uU(107," The item that the row displays. This should be a member of the array emitted by the "),s.TgZ(108,"code"),s._uU(109,"rowsChange"),s.qZA(),s._uU(110," output of the "),s.TgZ(111,"code"),s._uU(112,"uxTreeGrid"),s.qZA(),s._uU(113," directive, which manages the visible rows and their states. "),s.qZA(),s.TgZ(114,"tr",28),s._uU(115," Whether the row can expand or not. "),s.qZA(),s.TgZ(116,"tr",29),s._uU(117," Whether the row is expanded or not. This expression can used to programmatically control the expanded state of rows. "),s.qZA()(),s.TgZ(118,"uxd-api-properties",25)(119,"tr",30),s._uU(120," Emitted when the expanded state of the row changes. "),s.qZA()(),s.TgZ(121,"uxd-api-properties",31)(122,"tr",32),s._uU(123," Toggles the expanded state of the row. "),s.qZA(),s.TgZ(124,"tr",33),s._uU(125," Collapses the row, if it is expanded. "),s.qZA(),s.TgZ(126,"tr",34),s._uU(127," Expands the row, if it can be expanded. "),s.qZA()(),s.TgZ(128,"h4"),s._uU(129,"uxTreeGridIndent"),s.qZA(),s.TgZ(130,"p"),s._uU(131," Apply the "),s.TgZ(132,"code"),s._uU(133,"uxTreeGridIndent"),s.qZA(),s._uU(134," attribute directive to the first "),s.TgZ(135,"code"),s._uU(136,"td"),s.qZA(),s._uU(137," of every row to apply the correct level of indentation. By default the indentation is "),s.TgZ(138,"code"),s._uU(139,"25px"),s.qZA(),s._uU(140," however you can provide the attribute with a value indicating how many pixels it should indent.\n"),s.qZA(),s.TgZ(141,"h4"),s._uU(142,"TreeGridItem"),s.qZA(),s.TgZ(143,"p"),s._uU(144," The tree grid directives use the "),s.TgZ(145,"code"),s._uU(146,"TreeGridItem"),s.qZA(),s._uU(147," interface to define objects which can be displayed as rows. When defining a type for the data to load into a tree grid, ensure that it implements "),s.TgZ(148,"code"),s._uU(149,"TreeGridItem"),s.qZA(),s._uU(150,".\n"),s.qZA(),s.TgZ(151,"uxd-api-properties")(152,"tr",35)(153,"p"),s._uU(154," The child items. Providing this array will allow the row to be expanded, displaying the child items. "),s.qZA(),s.TgZ(155,"p"),s._uU(156," If the child items are to be lazy loaded when the user attempts to expand the row, leave this property unset and specify a "),s.TgZ(157,"code"),s._uU(158,"loadChildren"),s.qZA(),s._uU(159," function. The tree grid will automatically populate this array when the data is successfully loaded. "),s.qZA(),s.TgZ(160,"p"),s._uU(161," Set this property to undefined or null to trigger a subsequent call to "),s.TgZ(162,"code"),s._uU(163,"loadChildren"),s.qZA(),s._uU(164," when the user next expands the row. "),s.qZA()(),s.TgZ(165,"tr",36),s._uU(166," This property will be set by the tree grid to store the row's current state. For example, the "),s.TgZ(167,"code"),s._uU(168,"level"),s.qZA(),s._uU(169," property will indicate the row's depth within the tree hierarchy. "),s.qZA()(),s.TgZ(170,"h4"),s._uU(171,"Example Code"),s.qZA(),s.TgZ(172,"ux-tabset",37)(173,"ux-tab",38),s._UZ(174,"uxd-snippet",39),s.qZA(),s.TgZ(175,"ux-tab",40),s._UZ(176,"uxd-snippet",39),s.qZA()()),2&e&&(s.Q6J("collapseOthers",!0),s.xp6(1),s.Q6J("expanded",!0),s.xp6(1),s.Q6J("uxTreeGrid",n.items),s.xp6(4),s.Q6J("value",n.selectAll),s.xp6(5),s.Q6J("uxSelection",n.selected),s.xp6(1),s.Q6J("ngForOf",n.rows),s.xp6(3),s.Q6J("ngForOf",n.selected),s.xp6(1),s.Q6J("ngIf",0===(null==n.selected?null:n.selected.length)),s.xp6(12),s.Q6J("uxTreeGrid",n.asyncItems)("loadChildren",n.loadChildrenFn),s.xp6(10),s.Q6J("uxSelection",n.asyncSelected),s.xp6(1),s.Q6J("ngForOf",n.asyncRows),s.xp6(3),s.Q6J("ngForOf",n.asyncSelected),s.xp6(1),s.Q6J("ngIf",0===(null==n.asyncSelected?null:n.asyncSelected.length)),s.xp6(33),s.Q6J("required",!0),s.xp6(30),s.Q6J("required",!0),s.xp6(66),s.Q6J("minimal",!1),s.xp6(2),s.Q6J("content",n.snippets.compiled.appHtml),s.xp6(2),s.Q6J("content",n.snippets.compiled.appTs))},dependencies:[Bt.G,lp.Z,up.U,Ys.b,x.sg,x.O5,dp.$,kp.S,Ht.j,Jt.o,B.rH,fp.p,hp.Q,$t.A,Qt.i,vp,Ws,yp,x.uU],encapsulation:2}),_n=(0,Vt.gn)([(0,Lt.cG)("ComponentsTreeGridComponent")],_n);let Ip=(()=>{class t{getDocuments(){return new Promise(n=>{setTimeout(()=>{let a=[];for(let o=0;o<50;o++)a.push({name:`Document ${o}`});n(a)},1e3)})}getPictures(){return new Promise(n=>{setTimeout(()=>{let a=[];for(let o=0;o<50;o++)a.push({name:`IMG_${chance.pad(o,4)}`});n(a)},1e3)})}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275prov=s.Yz7({token:t,factory:t.\u0275fac,providedIn:"root"}),t})();var Ks=d(72779),Xs=d(46789);function Mp(t,e){if(1&t){const n=s.EpF();s.TgZ(0,"div",16)(1,"div",17)(2,"ux-checkbox",18),s.NdJ("valueChange",function(o){const r=s.CHM(n).$implicit,i=s.oxw();return s.KtG(i.setChecked(r,o))}),s.qZA(),s._UZ(3,"tree-node-expander",19),s.TgZ(4,"div",20),s.NdJ("focus",function(){const p=s.CHM(n).$implicit,r=s.oxw();return s.KtG(r.focus(p))})("click",function(){const p=s.CHM(n).$implicit,r=s.oxw();return s.KtG(r.setChecked(p,!p.data.checked))})("keydown",function(o){const r=s.CHM(n).$implicit,i=s.oxw();return s.KtG(i.setChecked(r,!r.data.checked,o))}),s._UZ(5,"ux-icon",21),s.TgZ(6,"span"),s._uU(7),s.qZA()()(),s._UZ(8,"tree-node-children",22),s.qZA()}if(2&t){const n=e.$implicit,a=e.templates,o=s.oxw();s.xp6(2),s.MGl("aria-label","Toggle selection of ",n.data.name,""),s.Q6J("value",n.data.checked)("indeterminateValue",-1),s.xp6(1),s.Q6J("node",n),s.xp6(1),s.ekj("node-content-wrapper-active",n.data.checked)("node-content-wrapper-focused",n.data.checked||n.isFocused),s.Q6J("tabindex",n===o.focused||!o.focused&&n.isRoot&&0===n.index?0:-1)("focusIf",n===o.focused),s.uIk("aria-expanded",n.isExpanded)("aria-level",n.level)("aria-selected",n.data.checked),s.xp6(1),s.Q6J("name",o.getIcon(n)),s.xp6(1),s.ekj("title",!0),s.xp6(1),s.Oqu(n.data.name),s.xp6(1),s.Q6J("node",n)("templates",a)}}function Zp(t,e){1&t&&s._UZ(0,"div",23)}let Tn=class extends jt.u{constructor(e){super(d(5023)),this._treeViewService=e,this.nodes=[{name:"Documents",hasChildren:!0,source:this._treeViewService.getDocuments},{name:"Pictures",hasChildren:!0,source:this._treeViewService.getPictures}],this.options={getChildren:n=>n.data.source?n.data.source():[]}}setChecked(e,n=e.data.checked,a){e.data.checked===n||a&&32!==a.keyCode||(this.setChildrenState(e,n),this.setParentNodeState(e.realParent),a&&a.preventDefault())}setChildrenState(e,n=e.data.checked){e.data.checked=n,e.children&&e.children.forEach(a=>this.setChildrenState(a,n))}setParentNodeState(e){if(!e)return;let n=e.children.every(o=>o.data.checked),a=e.children.every(o=>!o.data.checked);e.data.checked=!!n||!a&&-1,this.setParentNodeState(e.parent)}onChildrenLoaded(e){this.setChildrenState(e)}focus(e){e.focus(),e.treeModel.setFocus(!0)}updatedFocusedItem(){this.focused&&!this.isNodeVisible(this.focused)&&(this.focused=null)}isNodeVisible(e){return!!e.isRoot||!e.parent.isCollapsed&&this.isNodeVisible(e.parent)}getIcon(e){return e.hasChildren&&!e.isExpanded?"folder":e.hasChildren&&e.isExpanded?"folder-open":e.hasChildren?void 0:"document"}};function qp(t,e){if(1&t){const n=s.EpF();s.TgZ(0,"div",12),s.NdJ("focus",function(){const p=s.CHM(n).$implicit,r=s.oxw();return s.KtG(r.focus(p))})("blur",function(){const p=s.CHM(n).$implicit,r=s.oxw();return s.KtG(r.blur(p))}),s.TgZ(1,"div",13),s._UZ(2,"tree-node-expander",14)(3,"ux-icon",15),s.TgZ(4,"span"),s._uU(5),s.qZA()(),s._UZ(6,"tree-node-children",16),s.qZA()}if(2&t){const n=e.$implicit,a=e.templates,o=s.oxw();s.Q6J("tabindex",n===o.focused||!o.focused&&n.isRoot&&0===n.index?0:-1)("focusIf",n===o.focused),s.uIk("aria-level",n.level)("aria-expanded",n.hasChildren?n.isExpanded||!1:null),s.xp6(1),s.ekj("node-content-wrapper-active",n.isActive)("node-content-wrapper-focused",n.isFocused),s.xp6(1),s.Q6J("node",n),s.xp6(1),s.Q6J("name",o.getIcon(n)),s.xp6(2),s.Oqu(n.data.name),s.xp6(1),s.Q6J("node",n)("templates",a)}}Tn.\u0275fac=function(e){return new(e||Tn)(s.Y36(Ip))},Tn.\u0275cmp=s.Xpm({type:Tn,selectors:[["uxd-components-tree-view-custom-node"]],features:[s.qOj],decls:49,vars:7,consts:[[1,"tree-view-example-container"],["role","tree",3,"nodes","options","focus","stateChange","loadNodeChildren"],["tree",""],["treeNodeFullTemplate",""],["loadingTemplate",""],[1,"btn-container"],[1,"btn","button-secondary",3,"click"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"],["heading","CSS"],["heading","Service"],[1,"m-b-nil"],["href","https://github.com/CirclonGroup/angular-tree-component",1,"hyperlink"],["href","https://angular2-tree.readme.io/docs/",1,"hyperlink"],[1,"tree-node"],[1,"node-wrapper"],["tabindex","-1",3,"aria-label","value","indeterminateValue","valueChange"],[3,"node"],["uxFocusIndicator","","role","treeitem",1,"node-content-wrapper",3,"tabindex","focusIf","focus","click","keydown"],[3,"name"],["role","group",3,"node","templates"],[1,"spinner","spinner-accent","spinner-bounce-middle"]],template:function(e,n){if(1&e){const a=s.EpF();s.TgZ(0,"div",0)(1,"tree-root",1,2),s.NdJ("focus",function(p){return n.focused=p.node})("stateChange",function(){return n.updatedFocusedItem()})("loadNodeChildren",function(p){return n.onChildrenLoaded(p.node)}),s.YNc(3,Mp,9,19,"ng-template",null,3,s.W1O),s.YNc(5,Zp,1,0,"ng-template",null,4,s.W1O),s.qZA()(),s.TgZ(7,"div",5)(8,"button",6),s.NdJ("click",function(){s.CHM(a);const p=s.MAs(2);return s.KtG(p.treeModel.expandAll())}),s._uU(9,"Expand All Nodes"),s.qZA(),s.TgZ(10,"button",6),s.NdJ("click",function(){s.CHM(a);const p=s.MAs(2);return s.KtG(p.treeModel.collapseAll())}),s._uU(11,"Collapse All Nodes"),s.qZA()(),s._UZ(12,"hr"),s.TgZ(13,"p"),s._uU(14," The tree view component supports custom templates which can be used to further enhance its capabilities. One example of this is to add checkboxes to nodes making it possible to select multiple nodes, or even select/deselect an entire subtree.\n"),s.qZA(),s.TgZ(15,"p"),s._uU(16," The example above also shows how it is possible to lazy load child nodes only when the user expands the parent node.\n"),s.qZA(),s.TgZ(17,"p"),s._uU(18," The tree view also exposes a "),s.TgZ(19,"code"),s._uU(20,"treeModel"),s.qZA(),s._uU(21," object which provides functions to allow programmatic selection, expanding and contracting of nodes.\n"),s.qZA(),s.TgZ(22,"p"),s._uU(23," The example above can be created using the following sample code:\n"),s.qZA(),s.TgZ(24,"ux-tabset",7)(25,"ux-tab",8),s._UZ(26,"uxd-snippet",9),s.qZA(),s.TgZ(27,"ux-tab",10),s._UZ(28,"uxd-snippet",9),s.qZA(),s.TgZ(29,"ux-tab",11),s._UZ(30,"uxd-snippet",9),s.qZA(),s.TgZ(31,"ux-tab",12),s._UZ(32,"uxd-snippet",9),s.qZA()(),s.TgZ(33,"blockquote")(34,"p",13)(35,"b"),s._uU(36,"Dependencies: "),s.qZA(),s.TgZ(37,"a",14),s._uU(38,"@circlon/angular-tree-component"),s.qZA()(),s.TgZ(39,"p",13)(40,"b"),s._uU(41,"Modules: "),s.qZA(),s.TgZ(42,"span"),s._uU(43,"TreeModule"),s.qZA()(),s.TgZ(44,"p",13)(45,"b"),s._uU(46,"Documentation: "),s.qZA(),s.TgZ(47,"a",15),s._uU(48,"Angular Component Documentation"),s.qZA()()()}2&e&&(s.xp6(1),s.Q6J("nodes",n.nodes)("options",n.options),s.xp6(23),s.Q6J("minimal",!1),s.xp6(2),s.Q6J("content",n.snippets.compiled.appSnippetHtml),s.xp6(2),s.Q6J("content",n.snippets.compiled.appSnippetTs),s.xp6(2),s.Q6J("content",n.snippets.compiled.appSnippetCss),s.xp6(2),s.Q6J("content",n.snippets.compiled.serviceSnippetTs))},dependencies:[Bt.G,Ks.N,Ys.b,Ht.j,Xs.r,Jt.o,$t.A,Qt.i,js,Gt,Ut],styles:[".tree-view-example-container[_ngcontent-%COMP%]{height:250px}.node-content-wrapper[_ngcontent-%COMP%]{outline:none}.node-content-wrapper[_ngcontent-%COMP%]:focus{outline:1px dotted;outline:auto -webkit-focus-ring-color;outline-color:#00a7a2;outline-offset:0}.node-content-wrapper[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{margin-left:5px}.node-content-wrapper-focused[_ngcontent-%COMP%]{background-color:#e7f1f9}"]}),Tn=(0,Vt.gn)([(0,Lt.cG)("ComponentsTreeViewCustomNodeComponent")],Tn);let Cn=class extends jt.u{constructor(){super(d(24076)),this.nodes=[{id:1,name:"Documents",children:[{id:12,name:"Profiles",children:[{name:"Alcazar"},{name:"Citadel"},{name:"Donjon"}]},{id:11,name:"Word files",children:[{id:111,name:"Accounts",children:[{name:"Castle"},{name:"Estate"},{name:"Manor"},{name:"Mansion"},{name:"Villa"}]}]}]},{id:2,name:"Emails",children:[{id:21,name:"Inbox",children:[{name:"Invoice"},{name:"Order Confirmation"}]},{id:22,name:"Outbox",children:[{name:"Customer Support"}]}]},{id:3,name:"Pictures",children:[{name:"IMG_001.jpg"},{name:"IMG_002.jpg"},{name:"IMG_003.jpg"}]}]}focus(e){e.focus(),e.treeModel.setFocus(!0)}blur(e){this.focused===e&&(e.blur(),e.treeModel.setFocus(!1))}getIcon(e){return e.hasChildren&&!e.isExpanded?"folder":e.hasChildren&&e.isExpanded?"folder-open":e.hasChildren?void 0:"document"}};Cn.\u0275fac=function(e){return new(e||Cn)},Cn.\u0275cmp=s.Xpm({type:Cn,selectors:[["uxd-components-tree-view"]],features:[s.qOj],decls:67,vars:5,consts:[[1,"tree-view-example-container"],["role","tree",3,"nodes","focus"],["treeNodeFullTemplate",""],["href","https://angular2-tree.readme.io/docs/"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"],["heading","CSS"],[1,"m-b-nil"],["href","https://github.com/CirclonGroup/angular-tree-component",1,"hyperlink"],["href","https://angular2-tree.readme.io/docs/",1,"hyperlink"],["uxFocusIndicator","","role","treeitem",1,"tree-view-node",3,"tabindex","focusIf","focus","blur"],[1,"node-content-wrapper"],[1,"m-r-xs",3,"node"],[1,"m-r-xxs",3,"name"],["role","group",3,"node","templates"]],template:function(e,n){1&e&&(s.TgZ(0,"div",0)(1,"tree-root",1),s.NdJ("focus",function(o){return n.focused=o.node}),s.YNc(2,qp,7,13,"ng-template",null,2,s.W1O),s.qZA()(),s._UZ(4,"hr"),s.TgZ(5,"p"),s._uU(6," The Tree View component can be created by using the "),s.TgZ(7,"code"),s._uU(8,"tree-root"),s.qZA(),s._uU(9," tag. It allows tree content to be displayed in a familiar Explorer-like format. The component is highly extensible and supports the following features:\n"),s.qZA(),s.TgZ(10,"ul")(11,"li"),s._uU(12,"Custom Templates"),s.qZA(),s.TgZ(13,"li"),s._uU(14,"Drag & Drop"),s.qZA(),s.TgZ(15,"li"),s._uU(16,"Filtering"),s.qZA(),s.TgZ(17,"li"),s._uU(18,"Lazy Loading"),s.qZA(),s.TgZ(19,"li"),s._uU(20,"Virtual Scrolling"),s.qZA()(),s.TgZ(21,"p"),s._uU(22," The data to be displayed in the Tree View should be set by using the "),s.TgZ(23,"code"),s._uU(24,"nodes"),s.qZA(),s._uU(25," input on the component. Each node should have a "),s.TgZ(26,"code"),s._uU(27,"name"),s.qZA(),s._uU(28," property which will define the text displayed in the node.\n"),s.qZA(),s.TgZ(29,"p"),s._uU(30," A node may have child nodes by adding a "),s.TgZ(31,"code"),s._uU(32,"children"),s.qZA(),s._uU(33," property to the node object. Additional custom properties can also be added to a node object, for example an "),s.TgZ(34,"code"),s._uU(35,"id"),s.qZA(),s._uU(36,".\n"),s.qZA(),s.TgZ(37,"p"),s._uU(38," Full documentation on how to implement all the features listed above, and more, can be found on the "),s.TgZ(39,"a",3),s._uU(40,"component's website"),s.qZA(),s._uU(41,".\n"),s.qZA(),s.TgZ(42,"p"),s._uU(43," The following sample code can be used to create the example shown above:\n"),s.qZA(),s.TgZ(44,"ux-tabset",4)(45,"ux-tab",5),s._UZ(46,"uxd-snippet",6),s.qZA(),s.TgZ(47,"ux-tab",7),s._UZ(48,"uxd-snippet",6),s.qZA(),s.TgZ(49,"ux-tab",8),s._UZ(50,"uxd-snippet",6),s.qZA()(),s.TgZ(51,"blockquote")(52,"p",9)(53,"b"),s._uU(54,"Dependencies: "),s.qZA(),s.TgZ(55,"a",10),s._uU(56,"@circlon/angular-tree-component"),s.qZA()(),s.TgZ(57,"p",9)(58,"b"),s._uU(59,"Modules: "),s.qZA(),s.TgZ(60,"span"),s._uU(61,"TreeModule"),s.qZA()(),s.TgZ(62,"p",9)(63,"b"),s._uU(64,"Documentation: "),s.qZA(),s.TgZ(65,"a",11),s._uU(66,"Angular Component Documentation"),s.qZA()()()),2&e&&(s.xp6(1),s.Q6J("nodes",n.nodes),s.xp6(43),s.Q6J("minimal",!1),s.xp6(2),s.Q6J("content",n.snippets.compiled.appSnippetHtml),s.xp6(2),s.Q6J("content",n.snippets.compiled.appSnippetTs),s.xp6(2),s.Q6J("content",n.snippets.compiled.appSnippetCss))},dependencies:[Bt.G,Ks.N,Ht.j,Xs.r,Jt.o,$t.A,Qt.i,js,Gt,Ut],styles:[".tree-view-example-container[_ngcontent-%COMP%]{height:250px}.tree-view-node[_ngcontent-%COMP%]{outline:none}.tree-view-node.ux-focus-indicator-active[_ngcontent-%COMP%] > .node-content-wrapper[_ngcontent-%COMP%]{outline:1px dotted;outline:auto -webkit-focus-ring-color;outline-color:#00a7a2;outline-offset:0}.node-content-wrapper[_ngcontent-%COMP%]{display:flex;align-items:center}"]}),Cn=(0,Vt.gn)([(0,Lt.cG)("ComponentsTreeViewComponent")],Cn);const Fp=[_n,Cn,Tn],Rp=[{path:"**",component:cp.R,data:{category:Pt.N.resolveCategoryData(Pt.I.Components,"Tree View")}}];let Gp=(()=>{class t{constructor(n,a){a.registerResolver(n,Fp)}}return t.\u0275fac=function(n){return new(n||t)(s.LFG(s._Vd),s.LFG(Pt.N))},t.\u0275mod=s.oAB({type:t}),t.\u0275inj=s.cJS({imports:[mn.jKR,mn.fxp,mn.nDK,x.ez,ip.N,mn.kDY,Z.u5,mn.QX1,B.Bz.forChild(Rp),mn.I95,mn.f_l,mn.nvO,rp]}),t})()}}]);